{"ast":null,"code":"import _regeneratorRuntime from \"/home/chuka/joe/ChopChowSD/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/chuka/joe/ChopChowSD/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/home/chuka/joe/ChopChowSD/client/src/components/vsm2/VSMealsPage.js\";\nimport React, { Component } from \"react\";\nimport MyModal from \"./Mymodal\";\nimport WithScrollbar from \"./product_slider/WithScrollbar\"; // import \"./MealsPage.scoped.scss\";\n\nimport { Row } from 'react-bootstrap';\nimport axios from '../../util/Api';\nimport { S3Client, ListObjectsCommand } from \"@aws-sdk/client-s3\"; //No need to Initialize the Amazon Cognito credentials provider\n// Because this loads all AWS libraries and we can simply connect to s3 as below\n// AWS.config.region = 'us-west-1'; // Region\n// AWS.config.credentials = new AWS.CognitoIdentityCredentials({\n//     IdentityPoolId: 'us-west-1:4aa53863-5b7b-484c-8474-b95bc4710bbf',\n// });\n\n/**\n * We still want to create a new template that will allow for individual retrieval of images as neccessary for vsm admin, vsm users and meals page.\n */\n// Load the required clients and packages for aws js sdk client side \n\nconst _require = require(\"@aws-sdk/client-cognito-identity\"),\n      CognitoIdentityClient = _require.CognitoIdentityClient;\n\nconst _require2 = require(\"@aws-sdk/credential-provider-cognito-identity\"),\n      fromCognitoIdentityPool = _require2.fromCognitoIdentityPool; // Initialize the Amazon Cognito credentials provider\n\n\nconst REGION = \"us-west-1\"; //e.g., 'us-east-1'\n\nconst s3 = new S3Client({\n  region: REGION,\n  credentials: fromCognitoIdentityPool({\n    client: new CognitoIdentityClient({\n      region: REGION\n    }),\n    identityPoolId: \"us-west-1:4aa53863-5b7b-484c-8474-b95bc4710bbf\" // IDENTITY_POOL_ID e.g., eu-west-1:xxxxxx-xxxx-xxxx-xxxx-xxxxxxxxx\n\n  })\n});\n\nclass VSMealsPage extends Component {\n  // Mongo\n  constructor(props) {\n    super(props);\n\n    this.onClickMealCard = (i, col_count) => {\n      if (i === this.state.selected_index) this.setState({\n        slider_flag: !this.state.slider_flag\n      });else this.setState({\n        slider_flag: true\n      });\n      this.setState({\n        selected_index: i\n      });\n      this.setState({\n        selectedCard_mealData: this.state.products[i]\n      });\n      this.setState({\n        modalIsOpen: true\n      });\n      this.setState({\n        firstPart_ind: (parseInt(i / col_count) + 1) * col_count\n      });\n    };\n\n    this.setMealSliderModal = () => {\n      this.setState({\n        mealSlider_Flag: true\n      });\n    };\n\n    this.removeMealSliderModal = () => {\n      this.setState({\n        mealSlider_Flag: false\n      });\n    };\n\n    this.onhandleLoadMore = () => {\n      let count = this.state.currentMealCount;\n      if (count >= this.state.products.length) this.setState({\n        currentMealCount: this.state.products.length\n      });else this.setState({\n        currentMealCount: count + 10\n      });\n    };\n\n    this.update = () => {\n      let col_count = 1;\n      if (window.innerWidth > 1200) col_count = 4;else if (window.innerWidth > 900 && window.innerWidth < 1200) col_count = 3;else if (window.innerWidth > 500 && window.innerWidth < 900) col_count = 2;\n      if (this.state.products === null && window.innerWidth > 500 && window.innerHeight > 500) col_count = 4; // if(this.state.products.length < 4 && window.innerWidth > 500 && window.innerHeight > 500) col_count = 4; //Math.min(count, this.props.products.length);\n\n      this.setState({\n        col_count: col_count\n      });\n    };\n\n    window.addEventListener(\"resize\", this.update);\n    this.state = {\n      products: [],\n      width: 0,\n      firstPart_ind: 12,\n      slider_flag: false,\n      selectedCard_mealData: null,\n      selected_index: 0,\n      selectedCardID: \"\",\n      mealSlider_Flag: false,\n      currentMealCount: 12,\n      mealList: null,\n      col_count: 1\n    };\n  } //////////////////////////////////////////////////////////////////////////////////////////////\n\n\n  componentDidMount() {\n    this.update();\n  }\n\n  //////////////////////////////////////////////////////////////////////////////////////////////\n  render() {\n    const selectedCard_mealData = this.state.selectedCard_mealData;\n    const items = [];\n    let count = Math.min(this.state.products.length, this.state.currentMealCount);\n\n    if (this.state.products.length > 0) {\n      // Meal Cards displayed before selected card\n      for (let i = 0; i < Math.min(count, this.state.firstPart_ind); i += this.state.col_count) {\n        const tmp_item = [];\n\n        for (let j = 0; j < this.state.col_count; j++) {\n          if (i + j >= Math.min(count, this.state.firstPart_ind)) break;\n          const value = this.state.products[i + j];\n          tmp_item.push(\n          /*#__PURE__*/\n          React.createElement(\"div\", {\n            key: i + j,\n            className: \"col-sm-\".concat(12 / this.state.col_count, \" mealContainer\"),\n            style: {\n              justifyContent: \"center\"\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 13\n            }\n          },\n          /*#__PURE__*/\n          React.createElement(\"div\", {\n            className: \"meal-card\",\n            onClick: () => this.onClickMealCard(i + j, this.state.col_count),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 13\n            }\n          },\n          /*#__PURE__*/\n          React.createElement(\"div\", {\n            style: containerStyle,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 15\n            }\n          },\n          /*#__PURE__*/\n          React.createElement(\"div\", {\n            style: {\n              textAlign: \"center\"\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 17\n            }\n          },\n          /*#__PURE__*/\n          React.createElement(\"img\", {\n            src: value.mealImage,\n            className: \"images\",\n            style: {\n              width: \"200px\",\n              height: \"200px\"\n            },\n            alt: \"/\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 19\n            }\n          })),\n          /*#__PURE__*/\n          React.createElement(\"div\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 17\n            }\n          },\n          /*#__PURE__*/\n          React.createElement(\"span\", {\n            style: {\n              color: \"orange\"\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 19\n            }\n          }, value.label), \" \",\n          /*#__PURE__*/\n          React.createElement(\"br\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 75\n            }\n          }),\n          /*#__PURE__*/\n          React.createElement(\"span\", {\n            style: {\n              color: \"grey\"\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 19\n            }\n          }, \"View Details | \", value.cookTime, \"  mins to prepare\"),\n          /*#__PURE__*/\n          React.createElement(\"span\", {\n            style: {\n              color: \"black\"\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 19\n            }\n          }))))));\n        }\n\n        items.push(\n        /*#__PURE__*/\n        React.createElement(Row, {\n          key: i,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 11\n          }\n        }, \" \", tmp_item));\n      } // Meal card for selected card ONLY including Selected Card ingredient images on display\n\n\n      if (selectedCard_mealData && this.state.slider_flag) {\n        items.push(\n        /*#__PURE__*/\n        React.createElement(Row, {\n          key: Math.min(count, this.state.firstPart_ind),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 11\n          }\n        },\n        /*#__PURE__*/\n        React.createElement(\"div\", {\n          className: \"col-sm-12\",\n          style: {\n            background: \"#ffffff\"\n          },\n          key: \"1000001\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 13\n          }\n        },\n        /*#__PURE__*/\n        React.createElement(\"div\", {\n          style: {\n            width: \"95%\",\n            margin: \"auto\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 15\n          }\n        },\n        /*#__PURE__*/\n        React.createElement(\"div\", {\n          className: \"detail-card-explain\",\n          id: selectedCard_mealData._id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 17\n          }\n        },\n        /*#__PURE__*/\n        React.createElement(\"div\", {\n          style: {\n            fontSize: \"18px\",\n            paddingTop: \"20px\",\n            paddingBottom: \"20px\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 21\n          }\n        }, selectedCard_mealData.intro)),\n        /*#__PURE__*/\n        React.createElement(\"div\", {\n          id: selectedCard_mealData._id + \"products\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 19\n          }\n        },\n        /*#__PURE__*/\n        React.createElement(WithScrollbar, {\n          products: selectedCard_mealData.product_slider,\n          col_count: this.state.col_count,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 21\n          }\n        })),\n        /*#__PURE__*/\n        React.createElement(MyModal, {\n          value: selectedCard_mealData,\n          mealPrep: selectedCard_mealData.instructions,\n          ingredientsList: selectedCard_mealData.newer_ingredient_format,\n          func_setMealFlag: this.setMealSliderModal,\n          func_removeMealFlag: this.removeMealSliderModal,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 19\n          }\n        })))));\n      } // Meal Cards displayed after selected card\n\n\n      for (let i = Math.min(count, this.state.firstPart_ind); i < count; i += this.state.col_count) {\n        const tmp_item = [];\n\n        for (let j = 0; j < this.state.col_count; j++) {\n          if (i + j >= count) break;\n          const value = this.state.products[i + j];\n          tmp_item.push(\n          /*#__PURE__*/\n          React.createElement(\"div\", {\n            key: i + j,\n            className: \"col-sm-\".concat(12 / this.state.col_count, \" mealContainer\"),\n            style: {\n              justifyContent: \"center\"\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 15\n            }\n          },\n          /*#__PURE__*/\n          React.createElement(\"div\", {\n            className: \"meal-card\",\n            onClick: () => this.onClickMealCard(i + j, this.state.col_count),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 17\n            }\n          },\n          /*#__PURE__*/\n          React.createElement(\"div\", {\n            style: containerStyle,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 19\n            }\n          },\n          /*#__PURE__*/\n          React.createElement(\"div\", {\n            style: {\n              textAlign: \"center\"\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 21\n            }\n          },\n          /*#__PURE__*/\n          React.createElement(\"img\", {\n            src: value.mealImage,\n            className: \"images\",\n            style: {\n              width: \"200px\",\n              height: \"200px\"\n            },\n            alt: \"/\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 23\n            }\n          })),\n          /*#__PURE__*/\n          React.createElement(\"div\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 21\n            }\n          },\n          /*#__PURE__*/\n          React.createElement(\"span\", {\n            style: {\n              color: \"orange\"\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 23\n            }\n          }, value.label), \" \",\n          /*#__PURE__*/\n          React.createElement(\"br\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 79\n            }\n          }),\n          /*#__PURE__*/\n          React.createElement(\"span\", {\n            style: {\n              color: \"grey\"\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 23\n            }\n          }, \"View Details | \", value.cookTime, \"  mins to prepare\"),\n          /*#__PURE__*/\n          React.createElement(\"span\", {\n            style: {\n              color: \"black\"\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 23\n            }\n          }))))));\n        }\n\n        items.push(\n        /*#__PURE__*/\n        React.createElement(Row, {\n          key: i + 1,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 11\n          }\n        }, tmp_item));\n      }\n    } else {\n      console.log(\"Open space to code in here\");\n      items.push(\n      /*#__PURE__*/\n      React.createElement(\"div\", {\n        id: \"viewer\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 18\n        }\n      }, \" \"));\n    }\n    /**\n     * s3 logic to call amazon\n     * \n     */\n    // A utility function to create HTML.\n\n\n    function getHtml(template) {\n      return template.join(\"\\n\");\n    } // Make the getHTML function available to the browser\n\n\n    window.getHTML = getHtml; // List the photo albums that exist in the bucket\n\n    var albumBucketName = \"chopchowmeals\"; //BUCKET_NAME\n\n    const listMeals =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var data, productsList, numberOfsuggestedMealsToDisplay, products, href, bucketUrl, photos, message, htmlTemplate;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return s3.send(new ListObjectsCommand({\n                Bucket: albumBucketName,\n                MaxKeys: 1\n              }));\n\n            case 3:\n              data = _context.sent;\n              productsList = data;\n              numberOfsuggestedMealsToDisplay = productsList.Contents.length;\n\n              if (productsList && numberOfsuggestedMealsToDisplay !== 0) {\n                console.log(\"suggested meals do return with length of:\");\n                console.log(numberOfsuggestedMealsToDisplay);\n                products = [];\n                href = \"https://s3.\" + REGION + \".amazonaws.com/\";\n                bucketUrl = href + albumBucketName + \"/\";\n                photos = data.Contents.map(function (photo) {\n                  // var photoKey = photo.Key;\n                  // var photoUrl = bucketUrl + encodeURIComponent(photoKey);\n                  return getHtml([\"<span>\", \"<div>\", \"<br/>\", '<img style=\"width:128px;height:128px;\" src=\"' + bucketUrl + photo.Key + '\"/>', \"</div>\", \"<div>\", // \"<span>\",\n                  // photoKey.replace(albumPhotosKey, \"\"),\n                  // \"</span>\",\n                  \"</div>\", \"</span>\"]);\n                });\n                message = photos.length ? \"<p>The following photos are present.</p>\" : \"<p>There are no photos in this album.</p>\";\n                htmlTemplate = [\"<div>\", '<button onclick=\"listAlbums()\">', \"Back To albums\", \"</button>\", \"</div>\", // \"<h2>\",\n                // \"Album: \" + albumName,\n                // \"</h2>\",\n                message, \"<div>\", getHtml(photos), \"</div>\", // \"<h2>\",\n                // \"End of album: \" + albumName,\n                // \"</h2>\",\n                \"<div>\", '<button onclick=\"listAlbums()\">', \"Back To albums\", \"</button>\", \"</div>\"];\n                document.getElementById(\"viewer\").innerHTML = getHtml(htmlTemplate);\n                document.getElementsByTagName(\"img\")[0].setAttribute(\"style\", \"display:none;\");\n              } else {\n                console.log(\"shows products do not return\");\n              }\n\n              console.log(data);\n              _context.next = 13;\n              break;\n\n            case 10:\n              _context.prev = 10;\n              _context.t0 = _context[\"catch\"](0);\n              return _context.abrupt(\"return\", alert(\"There was an error listing your meals: \" + _context.t0.message));\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[0, 10]]);\n      }));\n\n      return function listMeals() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    listMeals(); // Make the listMeals function available to the browser\n\n    window.listMeals = listMeals;\n    return (\n      /*#__PURE__*/\n      React.createElement(\"div\", {\n        className: \"meals-Page\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 7\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(\"div\", {\n        id: \"title\",\n        className: \"meal-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 9\n        }\n      }, \" \",\n      /*#__PURE__*/\n      React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 49\n        }\n      }, \"Meals\"), \" \"),\n      /*#__PURE__*/\n      React.createElement(\"div\", {\n        className: \"mealPage-container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 9\n        }\n      }, items),\n      /*#__PURE__*/\n      React.createElement(\"section\", {\n        className: \"loadmore-section\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 9\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(\"button\", {\n        className: \"btn-loadmore\",\n        onClick: () => this.onhandleLoadMore(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 11\n        }\n      }, \"Load More\")))\n    );\n  }\n\n}\n\nexport default VSMealsPage;\nconst containerStyle = {\n  display: \"inline-block\",\n  width: \"100%\",\n  height: \"100%\"\n};","map":{"version":3,"sources":["/home/chuka/joe/ChopChowSD/client/src/components/vsm2/VSMealsPage.js"],"names":["React","Component","MyModal","WithScrollbar","Row","axios","S3Client","ListObjectsCommand","require","CognitoIdentityClient","fromCognitoIdentityPool","REGION","s3","region","credentials","client","identityPoolId","VSMealsPage","constructor","props","onClickMealCard","i","col_count","state","selected_index","setState","slider_flag","selectedCard_mealData","products","modalIsOpen","firstPart_ind","parseInt","setMealSliderModal","mealSlider_Flag","removeMealSliderModal","onhandleLoadMore","count","currentMealCount","length","update","window","innerWidth","innerHeight","addEventListener","width","selectedCardID","mealList","componentDidMount","render","items","Math","min","tmp_item","j","value","push","justifyContent","containerStyle","textAlign","mealImage","height","color","label","cookTime","background","margin","_id","fontSize","paddingTop","paddingBottom","intro","product_slider","instructions","newer_ingredient_format","console","log","getHtml","template","join","getHTML","albumBucketName","listMeals","send","Bucket","MaxKeys","data","productsList","numberOfsuggestedMealsToDisplay","Contents","href","bucketUrl","photos","map","photo","Key","message","htmlTemplate","document","getElementById","innerHTML","getElementsByTagName","setAttribute","alert","display"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport MyModal from \"./Mymodal\";\nimport WithScrollbar from \"./product_slider/WithScrollbar\";\n// import \"./MealsPage.scoped.scss\";\nimport { Row } from 'react-bootstrap';\nimport axios from '../../util/Api';\nimport { S3Client, ListObjectsCommand } from \"@aws-sdk/client-s3\";\n\n//No need to Initialize the Amazon Cognito credentials provider\n// Because this loads all AWS libraries and we can simply connect to s3 as below\n// AWS.config.region = 'us-west-1'; // Region\n// AWS.config.credentials = new AWS.CognitoIdentityCredentials({\n//     IdentityPoolId: 'us-west-1:4aa53863-5b7b-484c-8474-b95bc4710bbf',\n// });\n\n/**\n * We still want to create a new template that will allow for individual retrieval of images as neccessary for vsm admin, vsm users and meals page.\n */\n\n// Load the required clients and packages for aws js sdk client side \nconst { CognitoIdentityClient } = require(\"@aws-sdk/client-cognito-identity\");\nconst {\n  fromCognitoIdentityPool,\n} = require(\"@aws-sdk/credential-provider-cognito-identity\");\n\n\n// Initialize the Amazon Cognito credentials provider\nconst REGION = \"us-west-1\"; //e.g., 'us-east-1'\nconst s3 = new S3Client({\n  region: REGION,\n  credentials: fromCognitoIdentityPool({\n    client: new CognitoIdentityClient({ region: REGION }),\n    identityPoolId: \"us-west-1:4aa53863-5b7b-484c-8474-b95bc4710bbf\", // IDENTITY_POOL_ID e.g., eu-west-1:xxxxxx-xxxx-xxxx-xxxx-xxxxxxxxx\n  }),\n});\n\nclass VSMealsPage extends Component {\n  // Mongo\n  entries;\n\n  constructor(props) {\n    super(props);\n\n    window.addEventListener(\"resize\", this.update);\n    this.state = {\n      products: [],\n      width: 0,\n      firstPart_ind: 12,\n      slider_flag: false,\n      selectedCard_mealData: null,\n      selected_index: 0,\n      selectedCardID: \"\",\n\n      mealSlider_Flag: false,\n      currentMealCount: 12,\n\n      mealList:null,\n      col_count:1\n    };\n  }\n\n  //////////////////////////////////////////////////////////////////////////////////////////////\n  componentDidMount() {\n    this.update();\n};\n\n  //////////////////////////////////////////////////////////////////////////////////////////////\n  onClickMealCard = ( i, col_count )=>{\n    if(i === this.state.selected_index) this.setState({slider_flag: !this.state.slider_flag})\n    else this.setState({slider_flag: true})\n\n    this.setState({ selected_index: i});\n    this.setState({ selectedCard_mealData: this.state.products[i]});\n    this.setState({ modalIsOpen: true });  \n    this.setState({ firstPart_ind: (parseInt((i )/ col_count)+1)*col_count});   \n  }\n\n  //////////////////////////////////////////////////////////////////////////////////////////////\n  setMealSliderModal=()=>{\n    this.setState({mealSlider_Flag: true});\n  }\n\n  //////////////////////////////////////////////////////////////////////////////////////////////\n  removeMealSliderModal=()=>{\n    this.setState({mealSlider_Flag: false});\n  }\n\n  //////////////////////////////////////////////////////////////////////////////////////////////\n  onhandleLoadMore = () => {\n    let count = this.state.currentMealCount;\n    if(count>= this.state.products.length)   this.setState({currentMealCount: this.state.products.length});\n    else this.setState({currentMealCount: count + 10 });\n  }\n\n  //////////////////////////////////////////////////////////////////////////////////////////////\n  update = () => {\n    let col_count = 1;\n    if (window.innerWidth > 1200) col_count = 4;\n    else if(window.innerWidth > 900 && window.innerWidth < 1200) col_count = 3;\n    else if(window.innerWidth > 500 && window.innerWidth < 900) col_count = 2;\n\n    if(this.state.products === null && window.innerWidth > 500 && window.innerHeight > 500) col_count = 4;\n    // if(this.state.products.length < 4 && window.innerWidth > 500 && window.innerHeight > 500) col_count = 4; //Math.min(count, this.props.products.length);\n\n    this.setState({col_count: col_count});\n  };\n\n\n  //////////////////////////////////////////////////////////////////////////////////////////////\n  render() {\n    const {selectedCard_mealData} = this.state;\n    const items = [];\n    let count = Math.min(this.state.products.length, this.state.currentMealCount);\n\n    if(this.state.products.length>0){\n      // Meal Cards displayed before selected card\n      for (let i = 0; i< Math.min(count, this.state.firstPart_ind); i+= this.state.col_count) {\n        const tmp_item = []\n        for(let j = 0; j<this.state.col_count; j++)\n        {\n          if(i+j>= Math.min(count, this.state.firstPart_ind)) break;\n          const value = this.state.products[i+j];  \n          tmp_item.push(\n            <div key={i+j} className={`col-sm-${12/ this.state.col_count} mealContainer`} style={{ justifyContent:\"center\"}}>\n            <div className=\"meal-card\" onClick={()=>this.onClickMealCard(i+j, this.state.col_count)}>\n              <div style={containerStyle}>\n                <div style={{ textAlign:\"center\" }}>\n                  <img src={value.mealImage} className=\"images\" style={{ width: \"200px\", height: \"200px\" }} alt=\"/\"></img>\n                </div>\n                <div>\n                  <span style={{ color: \"orange\" }} >{value.label}</span> <br></br>\n                  <span style={{ color: \"grey\" }}>View Details | {value.cookTime}  mins to prepare</span>\n                  <span style={{ color: \"black\" }}></span>\n                </div>              \n              </div>\n            </div>\n          </div>\n          )\n        }\n\n        items.push(\n          <Row key={i}> {tmp_item}</Row>\n        )\n      }\n\n      // Meal card for selected card ONLY including Selected Card ingredient images on display\n      if(selectedCard_mealData && this.state.slider_flag){\n        items.push(\n          <Row key={Math.min(count, this.state.firstPart_ind)}>\n            <div className=\"col-sm-12\" style={{background:\"#ffffff\"}} key=\"1000001\">\n              <div style={{width: \"95%\", margin:\"auto\"}}>\n                <div className =\"detail-card-explain\" id={selectedCard_mealData._id} >\n                    <div style={{fontSize:\"18px\", paddingTop:\"20px\", paddingBottom:\"20px\"}}>{selectedCard_mealData.intro}\n                    </div>\n                  </div>\n\n                  <div id={selectedCard_mealData._id + \"products\"}>                  \n                    <WithScrollbar products={selectedCard_mealData.product_slider} col_count={this.state.col_count}/>\n                  </div>\n\n                  <MyModal \n                    value={selectedCard_mealData}\n                    mealPrep={selectedCard_mealData.instructions}\n                    ingredientsList={selectedCard_mealData.newer_ingredient_format }\n                    func_setMealFlag = {this.setMealSliderModal}\n                    func_removeMealFlag = {this.removeMealSliderModal}\n                  />\n                </div>\n            </div>\n          </Row>\n        )\n      }\n     \n      // Meal Cards displayed after selected card\n      for (let i = Math.min(count, this.state.firstPart_ind); i< count; i+=this.state.col_count) {\n        const tmp_item = []\n        for(let j = 0; j<this.state.col_count; j++)\n        {\n          if(i+j>= count) break;\n            const value = this.state.products[i+j];   \n            tmp_item.push(\n              <div key={i+j} className={`col-sm-${12/ this.state.col_count} mealContainer`} style={{ justifyContent:\"center\"}}>\n                <div className=\"meal-card\" onClick={()=>this.onClickMealCard(i+j, this.state.col_count)}>\n                  <div style={containerStyle}>\n                    <div style={{ textAlign:\"center\" }}>\n                      <img\n                        src={value.mealImage}\n                        className=\"images\"\n                        style={{ width: \"200px\", height: \"200px\" }}\n                        alt=\"/\"\n                      ></img>\n                    </div>\n                    <div>\n                      <span style={{ color: \"orange\" }} >{value.label}</span> <br></br>\n                      <span style={{ color: \"grey\" }}>View Details | {value.cookTime}  mins to prepare</span>\n                      <span style={{ color: \"black\" }}></span>\n                    </div>              \n                  </div>\n\n                </div>\n              </div>\n            )\n        }\n       \n        items.push(\n          <Row key={i+1}>{tmp_item}</Row>\n        );\n      }\n    }\n    else{\n      console.log(\"Open space to code in here\");\n      items.push(<div id = 'viewer'> </div>);\n    }\n\n\n    /**\n     * s3 logic to call amazon\n     * \n     */\n    // A utility function to create HTML.\nfunction getHtml(template) {\n  return template.join(\"\\n\");\n}\n// Make the getHTML function available to the browser\nwindow.getHTML = getHtml;\n\n// List the photo albums that exist in the bucket\nvar albumBucketName = \"chopchowmeals\"; //BUCKET_NAME\nconst listMeals = async () => {\n  try {\n    const data = await s3.send(\n      new ListObjectsCommand({ Bucket: albumBucketName, MaxKeys:1 })\n    );\n\n      var productsList = data;\n      var numberOfsuggestedMealsToDisplay = productsList.Contents.length;\n      if(productsList && numberOfsuggestedMealsToDisplay !== 0){\n        console.log(\"suggested meals do return with length of:\");\n        console.log(numberOfsuggestedMealsToDisplay);\n        let products = [];\n\n        var href = \"https://s3.\" + REGION + \".amazonaws.com/\";\n        var bucketUrl = href + albumBucketName + \"/\";\n        var photos = data.Contents.map(function (photo) {\n          // var photoKey = photo.Key;\n          // var photoUrl = bucketUrl + encodeURIComponent(photoKey);\n          return getHtml([\n            \"<span>\",\n            \"<div>\",\n            \"<br/>\",\n            '<img style=\"width:128px;height:128px;\" src=\"' + bucketUrl + photo.Key + '\"/>',\n            \"</div>\",\n            \"<div>\",\n            // \"<span>\",\n            // photoKey.replace(albumPhotosKey, \"\"),\n            // \"</span>\",\n            \"</div>\",\n            \"</span>\",\n          ]);\n        });\n        var message = photos.length\n          ? \"<p>The following photos are present.</p>\"\n          : \"<p>There are no photos in this album.</p>\";\n        var htmlTemplate = [\n          \"<div>\",\n          '<button onclick=\"listAlbums()\">',\n          \"Back To albums\",\n          \"</button>\",\n          \"</div>\",\n          // \"<h2>\",\n          // \"Album: \" + albumName,\n          // \"</h2>\",\n          message,\n          \"<div>\",\n          getHtml(photos),\n          \"</div>\",\n          // \"<h2>\",\n          // \"End of album: \" + albumName,\n          // \"</h2>\",\n          \"<div>\",\n          '<button onclick=\"listAlbums()\">',\n          \"Back To albums\",\n          \"</button>\",\n          \"</div>\",\n        ];\n        document.getElementById(\"viewer\").innerHTML = getHtml(htmlTemplate);\n        document\n          .getElementsByTagName(\"img\")[0]\n          .setAttribute(\"style\", \"display:none;\");\n    \n      }\n      else{\n        console.log(\"shows products do not return\");\n      }\n  console.log(data);\n} catch (err) {\n  return alert(\"There was an error listing your meals: \" + err.message);\n}\n};\nlistMeals();\n// Make the listMeals function available to the browser\nwindow.listMeals = listMeals;\n\n    \n    return (\n      <div className=\"meals-Page\">\n        <div id=\"title\" className=\"meal-title\"> <b>Meals</b> </div>\n        <div className=\"mealPage-container\">\n            {items}        \n        </div>\n        <section className=\"loadmore-section\">\n          <button className=\"btn-loadmore\" onClick={()=>this.onhandleLoadMore()}>Load More</button>\n        </section>\n      </div>\n    )\n  };\n}\n\nexport default VSMealsPage;\n\nconst containerStyle = {\n  display: \"inline-block\",\n  width: \"100%\",\n  height: \"100%\"\n};\n"]},"metadata":{},"sourceType":"module"}