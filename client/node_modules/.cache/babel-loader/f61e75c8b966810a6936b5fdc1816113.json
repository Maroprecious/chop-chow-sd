{"ast":null,"code":"import { __awaiter, __generator } from \"tslib\";\nimport { blobReader } from \"@aws-sdk/chunked-blob-reader\";\nexport var blobHasher = function blobHasher(hashCtor, blob) {\n  return __awaiter(this, void 0, void 0, function () {\n    var hash;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          hash = new hashCtor();\n          return [4, blobReader(blob, function (chunk) {\n            hash.update(chunk);\n          })];\n\n        case 1:\n          _a.sent();\n\n          return [2, hash.digest()];\n      }\n    });\n  });\n};","map":{"version":3,"sources":["/home/chuka/joe/ChopChowSD/node_modules/@aws-sdk/hash-blob-browser/dist-es/index.js"],"names":["__awaiter","__generator","blobReader","blobHasher","hashCtor","blob","hash","_a","label","chunk","update","sent","digest"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,WAApB,QAAuC,OAAvC;AACA,SAASC,UAAT,QAA2B,8BAA3B;AACA,OAAO,IAAIC,UAAU,GAAG,SAASA,UAAT,CAAoBC,QAApB,EAA8BC,IAA9B,EAAoC;AACxD,SAAOL,SAAS,CAAC,IAAD,EAAO,KAAK,CAAZ,EAAe,KAAK,CAApB,EAAuB,YAAY;AAC/C,QAAIM,IAAJ;AACA,WAAOL,WAAW,CAAC,IAAD,EAAO,UAAUM,EAAV,EAAc;AACnC,cAAQA,EAAE,CAACC,KAAX;AACI,aAAK,CAAL;AACIF,UAAAA,IAAI,GAAG,IAAIF,QAAJ,EAAP;AACA,iBAAO,CAAC,CAAD,EAAIF,UAAU,CAACG,IAAD,EAAO,UAAUI,KAAV,EAAiB;AACrCH,YAAAA,IAAI,CAACI,MAAL,CAAYD,KAAZ;AACH,WAFgB,CAAd,CAAP;;AAGJ,aAAK,CAAL;AACIF,UAAAA,EAAE,CAACI,IAAH;;AACA,iBAAO,CAAC,CAAD,EAAIL,IAAI,CAACM,MAAL,EAAJ,CAAP;AARR;AAUH,KAXiB,CAAlB;AAYH,GAde,CAAhB;AAeH,CAhBM","sourcesContent":["import { __awaiter, __generator } from \"tslib\";\nimport { blobReader } from \"@aws-sdk/chunked-blob-reader\";\nexport var blobHasher = function blobHasher(hashCtor, blob) {\n    return __awaiter(this, void 0, void 0, function () {\n        var hash;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    hash = new hashCtor();\n                    return [4, blobReader(blob, function (chunk) {\n                            hash.update(chunk);\n                        })];\n                case 1:\n                    _a.sent();\n                    return [2, hash.digest()];\n            }\n        });\n    });\n};\n"]},"metadata":{},"sourceType":"module"}