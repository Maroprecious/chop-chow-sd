{"ast":null,"code":"import { __values } from \"tslib\";\nimport { CLIENT_SUPPORTED_ALGORITHMS, PRIORITY_ORDER_ALGORITHMS } from \"./types\";\nexport var getChecksumAlgorithmListForResponse = function getChecksumAlgorithmListForResponse(responseAlgorithms) {\n  var e_1, _a;\n\n  if (responseAlgorithms === void 0) {\n    responseAlgorithms = [];\n  }\n\n  var validChecksumAlgorithms = [];\n\n  try {\n    for (var PRIORITY_ORDER_ALGORITHMS_1 = __values(PRIORITY_ORDER_ALGORITHMS), PRIORITY_ORDER_ALGORITHMS_1_1 = PRIORITY_ORDER_ALGORITHMS_1.next(); !PRIORITY_ORDER_ALGORITHMS_1_1.done; PRIORITY_ORDER_ALGORITHMS_1_1 = PRIORITY_ORDER_ALGORITHMS_1.next()) {\n      var algorithm = PRIORITY_ORDER_ALGORITHMS_1_1.value;\n\n      if (!responseAlgorithms.includes(algorithm) || !CLIENT_SUPPORTED_ALGORITHMS.includes(algorithm)) {\n        continue;\n      }\n\n      validChecksumAlgorithms.push(algorithm);\n    }\n  } catch (e_1_1) {\n    e_1 = {\n      error: e_1_1\n    };\n  } finally {\n    try {\n      if (PRIORITY_ORDER_ALGORITHMS_1_1 && !PRIORITY_ORDER_ALGORITHMS_1_1.done && (_a = PRIORITY_ORDER_ALGORITHMS_1.return)) _a.call(PRIORITY_ORDER_ALGORITHMS_1);\n    } finally {\n      if (e_1) throw e_1.error;\n    }\n  }\n\n  return validChecksumAlgorithms;\n};","map":{"version":3,"sources":["/home/chuka/joe/ChopChowSD/node_modules/@aws-sdk/middleware-flexible-checksums/dist-es/getChecksumAlgorithmListForResponse.js"],"names":["__values","CLIENT_SUPPORTED_ALGORITHMS","PRIORITY_ORDER_ALGORITHMS","getChecksumAlgorithmListForResponse","responseAlgorithms","e_1","_a","validChecksumAlgorithms","PRIORITY_ORDER_ALGORITHMS_1","PRIORITY_ORDER_ALGORITHMS_1_1","next","done","algorithm","value","includes","push","e_1_1","error","return","call"],"mappings":"AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,2BAAT,EAAsCC,yBAAtC,QAAuE,SAAvE;AACA,OAAO,IAAIC,mCAAmC,GAAG,SAAtCA,mCAAsC,CAAUC,kBAAV,EAA8B;AAC3E,MAAIC,GAAJ,EAASC,EAAT;;AACA,MAAIF,kBAAkB,KAAK,KAAK,CAAhC,EAAmC;AAAEA,IAAAA,kBAAkB,GAAG,EAArB;AAA0B;;AAC/D,MAAIG,uBAAuB,GAAG,EAA9B;;AACA,MAAI;AACA,SAAK,IAAIC,2BAA2B,GAAGR,QAAQ,CAACE,yBAAD,CAA1C,EAAuEO,6BAA6B,GAAGD,2BAA2B,CAACE,IAA5B,EAA5G,EAAgJ,CAACD,6BAA6B,CAACE,IAA/K,EAAqLF,6BAA6B,GAAGD,2BAA2B,CAACE,IAA5B,EAArN,EAAyP;AACrP,UAAIE,SAAS,GAAGH,6BAA6B,CAACI,KAA9C;;AACA,UAAI,CAACT,kBAAkB,CAACU,QAAnB,CAA4BF,SAA5B,CAAD,IAA2C,CAACX,2BAA2B,CAACa,QAA5B,CAAqCF,SAArC,CAAhD,EAAiG;AAC7F;AACH;;AACDL,MAAAA,uBAAuB,CAACQ,IAAxB,CAA6BH,SAA7B;AACH;AACJ,GARD,CASA,OAAOI,KAAP,EAAc;AAAEX,IAAAA,GAAG,GAAG;AAAEY,MAAAA,KAAK,EAAED;AAAT,KAAN;AAAyB,GATzC,SAUQ;AACJ,QAAI;AACA,UAAIP,6BAA6B,IAAI,CAACA,6BAA6B,CAACE,IAAhE,KAAyEL,EAAE,GAAGE,2BAA2B,CAACU,MAA1G,CAAJ,EAAuHZ,EAAE,CAACa,IAAH,CAAQX,2BAAR;AAC1H,KAFD,SAGQ;AAAE,UAAIH,GAAJ,EAAS,MAAMA,GAAG,CAACY,KAAV;AAAkB;AACxC;;AACD,SAAOV,uBAAP;AACH,CArBM","sourcesContent":["import { __values } from \"tslib\";\nimport { CLIENT_SUPPORTED_ALGORITHMS, PRIORITY_ORDER_ALGORITHMS } from \"./types\";\nexport var getChecksumAlgorithmListForResponse = function (responseAlgorithms) {\n    var e_1, _a;\n    if (responseAlgorithms === void 0) { responseAlgorithms = []; }\n    var validChecksumAlgorithms = [];\n    try {\n        for (var PRIORITY_ORDER_ALGORITHMS_1 = __values(PRIORITY_ORDER_ALGORITHMS), PRIORITY_ORDER_ALGORITHMS_1_1 = PRIORITY_ORDER_ALGORITHMS_1.next(); !PRIORITY_ORDER_ALGORITHMS_1_1.done; PRIORITY_ORDER_ALGORITHMS_1_1 = PRIORITY_ORDER_ALGORITHMS_1.next()) {\n            var algorithm = PRIORITY_ORDER_ALGORITHMS_1_1.value;\n            if (!responseAlgorithms.includes(algorithm) || !CLIENT_SUPPORTED_ALGORITHMS.includes(algorithm)) {\n                continue;\n            }\n            validChecksumAlgorithms.push(algorithm);\n        }\n    }\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n    finally {\n        try {\n            if (PRIORITY_ORDER_ALGORITHMS_1_1 && !PRIORITY_ORDER_ALGORITHMS_1_1.done && (_a = PRIORITY_ORDER_ALGORITHMS_1.return)) _a.call(PRIORITY_ORDER_ALGORITHMS_1);\n        }\n        finally { if (e_1) throw e_1.error; }\n    }\n    return validChecksumAlgorithms;\n};\n"]},"metadata":{},"sourceType":"module"}