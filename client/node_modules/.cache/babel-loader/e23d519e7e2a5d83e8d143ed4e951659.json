{"ast":null,"code":"var _jsxFileName = \"/home/chuka/joe/ChopChowSD/client/src/components/GroceryPage/index.jsx\";\nimport React from \"react\";\nimport \"./style.css\";\nimport PageTitle from \"../CommonComponents/PageTitle\";\nimport { Spinner } from \"react-bootstrap\";\nimport { Container, Alert, Card, Col, Row, Button } from \"react-bootstrap\";\nimport { Typeahead } from \"react-bootstrap-typeahead\";\nexport default class GroceryPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this._isMounted = false;\n    this.products = [];\n    this.productNamesForTypeahead = new Map();\n    this.state = {\n      customerList: null,\n      Authentication: false,\n      customerId: null,\n      email: \"\",\n      password: \"\",\n      messageErr: false,\n      messageSuccess: false,\n      messageErrCreate: false,\n      showAlert: false,\n      messageAlert: \"\",\n      variant: \"\",\n      productID: \"\",\n      deletedItemId: null,\n      selectedProduct: null,\n      idsItems: null,\n      deletedItemsId: null,\n      lasIdListState: null,\n      valueProductName: \"\",\n      valueProductImage: \"\",\n      valueProductPrice: \"\",\n      valueProductSize: \"\",\n      valuePricePerOunce: \"\",\n      errormsg: \"\",\n      typeAheadAdded: false\n    };\n\n    this.handleChange = ({\n      target: {\n        value,\n        name\n      }\n    }) => this.setState({\n      [name]: value\n    });\n\n    this.handleShowDeleteItem = productID => {\n      this.setState({\n        deletedItemId: productID\n      });\n      const _this$state = this.state,\n            customerId = _this$state.customerId,\n            deletedItemId = _this$state.deletedItemId; // var url = `https://chopchowdev.herokuapp.com/api/remove-item/${productID}/${customerId}`\n\n      var url = \"./api/remove-item/\".concat(productID, \"/\").concat(customerId);\n      fetch(url, {\n        method: \"DELETE\" // headers: {\n        //   Accept: 'application/json',\n        //   'Content-Type': 'application/json',\n        // },\n\n      }).then(res => {\n        return res.json();\n      }).then(response => {\n        this.setState({\n          messageAlert: \"deleted successfully\",\n          showAlert: true,\n          variant: \"success\"\n        }, () => setTimeout(() => {\n          this.setState({\n            messageAlert: \"\",\n            showAlert: false\n          });\n        }, 3500));\n        this.setState(prevState => {\n          // delete item on client side\n          const newValueData = prevState.customerList.filter( // do we need catch sttmnt for filter\n          item => item.id !== deletedItemId);\n          return {\n            customerList: newValueData\n          };\n        });\n        console.log(\"Delets item\");\n        this.componentDidMount();\n      }).catch(() => {\n        this.setState({\n          messageAlert: \"Internal Server Error while deleting item\",\n          showAlert: true,\n          variant: \"danger\"\n        }, () => setTimeout(() => {\n          this.setState({\n            messageAlert: \"\",\n            showAlert: false\n          });\n        }, 8000));\n      });\n    };\n\n    this.handleDeleteList = () => {\n      console.log(\"Comes in deletes list\");\n      const customerId = this.state.customerId;\n      var url = \"https://chopchowdev.herokuapp.com/api/remove-list/\".concat(customerId); // var url = `./api/remove-list/${customerId}`\n\n      fetch(url, {\n        method: \"DELETE\" // headers: {\n        //   'Content-Type': 'application/json',\n        // }\n\n      }).then(response => {\n        console.log(\"delete response is: \");\n        console.log(response);\n        console.log(response.json);\n        this.setState({\n          messageAlert: \"deleted successfully\",\n          showAlert: true,\n          variant: \"success\"\n        }, () => setTimeout(() => {\n          this.setState({\n            messageAlert: \"\",\n            showAlert: false\n          });\n        }, 3500));\n        this.setState({\n          customerList: []\n        });\n        this.componentDidMount();\n        console.log(\"deletes list\");\n        return response.json();\n      }).catch(() => {\n        console.log(\"caught an error while deleting list\");\n        this.setState({\n          messageAlert: \"Internal Server Error while deleting list\",\n          showAlert: true,\n          variant: \"danger\"\n        }, () => setTimeout(() => {\n          this.setState({\n            messageAlert: \"\",\n            showAlert: false\n          });\n        }, 8000));\n      });\n    };\n\n    this.handleClickTypeahead = selected => {\n      this.setState({\n        selectedProduct: selected\n      }); // var arrayOfProductNames = Array.from(this.productNamesForTypeahead.keys());\n\n      console.log(\"selected is:\");\n      console.log(selected[0]);\n      console.log(typeof selected[0]);\n      console.log(\"array of product names is:\");\n      console.log(this.productNamesForTypeahead);\n      this.productNamesForTypeahead.get(selected); // var index = arrayOfProductNames.findIndex((el) => el === selected[0]);\n\n      var productID = this.productNamesForTypeahead.get(selected[0]);\n      console.log(\"productID is: \" + productID);\n      console.log(\"customer id is: \" + this.state.customerId);\n\n      if (!isNaN(productID)) {\n        // var url = `https://chopchowdev.herokuapp.com/api/addTypeaheadDataToCustomerGroceryList/${productID}/${this.state.customerId}`\n        var url = \"./api/addTypeaheadDataToCustomerGroceryList/\".concat(productID, \"/\").concat(this.state.customerId);\n        fetch(url, {\n          method: \"POST\" // headers: {\n          //   Accept: 'application/json',\n          // //   'Content-Type': 'application/json',\n          // },\n\n        }).then(response => {\n          // .then(res => {\n          // return res.json();\n          // })\n          if (response) {\n            this.setState({\n              messageAlert: \"product added successfully\",\n              showAlert: true,\n              variant: \"success\"\n            }, () => setTimeout(() => {\n              this.setState({\n                messageAlert: \"\",\n                showAlert: false\n              });\n            }, 3500)); // const { customerList } = this.state;\n\n            console.log(\"Comes in handleClickTypeahead's then on client side\");\n            this.componentDidMount(); // this.setState({ typeAheadAdded : !this.state.typeAheadAdded })\n          }\n        });\n      }\n    };\n  }\n\n  componentDidMount() {\n    // checks if user is already logged in in app.\n    const _this$props = this.props,\n          auth = _this$props.auth,\n          customerId = _this$props.customerId;\n    console.log(\"comes in grocery page cdm\");\n    this.setState({\n      Authentication: auth\n    });\n    this.setState({\n      customerId: customerId\n    });\n\n    if (auth === true) {\n      // or if (customerId !== null) , grocery page not displaying after login click\n      var localToken = window.localStorage.getItem(\"userToken\");\n      console.log(\"customder id  iss: \" + customerId);\n      var url = \"./api/getCustomerGroceryList/\".concat(customerId); // var url = `http://localhost:5000/api/getCustomerGroceryList/${customerId}`\n\n      fetch(url, {\n        method: \"GET\",\n        // credentials: 'include',\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: \"Bearer \" + localToken\n        }\n      }).then(res => {\n        console.log(\"customer list response is \");\n        console.log(res);\n        return res.json();\n      }).then(response => {\n        if (response) {\n          this.setState({\n            customerList: response.data\n          });\n        }\n      }).catch(() => {\n        this.setState({\n          messageAlert: \"Authentication Error while fetching your grocery list...\",\n          showAlert: true,\n          variant: \"danger\"\n        }, () => setTimeout(() => {\n          this.setState({\n            messageAlert: \"\",\n            showAlert: false\n          });\n        }, 8000));\n      }); // url = \"https://chopchowdev.herokuapp.com/api/get-all-products\";\n      // url = `http://localhost:5000/api/get-all-products`\n\n      url = \"./api/get-all-products\"; // or should we call this in App.js and pass it as a prop ??\n\n      fetch(url, {\n        method: \"GET\" // credentials: 'include',\n        // headers: {\n        //   'Content-Type': 'application/json',\n        // }\n\n      }).then(res => res.text()).then(body => {\n        // console.log(\"should print body\");\n        // console.log(body);\n        var productsList = JSON.parse(body);\n        console.log(\"PRINTING ALL PRODUCTS LIST\"); // console.log(productsList);\n\n        if (productsList && productsList.data.length !== 0) {\n          console.log(\"returns GET ALL PRODUCTS \");\n          console.log(productsList.data.length);\n\n          for (var i = 0; i < productsList.data.length; i++) {\n            this.products.push(productsList.data[i]);\n            this.productNamesForTypeahead.set(productsList.data[i].product_name, productsList.data[i].id);\n          }\n\n          console.log(this.products);\n          console.log(this.productNamesForTypeahead);\n        } else {\n          console.log(\"get all products function does not return\");\n        }\n      }).catch(err => {\n        console.log(err);\n      });\n    }\n  }\n\n  render() {\n    const _this$state2 = this.state,\n          showAlert = _this$state2.showAlert,\n          variant = _this$state2.variant,\n          messageAlert = _this$state2.messageAlert,\n          customerList = _this$state2.customerList;\n    console.log(this.state.Authentication);\n    console.log(this.state.customerId);\n    return (\n      /*#__PURE__*/\n      React.createElement(React.Fragment, null,\n      /*#__PURE__*/\n      React.createElement(Typeahead // multiple\n      , {\n        options: Array.from(this.productNamesForTypeahead.keys()),\n        placeholder: \"Add products to your grocery list here..\",\n        id: \"typeahead\",\n        onChange: selected => {\n          // console.log(selected);\n          this.handleClickTypeahead(selected);\n        } // filterBy={['product_name']}\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 9\n        }\n      }),\n      /*#__PURE__*/\n      React.createElement(Alert, {\n        show: showAlert,\n        key: 1,\n        variant: variant,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 9\n        }\n      }, messageAlert), this.state.messageVisible ?\n      /*#__PURE__*/\n      React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 11\n        }\n      }, \"you can not add in this item because it is already in customers grocery list\") : null, this.state.Authentication ?\n      /*#__PURE__*/\n      React.createElement(React.Fragment, null,\n      /*#__PURE__*/\n      React.createElement(PageTitle, {\n        title: \" Your Grocery List\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 13\n        }\n      }),\n      /*#__PURE__*/\n      React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 13\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(Button, {\n        className: \"yourlist__buttonDeleteList\",\n        variant: \"danger\",\n        onClick: e => {\n          e.stopPropagation();\n          this.handleDeleteList();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 15\n        }\n      }, \"Delete List Items\"),\n      /*#__PURE__*/\n      React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 15\n        }\n      }),\n      /*#__PURE__*/\n      React.createElement(Container, {\n        className: \"page__container\",\n        fluid: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 15\n        }\n      }, customerList ? customerList.map(customer_grocery_product_item => {\n        let productID = customer_grocery_product_item.id;\n        return (\n          /*#__PURE__*/\n          // <>\n          React.createElement(Row, {\n            display: \"inline-flex\",\n            key: customer_grocery_product_item.id,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 347,\n              columnNumber: 23\n            }\n          },\n          /*#__PURE__*/\n          React.createElement(Col, {\n            key: customer_grocery_product_item.id,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 351,\n              columnNumber: 25\n            }\n          }, customer_grocery_product_item.product_image.startsWith(\"http://\") || customer_grocery_product_item.product_image.startsWith(\"data\") ?\n          /*#__PURE__*/\n          React.createElement(\"img\", {\n            src: \"\".concat(customer_grocery_product_item.product_image),\n            alt: \"product_img \",\n            className: \"card-img\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 359,\n              columnNumber: 29\n            }\n          }) :\n          /*#__PURE__*/\n          React.createElement(\"img\", {\n            src: \"/images/products/\".concat(customer_grocery_product_item.product_image),\n            alt: \"product_img \",\n            className: \"card-img\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 365,\n              columnNumber: 29\n            }\n          })),\n          /*#__PURE__*/\n          React.createElement(Col, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 373,\n              columnNumber: 25\n            }\n          },\n          /*#__PURE__*/\n          React.createElement(Card.Title, {\n            className: \"grocery_item_card-header\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 374,\n              columnNumber: 27\n            }\n          }, \"Product Name :\", \" \", customer_grocery_product_item.product_name),\n          /*#__PURE__*/\n          React.createElement(Card.Text, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 378,\n              columnNumber: 27\n            }\n          }, \"Product Price :\", \" \", customer_grocery_product_item && customer_grocery_product_item.product_price,\n          /*#__PURE__*/\n          React.createElement(\"br\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 382,\n              columnNumber: 29\n            }\n          }), \"Product Size : \", customer_grocery_product_item.sizes)),\n          /*#__PURE__*/\n          React.createElement(Col, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 387,\n              columnNumber: 25\n            }\n          },\n          /*#__PURE__*/\n          React.createElement(Button, {\n            onClick: e => {\n              e.stopPropagation();\n              this.handleAddItemToCart(productID);\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 388,\n              columnNumber: 27\n            }\n          }, \" \", \"Add To Cart\")),\n          /*#__PURE__*/\n          React.createElement(Col, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 398,\n              columnNumber: 25\n            }\n          },\n          /*#__PURE__*/\n          React.createElement(\"i\", {\n            className: \"fa fa-remove\",\n            onClick: e => {\n              e.stopPropagation();\n              this.handleShowDeleteItem(customer_grocery_product_item.id);\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 399,\n              columnNumber: 27\n            }\n          })))\n        );\n      }) :\n      /*#__PURE__*/\n      React.createElement(Spinner, {\n        animation: \"border\",\n        variant: \"info\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 413,\n          columnNumber: 19\n        }\n      })))) :\n      /*#__PURE__*/\n      React.createElement(React.Fragment, null,\n      /*#__PURE__*/\n      React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 421,\n          columnNumber: 13\n        }\n      }, \"Log into your account or continue as guest to load your grocery list\")))\n    );\n    /* Move Create List option to suggest meal */\n    // handleClose = e => {\n    //   if (e) e.stopPropagation();\n    //   this.setState({ showGroceryList: false });\n    // };\n    // handleShowGroceryList = () => {\n    //   this.setState({ showGroceryList: true })\n    // }\n\n    /* <Container>\n              {showGroceryList ? (\n                <Modal show={showGroceryList} onHide={this.handleClose} backdrop=\"static\" className=\"modal-create\">\n                  <Modal.Body className=\"modal-create__body\">\n                    <Form.Group>\n                      <Form.Label className=\"yourlist__group-label\">Product Id: {lasIdListState}</Form.Label>\n                    </Form.Group>\n                    <Form.Group >\n                      <Form.Label className=\"yourlist__group-label\">Product Name :</Form.Label>\n                      <Form.Control\n                        className='create-input'\n                        type=\"text\"\n                        name=\"valueProductName\"\n                        value={valueProductName}\n                        placeholder=\"Enter name list\"\n                        onChange={this.handleChange}\n                      />\n                    </Form.Group>\n                    <Form.Group >\n                      <Form.Label className=\"yourlist__group-label\">Product Image :</Form.Label>\n                      <Form.Control\n                        className='create-input'\n                        type=\"text\"\n                        name=\"valueProductImage\"\n                        value={valueProductImage}\n                        placeholder=\"Enter image list\"\n                        onChange={this.handleChange}\n                      />\n                    </Form.Group>\n                    <Form.Group className=\"yourlist__group-label\">\n                      <Form.Label className=\"yourlist__group-label\">Product Price :</Form.Label>\n                      <Form.Control\n                        className='create-input'\n                        type=\"number\"\n                        name=\"valueProductPrice\"\n                        value={valueProductPrice}\n                        placeholder=\"Enter price list\"\n                        onChange={this.handleChange}\n                      />\n                    </Form.Group>\n                    <Form.Group className=\"yourlist__group-label\">\n                      <Form.Label className=\"yourlist__group-label\">Product Size :</Form.Label>\n                      <Form.Control\n                        className='create-input'\n                        type=\"text\"\n                        name=\"valueProductSize\"\n                        value={valueProductSize}\n                        placeholder=\"Enter size list\"\n                        onChange={this.handleChange}\n                       />\n                    </Form.Group>\n                    <Form.Group className=\"yourlist__group-label\">\n                      <Form.Label className=\"yourlist__group-label\">Product Price Per Ounce :</Form.Label>\n                      <Form.Control\n                        className='create-input'\n                        type=\"number\"\n                        name=\"valuePricePerOunce\"\n                        value={valuePricePerOunce}\n                        placeholder=\"Enter Price Per Ounce list\"\n                        onChange={this.handleChange}\n                      />\n                    </Form.Group>\n                    {messageErrCreate ? (\n                      <p className=\"create__msg-err\">{messageErrCreate}</p>\n                    ) : null}\n                  </Modal.Body>\n                  <Modal.Footer className=\"confirm__success\">\n                    <Button\n                      variant=\"secondary\"\n                      onClick={this.handleClose}\n                    >\n                      Close\n                    </Button>\n                    <Button\n                      className='create-button'\n                      variant=\"success\"\n                      onClick={this.handleCreateList}\n                    >\n                      create\n                    </Button>\n                  </Modal.Footer>\n                </Modal>\n              ) : <div>No list to show</div>}\n                    </Container> \n                  \n                    handleCreateList = () => {\n    const { lasIdListState, valueProductName, valueProductImage, valueProductPrice, valuePricePerOunce, valueProductSize } = this.state;\n    // if (valueProductName && valueProductImage && valueProductPrice && valueProductSize && valuePricePerOunce) {\n    //   if (valueProductImage.startsWith('http://') || valueProductImage.startsWith('data') || valueProductImage.endsWith('png') || valueProductImage.endsWith('jpg') || valueProductImage.endsWith('gif')) {\n     const { customerId } = this.state;\n    const productID = lasIdListState;\n    var url = \"https://chopchowdev.herokuapp.com/api/get-all-products\";\n    // var url = \"http://localhost:5000/api/get-all-products\"\n    fetch(`/api/create-list/${productID}/${customerId}`, {\n      method: 'POST',\n      body: JSON.stringify({\n        valueProductName,\n        valueProductImage,\n        valueProductPrice,\n        valueProductSize,\n        valuePricePerOunce,fdeleted successfully\n       }),\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n      },\n    })\n      .then(res => {\n        return res.json();\n      })\n      .then(response => {\n        if (response) {\n          const { customerList } = this.state;\n          this.setState({ customerList: [...customerList, ...response.data], errormsgImage: '', errormsg: '', valueProductName: '', valueProductImage: '', valueProductSize: '', valueProductPrice: '', valuePricePerOunce: '', lasIdListState: lasIdListState + 1 })\n        }\n      })\n     //     } else {\n    //     this.setState({ messageErrCreate: 'should be the image start word  \"data\" or \"http\" or end word \"png\" , \"jpg\",\"gif\" ' })\n    //   }\n    // } else {\n    //   this.setState({ messageErrCreate: 'should be sure fill all fields ' })\n    // }\n    }\n    */\n  }\n\n}","map":{"version":3,"sources":["/home/chuka/joe/ChopChowSD/client/src/components/GroceryPage/index.jsx"],"names":["React","PageTitle","Spinner","Container","Alert","Card","Col","Row","Button","Typeahead","GroceryPage","Component","_isMounted","products","productNamesForTypeahead","Map","state","customerList","Authentication","customerId","email","password","messageErr","messageSuccess","messageErrCreate","showAlert","messageAlert","variant","productID","deletedItemId","selectedProduct","idsItems","deletedItemsId","lasIdListState","valueProductName","valueProductImage","valueProductPrice","valueProductSize","valuePricePerOunce","errormsg","typeAheadAdded","handleChange","target","value","name","setState","handleShowDeleteItem","url","fetch","method","then","res","json","response","setTimeout","prevState","newValueData","filter","item","id","console","log","componentDidMount","catch","handleDeleteList","handleClickTypeahead","selected","get","isNaN","props","auth","localToken","window","localStorage","getItem","headers","Authorization","data","text","body","productsList","JSON","parse","length","i","push","set","product_name","err","render","Array","from","keys","messageVisible","e","stopPropagation","map","customer_grocery_product_item","product_image","startsWith","product_price","sizes","handleAddItemToCart"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\nimport PageTitle from \"../CommonComponents/PageTitle\";\nimport { Spinner } from \"react-bootstrap\";\nimport { Container, Alert, Card, Col, Row, Button } from \"react-bootstrap\";\nimport { Typeahead } from \"react-bootstrap-typeahead\";\n\nexport default class GroceryPage extends React.Component {\n  // Mongo\n  _isMounted = false;\n  products = [];\n  productNamesForTypeahead = new Map();\n\n  state = {\n    customerList: null,\n    Authentication: false,\n    customerId: null,\n    email: \"\",\n    password: \"\",\n\n    messageErr: false,\n    messageSuccess: false,\n    messageErrCreate: false,\n    showAlert: false,\n    messageAlert: \"\",\n\n    variant: \"\",\n    productID: \"\",\n    deletedItemId: null,\n    selectedProduct: null,\n    idsItems: null,\n    deletedItemsId: null,\n    lasIdListState: null,\n    valueProductName: \"\",\n    valueProductImage: \"\",\n    valueProductPrice: \"\",\n    valueProductSize: \"\",\n    valuePricePerOunce: \"\",\n    errormsg: \"\",\n    typeAheadAdded: false,\n  };\n\n  handleChange = ({ target: { value, name } }) =>\n    this.setState({ [name]: value });\n\n  componentDidMount() {\n    // checks if user is already logged in in app.\n    const { auth, customerId } = this.props;\n\n    console.log(\"comes in grocery page cdm\");\n    this.setState({ Authentication: auth });\n    this.setState({ customerId: customerId });\n\n    if (auth === true) {\n      // or if (customerId !== null) , grocery page not displaying after login click\n\n      var localToken = window.localStorage.getItem(\"userToken\");\n      console.log(\"customder id  iss: \" + customerId);\n      var url = `./api/getCustomerGroceryList/${customerId}`;\n      // var url = `http://localhost:5000/api/getCustomerGroceryList/${customerId}`\n\n      fetch(url, {\n        method: \"GET\",\n        // credentials: 'include',\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: \"Bearer \" + localToken,\n        },\n      })\n        .then((res) => {\n          console.log(\"customer list response is \");\n          console.log(res);\n          return res.json();\n        })\n        .then((response) => {\n          if (response) {\n            this.setState({ customerList: response.data });\n          }\n        })\n        .catch(() => {\n          this.setState(\n            {\n              messageAlert:\n                \"Authentication Error while fetching your grocery list...\",\n              showAlert: true,\n              variant: \"danger\",\n            },\n            () =>\n              setTimeout(() => {\n                this.setState({ messageAlert: \"\", showAlert: false });\n              }, 8000)\n          );\n        });\n\n      // url = \"https://chopchowdev.herokuapp.com/api/get-all-products\";\n      // url = `http://localhost:5000/api/get-all-products`\n      url = \"./api/get-all-products\";\n      // or should we call this in App.js and pass it as a prop ??\n\n      fetch(url, {\n        method: \"GET\",\n        // credentials: 'include',\n        // headers: {\n        //   'Content-Type': 'application/json',\n        // }\n      })\n        .then((res) => res.text())\n        .then((body) => {\n          // console.log(\"should print body\");\n          // console.log(body);\n          var productsList = JSON.parse(body);\n          console.log(\"PRINTING ALL PRODUCTS LIST\");\n          // console.log(productsList);\n          if (productsList && productsList.data.length !== 0) {\n            console.log(\"returns GET ALL PRODUCTS \");\n            console.log(productsList.data.length);\n            for (var i = 0; i < productsList.data.length; i++) {\n              this.products.push(productsList.data[i]);\n              this.productNamesForTypeahead.set(\n                productsList.data[i].product_name,\n                productsList.data[i].id\n              );\n            }\n            console.log(this.products);\n            console.log(this.productNamesForTypeahead);\n          } else {\n            console.log(\"get all products function does not return\");\n          }\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    }\n  }\n  handleShowDeleteItem = (productID) => {\n    this.setState({ deletedItemId: productID });\n    const { customerId, deletedItemId } = this.state;\n    // var url = `https://chopchowdev.herokuapp.com/api/remove-item/${productID}/${customerId}`\n    var url = `./api/remove-item/${productID}/${customerId}`;\n\n    fetch(url, {\n      method: \"DELETE\",\n      // headers: {\n      //   Accept: 'application/json',\n      //   'Content-Type': 'application/json',\n      // },\n    })\n      .then((res) => {\n        return res.json();\n      })\n      .then((response) => {\n        this.setState(\n          {\n            messageAlert: \"deleted successfully\",\n            showAlert: true,\n            variant: \"success\",\n          },\n          () =>\n            setTimeout(() => {\n              this.setState({ messageAlert: \"\", showAlert: false });\n            }, 3500)\n        );\n        this.setState((prevState) => {\n          // delete item on client side\n          const newValueData = prevState.customerList.filter(\n            // do we need catch sttmnt for filter\n            (item) => item.id !== deletedItemId\n          );\n          return { customerList: newValueData };\n        });\n        console.log(\"Delets item\");\n        this.componentDidMount();\n      })\n      .catch(() => {\n        this.setState(\n          {\n            messageAlert: \"Internal Server Error while deleting item\",\n            showAlert: true,\n            variant: \"danger\",\n          },\n          () =>\n            setTimeout(() => {\n              this.setState({ messageAlert: \"\", showAlert: false });\n            }, 8000)\n        );\n      });\n  };\n\n  handleDeleteList = () => {\n    console.log(\"Comes in deletes list\");\n    const { customerId } = this.state;\n    var url = `https://chopchowdev.herokuapp.com/api/remove-list/${customerId}`;\n    // var url = `./api/remove-list/${customerId}`\n\n    fetch(url, {\n      method: \"DELETE\",\n      // headers: {\n      //   'Content-Type': 'application/json',\n      // }\n    })\n      .then((response) => {\n        console.log(\"delete response is: \");\n        console.log(response);\n        console.log(response.json);\n        this.setState(\n          {\n            messageAlert: \"deleted successfully\",\n            showAlert: true,\n            variant: \"success\",\n          },\n          () =>\n            setTimeout(() => {\n              this.setState({ messageAlert: \"\", showAlert: false });\n            }, 3500)\n        );\n\n        this.setState({ customerList: [] });\n        this.componentDidMount();\n        console.log(\"deletes list\");\n        return response.json();\n      })\n      .catch(() => {\n        console.log(\"caught an error while deleting list\");\n        this.setState(\n          {\n            messageAlert: \"Internal Server Error while deleting list\",\n            showAlert: true,\n            variant: \"danger\",\n          },\n          () =>\n            setTimeout(() => {\n              this.setState({ messageAlert: \"\", showAlert: false });\n            }, 8000)\n        );\n      });\n  };\n\n  handleClickTypeahead = (selected) => {\n    this.setState({ selectedProduct: selected });\n    // var arrayOfProductNames = Array.from(this.productNamesForTypeahead.keys());\n\n    console.log(\"selected is:\");\n    console.log(selected[0]);\n    console.log(typeof selected[0]);\n    console.log(\"array of product names is:\");\n    console.log(this.productNamesForTypeahead);\n\n    this.productNamesForTypeahead.get(selected);\n\n    // var index = arrayOfProductNames.findIndex((el) => el === selected[0]);\n    var productID = this.productNamesForTypeahead.get(selected[0]);\n    console.log(\"productID is: \" + productID);\n    console.log(\"customer id is: \" + this.state.customerId);\n    if (!isNaN(productID)) {\n      // var url = `https://chopchowdev.herokuapp.com/api/addTypeaheadDataToCustomerGroceryList/${productID}/${this.state.customerId}`\n      var url = `./api/addTypeaheadDataToCustomerGroceryList/${productID}/${this.state.customerId}`;\n      fetch(url, {\n        method: \"POST\",\n        // headers: {\n        //   Accept: 'application/json',\n        // //   'Content-Type': 'application/json',\n        // },\n      }).then((response) => {\n        // .then(res => {\n        // return res.json();\n        // })\n        if (response) {\n          this.setState(\n            {\n              messageAlert: \"product added successfully\",\n              showAlert: true,\n              variant: \"success\",\n            },\n            () =>\n              setTimeout(() => {\n                this.setState({ messageAlert: \"\", showAlert: false });\n              }, 3500)\n          );\n          // const { customerList } = this.state;\n          console.log(\"Comes in handleClickTypeahead's then on client side\");\n          this.componentDidMount();\n          // this.setState({ typeAheadAdded : !this.state.typeAheadAdded })\n        }\n      });\n    }\n  };\n\n  render() {\n    const { showAlert, variant, messageAlert, customerList } = this.state;\n    console.log(this.state.Authentication);\n    console.log(this.state.customerId);\n\n    return (\n      <>\n        <Typeahead\n          // multiple\n          options={Array.from(this.productNamesForTypeahead.keys())}\n          placeholder=\"Add products to your grocery list here..\"\n          id=\"typeahead\"\n          onChange={(selected) => {\n            // console.log(selected);\n            this.handleClickTypeahead(selected);\n          }}\n          // filterBy={['product_name']}\n        />\n\n        {/* Display alert if there is any issue loading grocery page */}\n        <Alert show={showAlert} key={1} variant={variant}>\n          {messageAlert}\n        </Alert>\n\n        {this.state.messageVisible ? (\n          <div>\n            you can not add in this item because it is already in customers\n            grocery list\n          </div>\n        ) : null}\n        {this.state.Authentication ? (\n          <>\n            <PageTitle title=\" Your Grocery List\" />\n\n            <div>\n              {/* display customers list */}\n              {/* <Row> */}\n              {/* <Col xs={12} md={8} lg={4} key=\"delete_col\"> */}\n\n              <Button\n                className=\"yourlist__buttonDeleteList\"\n                variant=\"danger\"\n                onClick={(e) => {\n                  e.stopPropagation();\n                  this.handleDeleteList();\n                }}\n              >\n                Delete List Items\n              </Button>\n              {/* </Col> */}\n              {/* </Row> */}\n              <br></br>\n              <Container className=\"page__container\" fluid>\n                {/* display grocery list, for any authenticated customer */}\n                {customerList ? (\n                  customerList.map((customer_grocery_product_item) => {\n                    let productID = customer_grocery_product_item.id;\n                    return (\n                      // <>\n                      <Row\n                        display=\"inline-flex\"\n                        key={customer_grocery_product_item.id}\n                      >\n                        <Col key={customer_grocery_product_item.id}>\n                          {/* check for private or public images (can be used for suggest meal) */}\n                          {customer_grocery_product_item.product_image.startsWith(\n                            \"http://\"\n                          ) ||\n                          customer_grocery_product_item.product_image.startsWith(\n                            \"data\"\n                          ) ? (\n                            <img\n                              src={`${customer_grocery_product_item.product_image}`}\n                              alt=\"product_img \"\n                              className=\"card-img\"\n                            />\n                          ) : (\n                            <img\n                              src={`/images/products/${customer_grocery_product_item.product_image}`}\n                              alt=\"product_img \"\n                              className=\"card-img\"\n                            />\n                          )}\n                        </Col>\n\n                        <Col>\n                          <Card.Title className=\"grocery_item_card-header\">\n                            Product Name :{\" \"}\n                            {customer_grocery_product_item.product_name}\n                          </Card.Title>\n                          <Card.Text>\n                            Product Price :{\" \"}\n                            {customer_grocery_product_item &&\n                              customer_grocery_product_item.product_price}\n                            <br></br>\n                            Product Size : {customer_grocery_product_item.sizes}\n                          </Card.Text>\n                        </Col>\n\n                        <Col>\n                          <Button\n                            onClick={(e) => {\n                              e.stopPropagation();\n                              this.handleAddItemToCart(productID);\n                            }}\n                          >\n                            {\" \"}\n                            Add To Cart\n                          </Button>\n                        </Col>\n                        <Col>\n                          <i\n                            className=\"fa fa-remove\"\n                            onClick={(e) => {\n                              e.stopPropagation();\n                              this.handleShowDeleteItem(\n                                customer_grocery_product_item.id\n                              );\n                            }}\n                          ></i>\n                        </Col>\n                      </Row>\n                    );\n                  })\n                ) : (\n                  <Spinner animation=\"border\" variant=\"info\" />\n                )}\n              </Container>\n            </div>\n          </>\n        ) : (\n          <>\n            {/* <Login /> */}\n            <div>\n              Log into your account or continue as guest to load your grocery\n              list\n            </div>\n          </>\n        )}\n      </>\n    );\n\n    /* Move Create List option to suggest meal */\n    // handleClose = e => {\n    //   if (e) e.stopPropagation();\n    //   this.setState({ showGroceryList: false });\n    // };\n\n    // handleShowGroceryList = () => {\n    //   this.setState({ showGroceryList: true })\n    // }\n\n    /* <Container>\n              {showGroceryList ? (\n                <Modal show={showGroceryList} onHide={this.handleClose} backdrop=\"static\" className=\"modal-create\">\n                  <Modal.Body className=\"modal-create__body\">\n                    <Form.Group>\n                      <Form.Label className=\"yourlist__group-label\">Product Id: {lasIdListState}</Form.Label>\n                    </Form.Group>\n                    <Form.Group >\n                      <Form.Label className=\"yourlist__group-label\">Product Name :</Form.Label>\n                      <Form.Control\n                        className='create-input'\n                        type=\"text\"\n                        name=\"valueProductName\"\n                        value={valueProductName}\n                        placeholder=\"Enter name list\"\n                        onChange={this.handleChange}\n                      />\n                    </Form.Group>\n                    <Form.Group >\n                      <Form.Label className=\"yourlist__group-label\">Product Image :</Form.Label>\n                      <Form.Control\n                        className='create-input'\n                        type=\"text\"\n                        name=\"valueProductImage\"\n                        value={valueProductImage}\n                        placeholder=\"Enter image list\"\n                        onChange={this.handleChange}\n                      />\n                    </Form.Group>\n                    <Form.Group className=\"yourlist__group-label\">\n                      <Form.Label className=\"yourlist__group-label\">Product Price :</Form.Label>\n                      <Form.Control\n                        className='create-input'\n                        type=\"number\"\n                        name=\"valueProductPrice\"\n                        value={valueProductPrice}\n                        placeholder=\"Enter price list\"\n                        onChange={this.handleChange}\n                      />\n                    </Form.Group>\n                    <Form.Group className=\"yourlist__group-label\">\n                      <Form.Label className=\"yourlist__group-label\">Product Size :</Form.Label>\n                      <Form.Control\n                        className='create-input'\n                        type=\"text\"\n                        name=\"valueProductSize\"\n                        value={valueProductSize}\n                        placeholder=\"Enter size list\"\n                        onChange={this.handleChange}\n\n                      />\n                    </Form.Group>\n                    <Form.Group className=\"yourlist__group-label\">\n                      <Form.Label className=\"yourlist__group-label\">Product Price Per Ounce :</Form.Label>\n                      <Form.Control\n                        className='create-input'\n                        type=\"number\"\n                        name=\"valuePricePerOunce\"\n                        value={valuePricePerOunce}\n                        placeholder=\"Enter Price Per Ounce list\"\n                        onChange={this.handleChange}\n                      />\n                    </Form.Group>\n                    {messageErrCreate ? (\n                      <p className=\"create__msg-err\">{messageErrCreate}</p>\n                    ) : null}\n                  </Modal.Body>\n                  <Modal.Footer className=\"confirm__success\">\n                    <Button\n                      variant=\"secondary\"\n                      onClick={this.handleClose}\n                    >\n                      Close\n                    </Button>\n                    <Button\n                      className='create-button'\n                      variant=\"success\"\n                      onClick={this.handleCreateList}\n                    >\n                      create\n                    </Button>\n                  </Modal.Footer>\n                </Modal>\n              ) : <div>No list to show</div>}\n                    </Container> \n                  \n                    handleCreateList = () => {\n    const { lasIdListState, valueProductName, valueProductImage, valueProductPrice, valuePricePerOunce, valueProductSize } = this.state;\n    // if (valueProductName && valueProductImage && valueProductPrice && valueProductSize && valuePricePerOunce) {\n    //   if (valueProductImage.startsWith('http://') || valueProductImage.startsWith('data') || valueProductImage.endsWith('png') || valueProductImage.endsWith('jpg') || valueProductImage.endsWith('gif')) {\n\n    const { customerId } = this.state;\n    const productID = lasIdListState;\n    var url = \"https://chopchowdev.herokuapp.com/api/get-all-products\";\n    // var url = \"http://localhost:5000/api/get-all-products\"\n    fetch(`/api/create-list/${productID}/${customerId}`, {\n      method: 'POST',\n      body: JSON.stringify({\n        valueProductName,\n        valueProductImage,\n        valueProductPrice,\n        valueProductSize,\n        valuePricePerOunce,fdeleted successfully\n\n      }),\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n      },\n    })\n      .then(res => {\n        return res.json();\n      })\n      .then(response => {\n        if (response) {\n          const { customerList } = this.state;\n          this.setState({ customerList: [...customerList, ...response.data], errormsgImage: '', errormsg: '', valueProductName: '', valueProductImage: '', valueProductSize: '', valueProductPrice: '', valuePricePerOunce: '', lasIdListState: lasIdListState + 1 })\n        }\n      })\n\n    //     } else {\n    //     this.setState({ messageErrCreate: 'should be the image start word  \"data\" or \"http\" or end word \"png\" , \"jpg\",\"gif\" ' })\n    //   }\n    // } else {\n    //   this.setState({ messageErrCreate: 'should be sure fill all fields ' })\n    // }\n\n  }\n*/\n  }\n}\n"]},"metadata":{},"sourceType":"module"}