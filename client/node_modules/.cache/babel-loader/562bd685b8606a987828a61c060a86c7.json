{"ast":null,"code":"var _jsxFileName = \"/home/chuka/joe/ChopChowSD/client/src/components/signup/index.jsx\";\nimport React from 'react';\nimport './style.css';\nimport { Form, Button, Container, Modal, Row, Col, ButtonToolbar } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { setTimeout } from 'timers';\nexport default class SignUp extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      email: '',\n      phone: '',\n      username: '',\n      password: '',\n      messageErr: false,\n      messageSuccess: false,\n      showModal: true,\n      emailNotification: false\n    };\n\n    this.handleChange = e => {\n      let name = e.currentTarget.name;\n      let value = e.currentTarget.value;\n      name === \"emailNotification\" ? this.setState({\n        emailNotification: e.currentTarget.checked\n      }) : this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleClose = delay => {\n      setTimeout(() => {\n        this.props.history.push('/grocery');\n      }, delay || 0);\n    };\n\n    this.formSubmit = e => {\n      e.preventDefault();\n\n      if ((this.state.email || this.state.phone) && this.state.username && this.state.password) {\n        this.submitForm();\n      } else {\n        this.setState({\n          messageErr: 'Please enter correct data.'\n        });\n      }\n    };\n\n    this.submitForm = () => {\n      console.log(\"state,\", this.state);\n      fetch('/api/customer/', {\n        method: 'POST',\n        credentials: 'include',\n        headers: {\n          'Content-type': 'application/json'\n        },\n        body: JSON.stringify(this.state)\n      }).then(response => {\n        if (response.status === 400 || response.status === 404) {\n          this.setState({\n            messageErr: 'Bad Request , Check username or password ... !!'\n          });\n        } else if (response.status === 401) {\n          this.setState({\n            messageErr: 'you are UnAuthorized'\n          });\n        } else if (response.status >= 500) {\n          this.setState({\n            messageErr: 'Sorry , Internal Server ERROR'\n          });\n        } else {\n          this.setState({\n            messageErr: '',\n            isAuthenticated: true,\n            messageSuccess: 'You are sign up!!! '\n          });\n          this.handleClose(5000);\n        }\n      });\n    };\n  }\n\n  render() {\n    return (\n      /*#__PURE__*/\n      React.createElement(Modal, {\n        show: this.state.showModal,\n        onHide: this.handleClose,\n        className: \"modal registerme\",\n        backdrop: \"static\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 1\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(Modal.Header, {\n        closeButton: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 3\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(Modal.Title, {\n        style: {\n          width: '100%',\n          textAlign: 'center'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 5\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 7\n        }\n      }, \"Sign Up\"),\n      /*#__PURE__*/\n      React.createElement(\"span\", {\n        style: {\n          fontSize: '11pt'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 7\n        }\n      }, \"Already have an account?\",\n      /*#__PURE__*/\n      React.createElement(Link, {\n        className: \"link-guest-word\",\n        to: \"/login\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 7\n        }\n      }, \"Login\")))),\n      /*#__PURE__*/\n      React.createElement(Modal.Body, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 3\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(Container, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 5\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(Row, {\n        className: \"justify-content-md-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 7\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(Col, {\n        xs: true,\n        lg: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 9\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(Form, {\n        className: \"\",\n        onSubmit: this.formSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(Form.Group, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(Form.Control, {\n        type: \"text\",\n        name: \"email\",\n        value: this.state.email,\n        placeholder: \"Your email\",\n        onChange: this.handleChange,\n        autoComplete: \"username\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 17\n        }\n      }),\n      /*#__PURE__*/\n      React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 19\n        }\n      }, \"Or\"),\n      /*#__PURE__*/\n      React.createElement(Form.Control, {\n        type: \"text\",\n        name: \"phone\",\n        value: this.state.phone,\n        placeholder: \"Your Phone Number\",\n        onChange: this.handleChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 17\n        }\n      })),\n      /*#__PURE__*/\n      React.createElement(\"hr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 19\n        }\n      }),\n      /*#__PURE__*/\n      React.createElement(Form.Group, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 19\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(Form.Control, {\n        type: \"text\",\n        name: \"username\",\n        value: this.state.username,\n        placeholder: \"Username\",\n        onChange: this.handleChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 19\n        }\n      }),\n      /*#__PURE__*/\n      React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }\n      }),\n      /*#__PURE__*/\n      React.createElement(Form.Control, {\n        type: \"password\",\n        name: \"password\",\n        value: this.state.password,\n        placeholder: \"Create a Password\",\n        onChange: this.handleChange,\n        autoComplete: \"new-password\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }\n      })),\n      /*#__PURE__*/\n      React.createElement(Form.Group, {\n        controlId: \"formHorizontalCheck\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 19\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }\n      }),\n      /*#__PURE__*/\n      React.createElement(Form.Check, {\n        onChange: this.handleChange,\n        name: \"emailNotification\",\n        label: \"Sign Up for Email Notifications\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 21\n        }\n      })),\n      /*#__PURE__*/\n      React.createElement(\"p\", {\n        className: \"msg-success\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 19\n        }\n      }, this.state.messageSuccess),\n      /*#__PURE__*/\n      React.createElement(\"p\", {\n        className: \"msg-err\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 19\n        }\n      }, this.state.messageErr),\n      /*#__PURE__*/\n      React.createElement(ButtonToolbar, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 19\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(Button, {\n        variant: \"secondary\",\n        type: \"submit\",\n        className: \"login__form-btn\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 21\n        }\n      }, \"Sign Up\")),\n      /*#__PURE__*/\n      React.createElement(Link, {\n        className: \"\",\n        to: \"/signup\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 19\n        }\n      }, \"or Sign up as driver\")))))))\n    );\n  }\n\n}","map":{"version":3,"sources":["/home/chuka/joe/ChopChowSD/client/src/components/signup/index.jsx"],"names":["React","Form","Button","Container","Modal","Row","Col","ButtonToolbar","Link","setTimeout","SignUp","Component","state","email","phone","username","password","messageErr","messageSuccess","showModal","emailNotification","handleChange","e","name","currentTarget","value","setState","checked","handleClose","delay","props","history","push","formSubmit","preventDefault","submitForm","console","log","fetch","method","credentials","headers","body","JSON","stringify","then","response","status","isAuthenticated","render","width","textAlign","fontSize"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,aAAP;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,SAAvB,EAAkCC,KAAlC,EAAyCC,GAAzC,EAA8CC,GAA9C,EAAmDC,aAAnD,QAAwE,iBAAxE;AAEA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,UAAT,QAA2B,QAA3B;AAEA,eAAe,MAAMC,MAAN,SAAqBV,KAAK,CAACW,SAA3B,CAAqC;AAAA;AAAA;AAAA,SAClDC,KADkD,GAC1C;AACNC,MAAAA,KAAK,EAAE,EADD;AAENC,MAAAA,KAAK,EAAE,EAFD;AAGNC,MAAAA,QAAQ,EAAE,EAHJ;AAINC,MAAAA,QAAQ,EAAE,EAJJ;AAKNC,MAAAA,UAAU,EAAE,KALN;AAMNC,MAAAA,cAAc,EAAE,KANV;AAONC,MAAAA,SAAS,EAAE,IAPL;AAQNC,MAAAA,iBAAiB,EAAE;AARb,KAD0C;;AAAA,SAalDC,YAbkD,GAalCC,CAAD,IAAO;AACpB,UAAIC,IAAI,GAAGD,CAAC,CAACE,aAAF,CAAgBD,IAA3B;AACA,UAAIE,KAAK,GAAGH,CAAC,CAACE,aAAF,CAAgBC,KAA5B;AACAF,MAAAA,IAAI,KAAK,mBAAT,GAA+B,KAAKG,QAAL,CAAc;AAACN,QAAAA,iBAAiB,EAAEE,CAAC,CAACE,aAAF,CAAgBG;AAApC,OAAd,CAA/B,GAA6F,KAAKD,QAAL,CAAc;AAAE,SAACH,IAAD,GAAQE;AAAV,OAAd,CAA7F;AAED,KAlBiD;;AAAA,SAqBlDG,WArBkD,GAqBnCC,KAAD,IAAW;AACvBpB,MAAAA,UAAU,CAAC,MAAM;AACf,aAAKqB,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,CAAwB,UAAxB;AACD,OAFS,EAEPH,KAAK,IAAI,CAFF,CAAV;AAGD,KAzBiD;;AAAA,SA2BlDI,UA3BkD,GA2BpCX,CAAD,IAAO;AAClBA,MAAAA,CAAC,CAACY,cAAF;;AACA,UAAG,CAAC,KAAKtB,KAAL,CAAWC,KAAX,IAAoB,KAAKD,KAAL,CAAWE,KAAhC,KAA0C,KAAKF,KAAL,CAAWG,QAArD,IAAiE,KAAKH,KAAL,CAAWI,QAA/E,EAAyF;AACvF,aAAKmB,UAAL;AACD,OAFD,MAEO;AACL,aAAKT,QAAL,CAAc;AAAET,UAAAA,UAAU,EAAE;AAAd,SAAd;AACD;AACF,KAlCiD;;AAAA,SAoClDkB,UApCkD,GAoCrC,MAAM;AACjBC,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsB,KAAKzB,KAA3B;AAEA0B,MAAAA,KAAK,CAAC,gBAAD,EAAmB;AACtBC,QAAAA,MAAM,EAAE,MADc;AAEtBC,QAAAA,WAAW,EAAE,SAFS;AAGtBC,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT,SAHa;AAMtBC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe,KAAKhC,KAApB;AANgB,OAAnB,CAAL,CAOGiC,IAPH,CAOQC,QAAQ,IAAI;AAChB,YAAIA,QAAQ,CAACC,MAAT,KAAoB,GAApB,IAA2BD,QAAQ,CAACC,MAAT,KAAoB,GAAnD,EAAwD;AACtD,eAAKrB,QAAL,CAAc;AAAET,YAAAA,UAAU,EAAE;AAAd,WAAd;AACD,SAFD,MAEO,IAAI6B,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AAClC,eAAKrB,QAAL,CAAc;AAAET,YAAAA,UAAU,EAAE;AAAd,WAAd;AACD,SAFM,MAEA,IAAI6B,QAAQ,CAACC,MAAT,IAAmB,GAAvB,EAA4B;AACjC,eAAKrB,QAAL,CAAc;AAAET,YAAAA,UAAU,EAAE;AAAd,WAAd;AACD,SAFM,MAEA;AACL,eAAKS,QAAL,CAAc;AAAET,YAAAA,UAAU,EAAE,EAAd;AAAkB+B,YAAAA,eAAe,EAAE,IAAnC;AAAyC9B,YAAAA,cAAc,EAAE;AAAzD,WAAd;AACA,eAAKU,WAAL,CAAiB,IAAjB;AACD;AACF,OAlBH;AAmBD,KA1DiD;AAAA;;AA4DlDqB,EAAAA,MAAM,GAAG;AACP;AAAA;AACJ,0BAAC,KAAD;AAAO,QAAA,IAAI,EAAE,KAAKrC,KAAL,CAAWO,SAAxB;AAAmC,QAAA,MAAM,EAAE,KAAKS,WAAhD;AAA6D,QAAA,SAAS,EAAC,kBAAvE;AAA0F,QAAA,QAAQ,EAAC,QAAnG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACE,0BAAC,KAAD,CAAO,MAAP;AAAc,QAAA,WAAW,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACE,0BAAC,KAAD,CAAO,KAAP;AAAa,QAAA,KAAK,EAAE;AAAEsB,UAAAA,KAAK,EAAE,MAAT;AAAiBC,UAAAA,SAAS,EAAE;AAA5B,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF;AAAA;AAEE;AAAM,QAAA,KAAK,EAAE;AAAEC,UAAAA,QAAQ,EAAE;AAAZ,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,0BAAC,IAAD;AAAM,QAAA,SAAS,EAAC,iBAAhB;AAAkC,QAAA,EAAE,EAAC,QAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADA,CAFF,CADF,CADF;AAAA;AAQE,0BAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACE,0BAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACE,0BAAC,GAAD;AAAK,QAAA,SAAS,EAAC,2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACE,0BAAC,GAAD;AAAK,QAAA,EAAE,MAAP;AAAQ,QAAA,EAAE,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACE,0BAAC,IAAD;AAAM,QAAA,SAAS,EAAC,EAAhB;AAAmB,QAAA,QAAQ,EAAE,KAAKnB,UAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACE,0BAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACI,0BAAC,IAAD,CAAM,OAAN;AACM,QAAA,IAAI,EAAC,MADX;AAEM,QAAA,IAAI,EAAC,OAFX;AAGM,QAAA,KAAK,EAAE,KAAKrB,KAAL,CAAWC,KAHxB;AAIM,QAAA,WAAW,EAAC,YAJlB;AAKM,QAAA,QAAQ,EAAE,KAAKQ,YALrB;AAMM,QAAA,YAAY,EAAG,UANrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAAA;AASM,0BAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATN;AAAA;AAUI,0BAAC,IAAD,CAAM,OAAN;AACM,QAAA,IAAI,EAAC,MADX;AAEM,QAAA,IAAI,EAAC,OAFX;AAGM,QAAA,KAAK,EAAE,KAAKT,KAAL,CAAWE,KAHxB;AAIM,QAAA,WAAW,EAAC,mBAJlB;AAKM,QAAA,QAAQ,EAAE,KAAKO,YALrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAVJ,CADF;AAAA;AAmBQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAnBR;AAAA;AAoBQ,0BAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,0BAAC,IAAD,CAAM,OAAN;AACI,QAAA,IAAI,EAAC,MADT;AAEI,QAAA,IAAI,EAAC,UAFT;AAGI,QAAA,KAAK,EAAE,KAAKT,KAAL,CAAWG,QAHtB;AAII,QAAA,WAAW,EAAC,UAJhB;AAKI,QAAA,QAAQ,EAAE,KAAKM,YALnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA;AAAA;AAQE,0BAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARF;AAAA;AASE,0BAAC,IAAD,CAAM,OAAN;AACE,QAAA,IAAI,EAAC,UADP;AAEE,QAAA,IAAI,EAAC,UAFP;AAGE,QAAA,KAAK,EAAE,KAAKT,KAAL,CAAWI,QAHpB;AAIE,QAAA,WAAW,EAAC,mBAJd;AAKE,QAAA,QAAQ,EAAE,KAAKK,YALjB;AAME,QAAA,YAAY,EAAG,cANjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QATF,CApBR;AAAA;AAsCQ,0BAAC,IAAD,CAAM,KAAN;AAAY,QAAA,SAAS,EAAC,qBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACE,0BAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAAA;AAEE,0BAAC,IAAD,CAAM,KAAN;AAAY,QAAA,QAAQ,EAAE,KAAKA,YAA3B;AAAyC,QAAA,IAAI,EAAC,mBAA9C;AAAkE,QAAA,KAAK,EAAC,iCAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CAtCR;AAAA;AA0CQ;AAAG,QAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA4B,KAAKT,KAAL,CAAWM,cAAvC,CA1CR;AAAA;AA2CQ;AAAG,QAAA,SAAS,EAAC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAwB,KAAKN,KAAL,CAAWK,UAAnC,CA3CR;AAAA;AA4CQ,0BAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACE,0BAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,WAAhB;AAA4B,QAAA,IAAI,EAAC,QAAjC;AAA0C,QAAA,SAAS,EAAC,iBAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,CA5CR;AAAA;AA+CQ,0BAAC,IAAD;AAAM,QAAA,SAAS,EAAC,EAAhB;AAAmB,QAAA,EAAE,EAAC,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCA/CR,CADF,CADF,CADF,CADF,CARF;AADI;AAoED;;AAjIiD","sourcesContent":["import React from 'react';\nimport './style.css';\nimport { Form, Button, Container, Modal, Row, Col, ButtonToolbar } from 'react-bootstrap';\n\nimport { Link } from 'react-router-dom';\nimport { setTimeout } from 'timers';\n\nexport default class SignUp extends React.Component {\n  state = {\n    email: '',\n    phone: '',\n    username: '',\n    password: '',\n    messageErr: false,\n    messageSuccess: false,\n    showModal: true,\n    emailNotification: false\n  };\n\n\n  handleChange = (e) => {\n    let name = e.currentTarget.name;\n    let value = e.currentTarget.value;\n    name === \"emailNotification\" ? this.setState({emailNotification: e.currentTarget.checked}) : this.setState({ [name]: value });\n\n  }\n\n\n  handleClose = (delay) => {\n    setTimeout(() => {\n      this.props.history.push('/grocery');\n    }, delay || 0);\n  };\n\n  formSubmit = (e) => {\n    e.preventDefault();\n    if((this.state.email || this.state.phone) && this.state.username && this.state.password) {\n      this.submitForm();\n    } else {\n      this.setState({ messageErr: 'Please enter correct data.' });\n    }\n  };\n\n  submitForm = () => {\n    console.log(\"state,\", this.state);\n\n    fetch('/api/customer/', {\n      method: 'POST',\n      credentials: 'include',\n      headers: {\n        'Content-type': 'application/json',\n      },\n      body: JSON.stringify(this.state),\n    }).then(response => {\n        if (response.status === 400 || response.status === 404) {\n          this.setState({ messageErr: 'Bad Request , Check username or password ... !!' });\n        } else if (response.status === 401) {\n          this.setState({ messageErr: 'you are UnAuthorized' });\n        } else if (response.status >= 500) {\n          this.setState({ messageErr: 'Sorry , Internal Server ERROR' })\n        } else {\n          this.setState({ messageErr: '', isAuthenticated: true, messageSuccess: 'You are sign up!!! ' });\n          this.handleClose(5000);\n        }\n      })\n  };\n\n  render() {\n    return (\n<Modal show={this.state.showModal} onHide={this.handleClose} className=\"modal registerme\" backdrop=\"static\">\n  <Modal.Header closeButton>\n    <Modal.Title style={{ width: '100%', textAlign: 'center' }}>\n      <div>Sign Up</div>\n      <span style={{ fontSize: '11pt' }}>Already have an account?  \n      <Link className=\"link-guest-word\" to=\"/login\">Login</Link></span>\n    </Modal.Title>\n  </Modal.Header>\n  <Modal.Body>\n    <Container>\n      <Row className=\"justify-content-md-center\">\n        <Col xs lg>\n          <Form className=\"\" onSubmit={this.formSubmit}>\n            <Form.Group>\n                <Form.Control\n                      type=\"text\"\n                      name=\"email\"\n                      value={this.state.email}\n                      placeholder=\"Your email\"\n                      onChange={this.handleChange}\n                      autoComplete = \"username\"\n                    />\n                  <Form.Label>Or</Form.Label>\n                <Form.Control\n                      type=\"text\"\n                      name=\"phone\"\n                      value={this.state.phone}\n                      placeholder=\"Your Phone Number\"\n                      onChange={this.handleChange}\n                    />\n                  </Form.Group>\n                  <hr/>\n                  <Form.Group>\n                  <Form.Control\n                      type=\"text\"\n                      name=\"username\"\n                      value={this.state.username}\n                      placeholder=\"Username\"\n                      onChange={this.handleChange}\n                    />\n                    <Form.Label></Form.Label>\n                    <Form.Control\n                      type=\"password\"\n                      name=\"password\"\n                      value={this.state.password}\n                      placeholder=\"Create a Password\"\n                      onChange={this.handleChange}\n                      autoComplete = \"new-password\"\n                    />\n                  </Form.Group>\n                  <Form.Group controlId=\"formHorizontalCheck\">\n                    <Form.Label></Form.Label>\n                    <Form.Check onChange={this.handleChange} name=\"emailNotification\" label=\"Sign Up for Email Notifications\" />\n                  </Form.Group>\n                  <p className=\"msg-success\">{this.state.messageSuccess}</p>\n                  <p className=\"msg-err\">{this.state.messageErr}</p>\n                  <ButtonToolbar>\n                    <Button variant=\"secondary\" type=\"submit\" className=\"login__form-btn\">Sign Up</Button>\n                  </ButtonToolbar>\n                  <Link className=\"\" to=\"/signup\">or Sign up as driver</Link>\n                </Form>\n              </Col>\n            </Row>\n          </Container>\n        </Modal.Body>\n      </Modal>\n    );\n  }\n\n}\n"]},"metadata":{},"sourceType":"module"}