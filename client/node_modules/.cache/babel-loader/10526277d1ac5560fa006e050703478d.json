{"ast":null,"code":"import { __assign, __awaiter, __generator } from \"tslib\";\nimport { HttpRequest } from \"@aws-sdk/protocol-http\";\nexport function addExpectContinueMiddleware(options) {\n  var _this = this;\n\n  return function (next) {\n    return function (args) {\n      return __awaiter(_this, void 0, void 0, function () {\n        var request;\n        return __generator(this, function (_a) {\n          request = args.request;\n\n          if (HttpRequest.isInstance(request) && request.body && options.runtime === \"node\") {\n            request.headers = __assign(__assign({}, request.headers), {\n              Expect: \"100-continue\"\n            });\n          }\n\n          return [2, next(__assign(__assign({}, args), {\n            request: request\n          }))];\n        });\n      });\n    };\n  };\n}\nexport var addExpectContinueMiddlewareOptions = {\n  step: \"build\",\n  tags: [\"SET_EXPECT_HEADER\", \"EXPECT_HEADER\"],\n  name: \"addExpectContinueMiddleware\",\n  override: true\n};\nexport var getAddExpectContinuePlugin = function getAddExpectContinuePlugin(options) {\n  return {\n    applyToStack: function applyToStack(clientStack) {\n      clientStack.add(addExpectContinueMiddleware(options), addExpectContinueMiddlewareOptions);\n    }\n  };\n};","map":{"version":3,"sources":["/home/chuka/joe/ChopChowSD/node_modules/@aws-sdk/middleware-expect-continue/dist-es/index.js"],"names":["__assign","__awaiter","__generator","HttpRequest","addExpectContinueMiddleware","options","_this","next","args","request","_a","isInstance","body","runtime","headers","Expect","addExpectContinueMiddlewareOptions","step","tags","name","override","getAddExpectContinuePlugin","applyToStack","clientStack","add"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,WAA9B,QAAiD,OAAjD;AACA,SAASC,WAAT,QAA4B,wBAA5B;AACA,OAAO,SAASC,2BAAT,CAAqCC,OAArC,EAA8C;AACjD,MAAIC,KAAK,GAAG,IAAZ;;AACA,SAAO,UAAUC,IAAV,EAAgB;AACnB,WAAO,UAAUC,IAAV,EAAgB;AAAE,aAAOP,SAAS,CAACK,KAAD,EAAQ,KAAK,CAAb,EAAgB,KAAK,CAArB,EAAwB,YAAY;AACzE,YAAIG,OAAJ;AACA,eAAOP,WAAW,CAAC,IAAD,EAAO,UAAUQ,EAAV,EAAc;AACnCD,UAAAA,OAAO,GAAGD,IAAI,CAACC,OAAf;;AACA,cAAIN,WAAW,CAACQ,UAAZ,CAAuBF,OAAvB,KAAmCA,OAAO,CAACG,IAA3C,IAAmDP,OAAO,CAACQ,OAAR,KAAoB,MAA3E,EAAmF;AAC/EJ,YAAAA,OAAO,CAACK,OAAR,GAAkBd,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAKS,OAAO,CAACK,OAAb,CAAT,EAAgC;AAAEC,cAAAA,MAAM,EAAE;AAAV,aAAhC,CAA1B;AACH;;AACD,iBAAO,CAAC,CAAD,EAAIR,IAAI,CAACP,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAKQ,IAAL,CAAT,EAAqB;AAAEC,YAAAA,OAAO,EAAEA;AAAX,WAArB,CAAT,CAAR,CAAP;AACH,SANiB,CAAlB;AAOH,OATwC,CAAhB;AASpB,KATL;AAUH,GAXD;AAYH;AACD,OAAO,IAAIO,kCAAkC,GAAG;AAC5CC,EAAAA,IAAI,EAAE,OADsC;AAE5CC,EAAAA,IAAI,EAAE,CAAC,mBAAD,EAAsB,eAAtB,CAFsC;AAG5CC,EAAAA,IAAI,EAAE,6BAHsC;AAI5CC,EAAAA,QAAQ,EAAE;AAJkC,CAAzC;AAMP,OAAO,IAAIC,0BAA0B,GAAG,SAA7BA,0BAA6B,CAAUhB,OAAV,EAAmB;AAAE,SAAQ;AACjEiB,IAAAA,YAAY,EAAE,sBAAUC,WAAV,EAAuB;AACjCA,MAAAA,WAAW,CAACC,GAAZ,CAAgBpB,2BAA2B,CAACC,OAAD,CAA3C,EAAsDW,kCAAtD;AACH;AAHgE,GAAR;AAIxD,CAJE","sourcesContent":["import { __assign, __awaiter, __generator } from \"tslib\";\nimport { HttpRequest } from \"@aws-sdk/protocol-http\";\nexport function addExpectContinueMiddleware(options) {\n    var _this = this;\n    return function (next) {\n        return function (args) { return __awaiter(_this, void 0, void 0, function () {\n            var request;\n            return __generator(this, function (_a) {\n                request = args.request;\n                if (HttpRequest.isInstance(request) && request.body && options.runtime === \"node\") {\n                    request.headers = __assign(__assign({}, request.headers), { Expect: \"100-continue\" });\n                }\n                return [2, next(__assign(__assign({}, args), { request: request }))];\n            });\n        }); };\n    };\n}\nexport var addExpectContinueMiddlewareOptions = {\n    step: \"build\",\n    tags: [\"SET_EXPECT_HEADER\", \"EXPECT_HEADER\"],\n    name: \"addExpectContinueMiddleware\",\n    override: true,\n};\nexport var getAddExpectContinuePlugin = function (options) { return ({\n    applyToStack: function (clientStack) {\n        clientStack.add(addExpectContinueMiddleware(options), addExpectContinueMiddlewareOptions);\n    },\n}); };\n"]},"metadata":{},"sourceType":"module"}