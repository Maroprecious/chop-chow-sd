{"ast":null,"code":"import { FETCH_ERROR, FETCH_START, FETCH_SUCCESS, INIT_URL, SIGNOUT_USER_SUCCESS, USER_DATA, USER_TOKEN_SET, USER_ROLE, CUSTOMER_ID } from \"../constants/ActionTypes\";\nimport axios from '../util/Api';\nexport const setInitUrl = url => {\n  return {\n    type: INIT_URL,\n    payload: url\n  };\n};\nexport const userSignUp = ({\n  name,\n  email,\n  password\n}) => {\n  console.log(name, email, password);\n  return dispatch => {\n    dispatch({\n      type: FETCH_START\n    });\n    axios.post('/register', {\n      name: name,\n      email: email,\n      password: password\n    }).then(({\n      data\n    }) => {\n      console.log(\"__ SignUp api res __ : \", data);\n      localStorage.setItem(\"token\", JSON.stringify(data.token));\n      axios.defaults.headers.common['Authorization'] = \"Bearer \" + data.token;\n      dispatch({\n        type: FETCH_SUCCESS\n      });\n      dispatch({\n        type: USER_TOKEN_SET,\n        payload: data.token\n      });\n      dispatch({\n        type: USER_ROLE,\n        payload: data.role\n      }); // dispatch({ type: USER_DATA, payload: data.user });\n      // dispatch({ type: CUSTOMER_ID, payload: data.customerID });\n    }).catch(err => {\n      console.error(\"xxx userSignUp Request ERROR xxx\");\n      console.log(err.response.status);\n\n      if (err.response.status === 422) {\n        dispatch({\n          type: FETCH_ERROR,\n          payload: \"Email address was already taken. If you are owner, please proceed to login with this email.\"\n        });\n      }\n    });\n  };\n};\nexport const userSignIn = ({\n  email,\n  password\n}) => {\n  return dispatch => {\n    dispatch({\n      type: FETCH_START\n    });\n    dispatch({\n      type: USER_TOKEN_SET,\n      payload: null\n    });\n    dispatch({\n      type: USER_DATA,\n      payload: null\n    });\n    axios.post('/login', {\n      email: email,\n      password: password\n    }).then(({\n      data\n    }) => {\n      console.log(\" ___ userSignIn RESPONSE ___ \", data);\n      localStorage.setItem(\"userToken\", data.token);\n      localStorage.setItem(\"userRole\", data.role);\n      axios.defaults.headers.common['Authorization'] = \"Bearer \" + data.token;\n      dispatch({\n        type: FETCH_SUCCESS\n      });\n      dispatch({\n        type: USER_TOKEN_SET,\n        payload: data.token\n      });\n      dispatch({\n        type: USER_ROLE,\n        payload: data.role\n      }); // dispatch({ type: USER_DATA, payload: data.username });\n      // dispatch({ type: CUSTOMER_ID, payload: data.customerID });\n\n      console.log(\" ___ userSignIn customerID \", data.customerID);\n    }).catch(err => {\n      console.error(\"xxx userSignIn Request ERROR xxx\", err);\n      dispatch({\n        type: FETCH_ERROR,\n        payload: \"Error during user sign in request\"\n      });\n    });\n  };\n};\nexport const getUser = () => {\n  return dispatch => {\n    dispatch({\n      type: FETCH_START\n    });\n    axios.get('/authenticate-app-page').then(({\n      data\n    }) => {\n      console.log(\" ___ getUser RESPONSE ___ \", data);\n      dispatch({\n        type: FETCH_SUCCESS\n      });\n      dispatch({\n        type: USER_DATA,\n        payload: data.username\n      });\n      dispatch({\n        type: CUSTOMER_ID,\n        payload: data.data\n      });\n    }).catch(err => {\n      console.error(\"xxx getUser Request ERROR xxx\", err);\n      dispatch({\n        type: FETCH_ERROR,\n        payload: \"Error during get me request with this token\"\n      });\n      dispatch({\n        type: SIGNOUT_USER_SUCCESS\n      });\n    });\n  };\n};\nexport const changePassword = payload => {\n  return dispatch => {\n    dispatch({\n      type: FETCH_START\n    });\n    axios.post('/change-password', payload).then(({\n      data\n    }) => {\n      console.log(\" Change Password API RES ->> \", data);\n      axios.defaults.headers.common['Authorization'] = \"Bearer \" + data.token;\n      dispatch({\n        type: FETCH_SUCCESS,\n        payload: \"Password was changed successfully.\"\n      });\n      dispatch({\n        type: USER_TOKEN_SET,\n        payload: data.token\n      });\n      dispatch({\n        type: USER_DATA,\n        payload: data.user\n      });\n    }).catch(err => {\n      console.error(\"xxx changePassword Request ERROR xxx\", err.response);\n      dispatch({\n        type: FETCH_ERROR,\n        payload: \"Password is not matched\"\n      });\n    });\n  };\n};\nexport const cancelSubscription = () => {\n  return dispatch => {\n    dispatch({\n      type: FETCH_START\n    });\n    axios.get('/unsubscribe').then(({\n      data\n    }) => {\n      console.log(\" Unsubscrieb API RES ->> \", data);\n      axios.defaults.headers.common['Authorization'] = \"Bearer \" + data.token;\n      dispatch({\n        type: FETCH_SUCCESS,\n        payload: \"Subscription was cancelled successfully.\"\n      });\n      dispatch({\n        type: USER_TOKEN_SET,\n        payload: data.token\n      });\n      dispatch({\n        type: USER_DATA,\n        payload: data.user\n      });\n    }).catch(err => {\n      console.error(\"xxx cancel subscription Request ERROR xxx\", err.response);\n      dispatch({\n        type: FETCH_ERROR,\n        payload: \"Error during cancel subscription request.\"\n      });\n    });\n  };\n};\nexport const userSignOut = () => {\n  return dispatch => {\n    dispatch({\n      type: FETCH_START\n    });\n    axios.get('/logout').then(({\n      data\n    }) => {\n      localStorage.removeItem(\"token\");\n      dispatch({\n        type: FETCH_SUCCESS\n      });\n      dispatch({\n        type: SIGNOUT_USER_SUCCESS\n      });\n    }).catch(err => {\n      console.error(\"xxx userSignOut Request ERROR xxx\", err);\n      dispatch({\n        type: FETCH_ERROR,\n        payload: \"Error during user sign out request\"\n      });\n    });\n  };\n};\nexport const resendEmail = () => {\n  return dispatch => {\n    dispatch({\n      type: FETCH_START\n    });\n    axios.get('/email/resend').then(({\n      data\n    }) => {\n      console.log(\" resend email api success: \", data.message);\n      dispatch({\n        type: FETCH_SUCCESS,\n        payload: data.message\n      });\n    }).catch(err => {\n      console.error(\"xxx resendEmail Request ERROR xxx\", err);\n      dispatch({\n        type: FETCH_ERROR,\n        payload: \"Error during request to resend email\"\n      });\n    });\n  };\n};","map":{"version":3,"sources":["/home/chuka/joe/ChopChowSD/client/src/actions/Auth.js"],"names":["FETCH_ERROR","FETCH_START","FETCH_SUCCESS","INIT_URL","SIGNOUT_USER_SUCCESS","USER_DATA","USER_TOKEN_SET","USER_ROLE","CUSTOMER_ID","axios","setInitUrl","url","type","payload","userSignUp","name","email","password","console","log","dispatch","post","then","data","localStorage","setItem","JSON","stringify","token","defaults","headers","common","role","catch","err","error","response","status","userSignIn","customerID","getUser","get","username","changePassword","user","cancelSubscription","userSignOut","removeItem","resendEmail","message"],"mappings":"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","sourcesContent":["import {\n    FETCH_ERROR,\n    FETCH_START,\n    FETCH_SUCCESS,\n    INIT_URL,\n    SIGNOUT_USER_SUCCESS,\n    USER_DATA,\n    USER_TOKEN_SET,\n    USER_ROLE,\n    CUSTOMER_ID,\n} from \"../constants/ActionTypes\";\nimport axios from '../util/Api';\n\nexport const setInitUrl = (url) => {\n    return {\n        type: INIT_URL,\n        payload: url\n    };\n};\n\nexport const userSignUp = ({ name, email, password }) => {\n    console.log(name, email, password);\n    return (dispatch) => {\n        dispatch({ type: FETCH_START });\n        axios.post('/register', {\n            name: name,\n            email: email,\n            password: password\n        }\n        ).then(({ data }) => {\n            console.log(\"__ SignUp api res __ : \", data);\n            localStorage.setItem(\"token\", JSON.stringify(data.token));\n            axios.defaults.headers.common['Authorization'] = \"Bearer \" + data.token;\n            dispatch({ type: FETCH_SUCCESS });\n            dispatch({ type: USER_TOKEN_SET, payload: data.token });\n            dispatch({ type: USER_ROLE, payload: data.role });\n            // dispatch({ type: USER_DATA, payload: data.user });\n            // dispatch({ type: CUSTOMER_ID, payload: data.customerID });\n        }).catch(err => {\n            console.error(\"xxx userSignUp Request ERROR xxx\");\n            console.log(err.response.status);\n            if (err.response.status === 422) {\n                dispatch({ type: FETCH_ERROR, payload: \"Email address was already taken. If you are owner, please proceed to login with this email.\" });\n            }\n        });\n    }\n};\n\nexport const userSignIn = ({ email, password }) => {\n    return (dispatch) => {\n        dispatch({ type: FETCH_START });\n        dispatch({ type: USER_TOKEN_SET, payload: null });\n        dispatch({ type: USER_DATA, payload: null });\n        axios.post('/login', {\n            email: email,\n            password: password,\n        }\n        ).then(({ data }) => {\n            console.log(\" ___ userSignIn RESPONSE ___ \", data);\n            localStorage.setItem(\"userToken\", data.token);\n            localStorage.setItem(\"userRole\", data.role);\n\n            axios.defaults.headers.common['Authorization'] = \"Bearer \" + data.token;\n            dispatch({ type: FETCH_SUCCESS });\n            dispatch({ type: USER_TOKEN_SET, payload: data.token });\n            dispatch({ type: USER_ROLE, payload: data.role });\n            // dispatch({ type: USER_DATA, payload: data.username });\n            // dispatch({ type: CUSTOMER_ID, payload: data.customerID });\n            console.log(\" ___ userSignIn customerID \", data.customerID);\n\n        }).catch(err => {\n            console.error(\"xxx userSignIn Request ERROR xxx\", err);\n            dispatch({ type: FETCH_ERROR, payload: \"Error during user sign in request\" });\n        });\n    }\n};\n\nexport const getUser = () => {\n    return (dispatch) => {\n        dispatch({ type: FETCH_START });\n        axios.get('/authenticate-app-page',\n        ).then(({ data }) => {\n            console.log(\" ___ getUser RESPONSE ___ \", data);\n            dispatch({ type: FETCH_SUCCESS });\n            dispatch({ type: USER_DATA, payload: data.username });\n            dispatch({ type: CUSTOMER_ID, payload: data.data });\n\n        }).catch(err => {\n            console.error(\"xxx getUser Request ERROR xxx\", err);\n            dispatch({ type: FETCH_ERROR, payload: \"Error during get me request with this token\" });\n            dispatch({ type: SIGNOUT_USER_SUCCESS });\n        });\n    }\n};\n\nexport const changePassword = (payload) => {\n    return (dispatch) => {\n        dispatch({ type: FETCH_START });\n        axios.post('/change-password', payload).then(({ data }) => {\n            console.log(\" Change Password API RES ->> \", data);\n            axios.defaults.headers.common['Authorization'] = \"Bearer \" + data.token;\n            dispatch({ type: FETCH_SUCCESS, payload: \"Password was changed successfully.\" });\n            dispatch({ type: USER_TOKEN_SET, payload: data.token });\n            dispatch({ type: USER_DATA, payload: data.user });\n        }).catch(err => {\n            console.error(\"xxx changePassword Request ERROR xxx\", err.response);\n            dispatch({ type: FETCH_ERROR, payload: \"Password is not matched\" });\n        });\n    }\n};\n\nexport const cancelSubscription = () => {\n    return (dispatch) => {\n        dispatch({ type: FETCH_START });\n        axios.get('/unsubscribe').then(({ data }) => {\n            console.log(\" Unsubscrieb API RES ->> \", data);\n            axios.defaults.headers.common['Authorization'] = \"Bearer \" + data.token;\n            dispatch({ type: FETCH_SUCCESS, payload: \"Subscription was cancelled successfully.\" });\n            dispatch({ type: USER_TOKEN_SET, payload: data.token });\n            dispatch({ type: USER_DATA, payload: data.user });\n        }).catch(err => {\n            console.error(\"xxx cancel subscription Request ERROR xxx\", err.response);\n            dispatch({ type: FETCH_ERROR, payload: \"Error during cancel subscription request.\" });\n        });\n    }\n}\nexport const userSignOut = () => {\n    return (dispatch) => {\n        dispatch({ type: FETCH_START });\n        axios.get('/logout',\n        ).then(({ data }) => {\n            localStorage.removeItem(\"token\");\n            dispatch({ type: FETCH_SUCCESS });\n            dispatch({ type: SIGNOUT_USER_SUCCESS });\n        }).catch(err => {\n            console.error(\"xxx userSignOut Request ERROR xxx\", err);\n            dispatch({ type: FETCH_ERROR, payload: \"Error during user sign out request\" });\n        });\n    }\n};\n\nexport const resendEmail = () => {\n    return (dispatch) => {\n        dispatch({ type: FETCH_START });\n        axios.get('/email/resend')\n            .then(({ data }) => {\n                console.log(\" resend email api success: \", data.message)\n                dispatch({ type: FETCH_SUCCESS, payload: data.message });\n            })\n            .catch(err => {\n                console.error(\"xxx resendEmail Request ERROR xxx\", err);\n                dispatch({ type: FETCH_ERROR, payload: \"Error during request to resend email\" });\n            });\n    }\n}\n"]},"metadata":{},"sourceType":"module"}