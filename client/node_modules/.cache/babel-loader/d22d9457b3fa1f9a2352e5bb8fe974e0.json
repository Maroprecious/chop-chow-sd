{"ast":null,"code":"import { __assign, __awaiter, __generator } from \"tslib\";\nimport { SignatureV4 } from \"@aws-sdk/signature-v4\";\n\nvar SignatureV4MultiRegion = function () {\n  function SignatureV4MultiRegion(options) {\n    this.sigv4Signer = new SignatureV4(options);\n    this.signerOptions = options;\n  }\n\n  SignatureV4MultiRegion.prototype.sign = function (requestToSign, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        if (options.signingRegion === \"*\") {\n          if (this.signerOptions.runtime !== \"node\") throw new Error(\"This request requires signing with SigV4Asymmetric algorithm. It's only available in Node.js\");\n          return [2, this.getSigv4aSigner().sign(requestToSign, options)];\n        }\n\n        return [2, this.sigv4Signer.sign(requestToSign, options)];\n      });\n    });\n  };\n\n  SignatureV4MultiRegion.prototype.presign = function (originalRequest, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        if (options.signingRegion === \"*\") {\n          if (this.signerOptions.runtime !== \"node\") throw new Error(\"This request requires signing with SigV4Asymmetric algorithm. It's only available in Node.js\");\n          return [2, this.getSigv4aSigner().presign(originalRequest, options)];\n        }\n\n        return [2, this.sigv4Signer.presign(originalRequest, options)];\n      });\n    });\n  };\n\n  SignatureV4MultiRegion.prototype.getSigv4aSigner = function () {\n    if (!this.sigv4aSigner) {\n      var CrtSignerV4_1;\n\n      try {\n        CrtSignerV4_1 = typeof require === \"function\" && require(\"@aws-sdk/signature-v4-crt\").CrtSignerV4;\n        if (typeof CrtSignerV4_1 !== \"function\") throw new Error();\n      } catch (e) {\n        e.message = \"\".concat(e.message, \"\\nPlease check if you have installed \\\"@aws-sdk/signature-v4-crt\\\" package explicitly. \\n\") + \"For more information please go to \" + \"https://github.com/aws/aws-sdk-js-v3#functionality-requiring-aws-common-runtime-crt\";\n        throw e;\n      }\n\n      this.sigv4aSigner = new CrtSignerV4_1(__assign(__assign({}, this.signerOptions), {\n        signingAlgorithm: 1\n      }));\n    }\n\n    return this.sigv4aSigner;\n  };\n\n  return SignatureV4MultiRegion;\n}();\n\nexport { SignatureV4MultiRegion };","map":{"version":3,"sources":["/home/chuka/joe/ChopChowSD/node_modules/@aws-sdk/signature-v4-multi-region/dist-es/SignatureV4MultiRegion.js"],"names":["__assign","__awaiter","__generator","SignatureV4","SignatureV4MultiRegion","options","sigv4Signer","signerOptions","prototype","sign","requestToSign","_a","signingRegion","runtime","Error","getSigv4aSigner","presign","originalRequest","sigv4aSigner","CrtSignerV4_1","require","CrtSignerV4","e","message","concat","signingAlgorithm"],"mappings":"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","sourcesContent":["import { __assign, __awaiter, __generator } from \"tslib\";\nimport { SignatureV4 } from \"@aws-sdk/signature-v4\";\nvar SignatureV4MultiRegion = (function () {\n    function SignatureV4MultiRegion(options) {\n        this.sigv4Signer = new SignatureV4(options);\n        this.signerOptions = options;\n    }\n    SignatureV4MultiRegion.prototype.sign = function (requestToSign, options) {\n        if (options === void 0) { options = {}; }\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                if (options.signingRegion === \"*\") {\n                    if (this.signerOptions.runtime !== \"node\")\n                        throw new Error(\"This request requires signing with SigV4Asymmetric algorithm. It's only available in Node.js\");\n                    return [2, this.getSigv4aSigner().sign(requestToSign, options)];\n                }\n                return [2, this.sigv4Signer.sign(requestToSign, options)];\n            });\n        });\n    };\n    SignatureV4MultiRegion.prototype.presign = function (originalRequest, options) {\n        if (options === void 0) { options = {}; }\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                if (options.signingRegion === \"*\") {\n                    if (this.signerOptions.runtime !== \"node\")\n                        throw new Error(\"This request requires signing with SigV4Asymmetric algorithm. It's only available in Node.js\");\n                    return [2, this.getSigv4aSigner().presign(originalRequest, options)];\n                }\n                return [2, this.sigv4Signer.presign(originalRequest, options)];\n            });\n        });\n    };\n    SignatureV4MultiRegion.prototype.getSigv4aSigner = function () {\n        if (!this.sigv4aSigner) {\n            var CrtSignerV4_1;\n            try {\n                CrtSignerV4_1 = typeof require === \"function\" && require(\"@aws-sdk/signature-v4-crt\").CrtSignerV4;\n                if (typeof CrtSignerV4_1 !== \"function\")\n                    throw new Error();\n            }\n            catch (e) {\n                e.message =\n                    \"\".concat(e.message, \"\\nPlease check if you have installed \\\"@aws-sdk/signature-v4-crt\\\" package explicitly. \\n\") +\n                        \"For more information please go to \" +\n                        \"https://github.com/aws/aws-sdk-js-v3#functionality-requiring-aws-common-runtime-crt\";\n                throw e;\n            }\n            this.sigv4aSigner = new CrtSignerV4_1(__assign(__assign({}, this.signerOptions), { signingAlgorithm: 1 }));\n        }\n        return this.sigv4aSigner;\n    };\n    return SignatureV4MultiRegion;\n}());\nexport { SignatureV4MultiRegion };\n"]},"metadata":{},"sourceType":"module"}