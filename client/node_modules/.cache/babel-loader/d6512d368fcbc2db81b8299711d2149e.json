{"ast":null,"code":"import _slicedToArray from \"/home/chuka/joe/ChopChowSD/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/chuka/joe/ChopChowSD/client/src/components/ViewSuggestedMeals.js\";\nimport React, { Component } from \"react\";\nimport MyModal from \"./mealsPage/Mymodal\";\nimport WithScrollbar from \"./mealsPage/product_slider/WithScrollbar\";\n\nclass ViewSuggestedMeals extends Component {\n  // Mongo\n  constructor(props) {\n    super(props);\n    this.products = [];\n    this.meal_popups = [];\n    this.state = {\n      meals_fetched: false,\n      suggestMealPopOver: false,\n      mealsListed: false,\n      mealSelected: false,\n      IngredientsListed: false,\n      recipes: this.meals,\n      //[this.Garri, this.Jollof_Rice],\n      valueAllDataLists: [],\n      showIngredients: {\n        hidden: true\n      },\n      showProducts: {\n        hidden: true\n      },\n      //open: false,\n      topNav_className: \"w3-bar w3-dark-grey w3-green topnav\"\n    };\n  }\n\n  componentDidMount() {\n    console.log(\"Comes in meal pages component did mount\"); // var url = \"https://chopchowdev.herokuapp.com/api/get-suggested-meals\";\n\n    var url = \"http://localhost:5000/api/get-suggested-meals\";\n    fetch(url).then(res => res.text()).then(body => {\n      // console.log(\"should print body\");\n      // console.log(body);\n      var productsList = JSON.parse(body); // console.log(productsList);\n\n      if (productsList && productsList.data.length !== 0) {\n        console.log(\"shows products does return\");\n        console.log(productsList.data.length);\n\n        for (var i = 0; i < productsList.data.length; i++) {\n          this.products.push(productsList.data[i]);\n        }\n\n        console.log(this.products); // this.entries = Object.entries(this.products);\n        // console.log(entries);\n\n        this.setState({\n          meals_fetched: true\n        });\n      } else {\n        console.log(\"shows products do not return\");\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  showIngredient(index) {\n    console.log(\"updating popup boolean\");\n    this.meal_popups[index] = !this.meal_popups[index];\n  }\n\n  render() {\n    const items = [];\n    console.log(\"Hello RENDER\");\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n\n    try {\n      for (var _iterator = this.products.entries()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n        const _step$value = _slicedToArray(_step.value, 2),\n              index = _step$value[0],\n              value = _step$value[1];\n\n        console.log(\"COMES IN RENDER\"); //console.log();\n        // var base_index = 0;\n\n        console.log(value);\n        const mealPrep = value.instructions.map(step =>\n        /*#__PURE__*/\n        React.createElement(\"text\", {\n          key: value.label + \" - \" + step,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 9\n          }\n        }, \" \", step, \" \",\n        /*#__PURE__*/\n        React.createElement(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 56\n          }\n        }))); // console.log(mealPrep);\n        // const instructionsLength = value.instructions.length;\n        //console.log(instructionsLength);\n        // var mealIngredient = value.ingredients ;\n        // const ingredientsList = value.ingredients.map(step => (\n        //   <li key={step}> {step} </li>\n        // ));\n\n        this.meal_popups.push(false); // console.log(this.meal_popups);\n        // console.log(index);\n\n        items.push(\n        /*#__PURE__*/\n        React.createElement(\"div\", {\n          key: value.label + value.id,\n          className: \"col-sm-12 col-md-4 col-lg-3 mealContainer\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 9\n          }\n        },\n        /*#__PURE__*/\n        React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 11\n          }\n        },\n        /*#__PURE__*/\n        React.createElement(\"div\", {\n          style: containerStyle,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }\n        },\n        /*#__PURE__*/\n        React.createElement(\"img\", {\n          src: value.imageSrc,\n          className: \"images\",\n          style: {\n            width: \"200px\",\n            height: \"180px\"\n          },\n          alt: value.id,\n          onClick: () => {\n            this.meal_popups[index] = !this.meal_popups[index];\n            console.log(this.meal_popups);\n            var x = document.getElementById(value.id);\n            var y = document.getElementById(value.id + \"products\");\n\n            if (this.meal_popups[index]) {\n              x.style.display = \"block\";\n              y.style.display = \"block\";\n            } else {\n              x.style.display = \"none\";\n              y.style.display = \"none\";\n            }\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 15\n          }\n        }),\n        /*#__PURE__*/\n        React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 15\n          }\n        }, \" \", \" \",\n        /*#__PURE__*/\n        React.createElement(\"span\", {\n          style: {\n            color: \"orange\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 17\n          }\n        }, value.label), \" \",\n        /*#__PURE__*/\n        React.createElement(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 73\n          }\n        }), \" \", \" \",\n        /*#__PURE__*/\n        React.createElement(\"span\", {\n          style: {\n            color: \"grey\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 17\n          }\n        }, \"View Details | \", value.cookTime),\n        /*#__PURE__*/\n        React.createElement(\"span\", {\n          style: {\n            color: \"black\"\n          },\n          onClick: () => {\n            this.meal_popups[index] = !this.meal_popups[index];\n            console.log(this.meal_popups);\n            var x = document.getElementById(value.id);\n            var y = document.getElementById(value.id + \"products\");\n\n            if (this.meal_popups[index]) {\n              x.style.display = \"block\";\n              y.style.display = \"block\";\n            } else {\n              x.style.display = \"none\";\n              y.style.display = \"none\";\n            }\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 17\n          }\n        }),\n        /*#__PURE__*/\n        React.createElement(\"div\", {\n          id: value.id,\n          style: {\n            display: \"none\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 17\n          }\n        }, value.intro),\n        /*#__PURE__*/\n        React.createElement(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 17\n          }\n        }),\n        /*#__PURE__*/\n        React.createElement(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 17\n          }\n        }),\n        /*#__PURE__*/\n        React.createElement(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 17\n          }\n        })),\n        /*#__PURE__*/\n        React.createElement(\"div\", {\n          id: value.id + \"products\",\n          style: {\n            display: \"none\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 15\n          }\n        },\n        /*#__PURE__*/\n        React.createElement(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 17\n          }\n        }), value.products)))));\n      }\n    } catch (err) {\n      _didIteratorError = true;\n      _iteratorError = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion && _iterator.return != null) {\n          _iterator.return();\n        }\n      } finally {\n        if (_didIteratorError) {\n          throw _iteratorError;\n        }\n      }\n    }\n\n    return (\n      /*#__PURE__*/\n      React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 7\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(\"div\", {\n        id: \"title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 9\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 11\n        }\n      }, \"Suggested Meals\")),\n      /*#__PURE__*/\n      React.createElement(\"div\", {\n        className: \"container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 9\n        }\n      }, items))\n    );\n  }\n\n}\n\nexport default ViewSuggestedMeals;\nconst containerStyle = {\n  //font: \"50px\",\n  display: \"inline-block\",\n  width: \"100%\",\n  height: \"100%\"\n};","map":{"version":3,"sources":["/home/chuka/joe/ChopChowSD/client/src/components/ViewSuggestedMeals.js"],"names":["React","Component","MyModal","WithScrollbar","ViewSuggestedMeals","constructor","props","products","meal_popups","state","meals_fetched","suggestMealPopOver","mealsListed","mealSelected","IngredientsListed","recipes","meals","valueAllDataLists","showIngredients","hidden","showProducts","topNav_className","componentDidMount","console","log","url","fetch","then","res","text","body","productsList","JSON","parse","data","length","i","push","setState","catch","err","showIngredient","index","render","items","entries","value","mealPrep","instructions","map","step","label","id","containerStyle","imageSrc","width","height","x","document","getElementById","y","style","display","color","cookTime","intro"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,qBAApB;AACA,OAAOC,aAAP,MAA0B,0CAA1B;;AAEA,MAAMC,kBAAN,SAAiCH,SAAjC,CAA2C;AAEvC;AAIFI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AADiB,SAHjBC,QAGiB,GAHN,EAGM;AAAA,SAqDnBC,WArDmB,GAqDL,EArDK;AAEjB,SAAKC,KAAL,GAAa;AACXC,MAAAA,aAAa,EAAG,KADL;AAEXC,MAAAA,kBAAkB,EAAE,KAFT;AAGXC,MAAAA,WAAW,EAAE,KAHF;AAIXC,MAAAA,YAAY,EAAE,KAJH;AAKXC,MAAAA,iBAAiB,EAAE,KALR;AAMXC,MAAAA,OAAO,EAAE,KAAKC,KANH;AAMU;AACrBC,MAAAA,iBAAiB,EAAE,EAPR;AAQXC,MAAAA,eAAe,EAAE;AACfC,QAAAA,MAAM,EAAE;AADO,OARN;AAWXC,MAAAA,YAAY,EAAE;AACZD,QAAAA,MAAM,EAAE;AADI,OAXH;AAcX;AACAE,MAAAA,gBAAgB,EAAE;AAfP,KAAb;AAiBD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,OAAO,CAACC,GAAR,CAAY,yCAAZ,EADkB,CAElB;;AACA,QAAIC,GAAG,GAAG,+CAAV;AAEAC,IAAAA,KAAK,CAACD,GAAD,CAAL,CACGE,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAEQG,IAAI,IAAI;AACZ;AACA;AACA,UAAIC,YAAY,GAAGC,IAAI,CAACC,KAAL,CAAWH,IAAX,CAAnB,CAHY,CAIZ;;AACA,UAAGC,YAAY,IAAIA,YAAY,CAACG,IAAb,CAAkBC,MAAlB,KAA6B,CAAhD,EAAkD;AAChDZ,QAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ;AACAD,QAAAA,OAAO,CAACC,GAAR,CAAYO,YAAY,CAACG,IAAb,CAAkBC,MAA9B;;AACA,aAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,YAAY,CAACG,IAAb,CAAkBC,MAAtC,EAA8CC,CAAC,EAA/C,EAAmD;AACjD,eAAK7B,QAAL,CAAc8B,IAAd,CAAmBN,YAAY,CAACG,IAAb,CAAkBE,CAAlB,CAAnB;AACD;;AACDb,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKjB,QAAjB,EANgD,CAOhD;AACA;;AACA,aAAK+B,QAAL,CAAc;AAAC5B,UAAAA,aAAa,EAAC;AAAf,SAAd;AACD,OAVD,MAWI;AACFa,QAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ;AACD;AACF,KArBH,EAsBGe,KAtBH,CAsBSC,GAAG,IAAI;AACZjB,MAAAA,OAAO,CAACC,GAAR,CAAYgB,GAAZ;AACD,KAxBH;AAyBD;;AAIDC,EAAAA,cAAc,CAACC,KAAD,EAAQ;AACpBnB,IAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;AACA,SAAKhB,WAAL,CAAiBkC,KAAjB,IAA0B,CAAC,KAAKlC,WAAL,CAAiBkC,KAAjB,CAA3B;AACD;;AAGDC,EAAAA,MAAM,GAAG;AACP,UAAMC,KAAK,GAAG,EAAd;AACArB,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AAFO;AAAA;AAAA;;AAAA;AAGP,2BAA6B,KAAKjB,QAAL,CAAcsC,OAAd,EAA7B,8HAAsD;AAAA;AAAA,cAA1CH,KAA0C;AAAA,cAAnCI,KAAmC;;AACpDvB,QAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EADoD,CAEpD;AACA;;AACAD,QAAAA,OAAO,CAACC,GAAR,CAAYsB,KAAZ;AACA,cAAMC,QAAQ,GAAGD,KAAK,CAACE,YAAN,CAAmBC,GAAnB,CAAuBC,IAAI;AAAA;AAC1C;AAAM,UAAA,GAAG,EAAEJ,KAAK,CAACK,KAAN,GAAc,KAAd,GAAsBD,IAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAyCA,IAAzC;AAAA;AAA+C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAA/C,CADe,CAAjB,CALoD,CAQpD;AAEA;AACA;AAEA;AACA;AACA;AACA;;AACA,aAAK1C,WAAL,CAAiB6B,IAAjB,CAAsB,KAAtB,EAjBoD,CAkBpD;AACA;;AACAO,QAAAA,KAAK,CAACP,IAAN;AAAA;AACE;AAAK,UAAA,GAAG,EAAES,KAAK,CAACK,KAAN,GAAcL,KAAK,CAACM,EAA9B;AAAkC,UAAA,SAAS,EAAC,2CAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACE;AAAK,UAAA,KAAK,EAAEC,cAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACE;AACE,UAAA,GAAG,EAAEP,KAAK,CAACQ,QADb;AAEE,UAAA,SAAS,EAAC,QAFZ;AAGE,UAAA,KAAK,EAAE;AAAEC,YAAAA,KAAK,EAAE,OAAT;AAAkBC,YAAAA,MAAM,EAAE;AAA1B,WAHT;AAIE,UAAA,GAAG,EAAEV,KAAK,CAACM,EAJb;AAKE,UAAA,OAAO,EAAE,MAAM;AACb,iBAAK5C,WAAL,CAAiBkC,KAAjB,IAA0B,CAAC,KAAKlC,WAAL,CAAiBkC,KAAjB,CAA3B;AACAnB,YAAAA,OAAO,CAACC,GAAR,CAAY,KAAKhB,WAAjB;AACA,gBAAIiD,CAAC,GAAGC,QAAQ,CAACC,cAAT,CAAwBb,KAAK,CAACM,EAA9B,CAAR;AACA,gBAAIQ,CAAC,GAAGF,QAAQ,CAACC,cAAT,CAAwBb,KAAK,CAACM,EAAN,GAAW,UAAnC,CAAR;;AACA,gBAAI,KAAK5C,WAAL,CAAiBkC,KAAjB,CAAJ,EAA6B;AAC3Be,cAAAA,CAAC,CAACI,KAAF,CAAQC,OAAR,GAAkB,OAAlB;AACAF,cAAAA,CAAC,CAACC,KAAF,CAAQC,OAAR,GAAkB,OAAlB;AACD,aAHD,MAGO;AACLL,cAAAA,CAAC,CAACI,KAAF,CAAQC,OAAR,GAAkB,MAAlB;AACAF,cAAAA,CAAC,CAACC,KAAF,CAAQC,OAAR,GAAkB,MAAlB;AACD;AACF,WAjBH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAAA;AAqBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACG,GADH,EAGG,GAHH;AAAA;AAIE;AAAM,UAAA,KAAK,EAAE;AAAEC,YAAAA,KAAK,EAAE;AAAT,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAoCjB,KAAK,CAACK,KAA1C,CAJF;AAAA;AAI0D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAJ1D,EAMG,GANH,EAQG,GARH;AAAA;AASE;AAAM,UAAA,KAAK,EAAE;AAAEY,YAAAA,KAAK,EAAE;AAAT,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAAgDjB,KAAK,CAACkB,QAAtD,CATF;AAAA;AAUE;AACE,UAAA,KAAK,EAAE;AAAED,YAAAA,KAAK,EAAE;AAAT,WADT;AAEE,UAAA,OAAO,EAAE,MAAM;AACb,iBAAKvD,WAAL,CAAiBkC,KAAjB,IAA0B,CAAC,KAAKlC,WAAL,CAAiBkC,KAAjB,CAA3B;AACAnB,YAAAA,OAAO,CAACC,GAAR,CAAY,KAAKhB,WAAjB;AACA,gBAAIiD,CAAC,GAAGC,QAAQ,CAACC,cAAT,CAAwBb,KAAK,CAACM,EAA9B,CAAR;AACA,gBAAIQ,CAAC,GAAGF,QAAQ,CAACC,cAAT,CAAwBb,KAAK,CAACM,EAAN,GAAW,UAAnC,CAAR;;AACA,gBAAI,KAAK5C,WAAL,CAAiBkC,KAAjB,CAAJ,EAA6B;AAC3Be,cAAAA,CAAC,CAACI,KAAF,CAAQC,OAAR,GAAkB,OAAlB;AACAF,cAAAA,CAAC,CAACC,KAAF,CAAQC,OAAR,GAAkB,OAAlB;AACD,aAHD,MAGO;AACLL,cAAAA,CAAC,CAACI,KAAF,CAAQC,OAAR,GAAkB,MAAlB;AACAF,cAAAA,CAAC,CAACC,KAAF,CAAQC,OAAR,GAAkB,MAAlB;AACD;AACF,WAdH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAVF;AAAA;AA2BE;AAAK,UAAA,EAAE,EAAEhB,KAAK,CAACM,EAAf;AAAmB,UAAA,KAAK,EAAE;AAAEU,YAAAA,OAAO,EAAE;AAAX,WAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGhB,KAAK,CAACmB,KADT,CA3BF;AAAA;AAoCE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UApCF;AAAA;AAqCE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UArCF;AAAA;AAsCE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAtCF,CArBF;AAAA;AA6DE;AAAK,UAAA,EAAE,EAAEnB,KAAK,CAACM,EAAN,GAAW,UAApB;AAAgC,UAAA,KAAK,EAAE;AAAEU,YAAAA,OAAO,EAAE;AAAX,WAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF,EAGGhB,KAAK,CAACvC,QAHT,CA7DF,CADF,CADF,CADF;AAwFD;AA/GM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAgHP;AAAA;AACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACE;AAAK,QAAA,EAAE,EAAC,OAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,CADF;AAAA;AAIE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEKqC,KAFL,CAJF;AADF;AAaD;;AAhMwC;;AAmM3C,eAAexC,kBAAf;AAEA,MAAMiD,cAAc,GAAG;AACrB;AACAS,EAAAA,OAAO,EAAE,cAFY;AAGrBP,EAAAA,KAAK,EAAE,MAHc;AAIrBC,EAAAA,MAAM,EAAE;AAJa,CAAvB","sourcesContent":["import React, { Component } from \"react\";\nimport MyModal from \"./mealsPage/Mymodal\";\nimport WithScrollbar from \"./mealsPage/product_slider/WithScrollbar\";\n\nclass ViewSuggestedMeals extends Component {\n\n    // Mongo\n    products = [];\n    entries;\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      meals_fetched : false,\n      suggestMealPopOver: false,\n      mealsListed: false,\n      mealSelected: false,\n      IngredientsListed: false,\n      recipes: this.meals, //[this.Garri, this.Jollof_Rice],\n      valueAllDataLists: [],\n      showIngredients: {\n        hidden: true\n      },\n      showProducts: {\n        hidden: true\n      },\n      //open: false,\n      topNav_className: \"w3-bar w3-dark-grey w3-green topnav\"\n    };\n  }\n\n  componentDidMount() {\n    console.log(\"Comes in meal pages component did mount\");\n    // var url = \"https://chopchowdev.herokuapp.com/api/get-suggested-meals\";\n    var url = \"http://localhost:5000/api/get-suggested-meals\"\n\n    fetch(url)\n      .then(res => res.text())\n      .then(body => {\n        // console.log(\"should print body\");\n        // console.log(body);\n        var productsList = JSON.parse(body);\n        // console.log(productsList);\n        if(productsList && productsList.data.length !== 0){\n          console.log(\"shows products does return\");\n          console.log(productsList.data.length);\n          for (var i = 0; i < productsList.data.length; i++) {\n            this.products.push(productsList.data[i]);\n          }\n          console.log(this.products);\n          // this.entries = Object.entries(this.products);\n          // console.log(entries);\n          this.setState({meals_fetched:true});\n        }\n        else{\n          console.log(\"shows products do not return\");\n        }\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  }\n\n  meal_popups = [];\n\n  showIngredient(index) {\n    console.log(\"updating popup boolean\");\n    this.meal_popups[index] = !this.meal_popups[index];\n  }\n\n\n  render() {\n    const items = [];\n    console.log(\"Hello RENDER\");\n    for (const [index, value] of this.products.entries()) {\n      console.log(\"COMES IN RENDER\");\n      //console.log();\n      // var base_index = 0;\n      console.log(value);\n      const mealPrep = value.instructions.map(step => (\n        <text key={value.label + \" - \" + step}> {step} <br></br></text>\n      ));\n      // console.log(mealPrep);\n\n      // const instructionsLength = value.instructions.length;\n      //console.log(instructionsLength);\n\n      // var mealIngredient = value.ingredients ;\n      // const ingredientsList = value.ingredients.map(step => (\n      //   <li key={step}> {step} </li>\n      // ));\n      this.meal_popups.push(false);\n      // console.log(this.meal_popups);\n      // console.log(index);\n      items.push(\n        <div key={value.label + value.id} className=\"col-sm-12 col-md-4 col-lg-3 mealContainer\">\n          <div>\n            <div style={containerStyle}>\n              <img\n                src={value.imageSrc}\n                className=\"images\"\n                style={{ width: \"200px\", height: \"180px\" }}\n                alt={value.id}\n                onClick={() => {\n                  this.meal_popups[index] = !this.meal_popups[index];\n                  console.log(this.meal_popups);\n                  var x = document.getElementById(value.id);\n                  var y = document.getElementById(value.id + \"products\");\n                  if (this.meal_popups[index]) {\n                    x.style.display = \"block\";\n                    y.style.display = \"block\";\n                  } else {\n                    x.style.display = \"none\";\n                    y.style.display = \"none\";\n                  }\n                }}\n              ></img>\n              {/* <img src={value.imageSrc} className=\"images\" style={{width:\"100%\"}} alt={value.id} onClick={this.showIngredient(index)}></img> */}\n              <div>\n                {\" \"}\n                {/* <b> */}\n                {\" \"}\n                <span style={{ color: \"orange\" }} >{value.label}</span> <br></br>\n                {/* </b> */}\n                {\" \"}\n\n                {\" \"}\n                <span style={{ color: \"grey\" }}>View Details | {value.cookTime}</span>\n                <span\n                  style={{ color: \"black\" }}\n                  onClick={() => {\n                    this.meal_popups[index] = !this.meal_popups[index];\n                    console.log(this.meal_popups);\n                    var x = document.getElementById(value.id);\n                    var y = document.getElementById(value.id + \"products\");\n                    if (this.meal_popups[index]) {\n                      x.style.display = \"block\";\n                      y.style.display = \"block\";\n                    } else {\n                      x.style.display = \"none\";\n                      y.style.display = \"none\";\n                    }\n                  }}\n                >\n                </span>\n                <div id={value.id} style={{ display: \"none\" }}>\n                  {value.intro}\n                  {/* <MyModal\n                    value={value}\n                    mealPrep={mealPrep}\n                    ingredientsList={value.ingredients}\n                  /> */}\n\n                </div>\n                <br></br>\n                <br></br>\n                <br></br>\n              </div>\n              <div id={value.id + \"products\"} style={{ display: \"none\" }}>\n                {/* Meal Ingredients */}\n                <br></br>\n                {value.products}\n                {/* <WithScrollbar\n                  products={value} */}\n                {/* // ingredients={[ */}\n                {/* //   { name: \"sugar\", image: \"/images/products/sugar.jpeg\" },\n                //   { name: \"onion\", image: \"/images/products/onion.jpg\" },\n                //   { name: \"tomato\", image: \"/images/products/tomato.jpg\" },\n                //   { name: \"water\", image: \"/images/products/water.jpeg\" },\n                //   { */}\n                {/* //     name: \"vegetable oil\",\n                //     image: \"/images/products/vegetable_oil.jpg\"\n                //   }\n                // ]}\n                // /> */}\n                {/* // <br /> */}\n              </div>\n            </div>\n\n          </div>\n        </div>\n      );\n    }\n    return (\n      <div>\n        <div id=\"title\">\n          <b>Suggested Meals</b>\n        </div>\n        <div className=\"container\">\n          {/* <div className=\"row\"> */}\n            {items}\n            {/* </div> */}\n\n        </div>\n      </div>\n    )\n  };\n}\n\nexport default ViewSuggestedMeals;\n\nconst containerStyle = {\n  //font: \"50px\",\n  display: \"inline-block\",\n  width: \"100%\",\n  height: \"100%\"\n};\n\n"]},"metadata":{},"sourceType":"module"}