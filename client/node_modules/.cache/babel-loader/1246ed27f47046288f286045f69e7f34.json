{"ast":null,"code":"import { __assign, __awaiter, __generator, __values } from \"tslib\";\nexport function ssecMiddleware(options) {\n  var _this = this;\n\n  return function (next) {\n    return function (args) {\n      return __awaiter(_this, void 0, void 0, function () {\n        var input, properties, properties_1, properties_1_1, prop, value, valueView, encoded, hash, _a, _b, _c, _d, e_1_1;\n\n        var e_1, _e, _f;\n\n        return __generator(this, function (_g) {\n          switch (_g.label) {\n            case 0:\n              input = __assign({}, args.input);\n              properties = [{\n                target: \"SSECustomerKey\",\n                hash: \"SSECustomerKeyMD5\"\n              }, {\n                target: \"CopySourceSSECustomerKey\",\n                hash: \"CopySourceSSECustomerKeyMD5\"\n              }];\n              _g.label = 1;\n\n            case 1:\n              _g.trys.push([1, 6, 7, 8]);\n\n              properties_1 = __values(properties), properties_1_1 = properties_1.next();\n              _g.label = 2;\n\n            case 2:\n              if (!!properties_1_1.done) return [3, 5];\n              prop = properties_1_1.value;\n              value = input[prop.target];\n              if (!value) return [3, 4];\n              valueView = ArrayBuffer.isView(value) ? new Uint8Array(value.buffer, value.byteOffset, value.byteLength) : typeof value === \"string\" ? options.utf8Decoder(value) : new Uint8Array(value);\n              encoded = options.base64Encoder(valueView);\n              hash = new options.md5();\n              hash.update(valueView);\n              _a = [__assign({}, input)];\n              _f = {}, _f[prop.target] = encoded;\n              _b = prop.hash;\n              _d = (_c = options).base64Encoder;\n              return [4, hash.digest()];\n\n            case 3:\n              input = __assign.apply(void 0, _a.concat([(_f[_b] = _d.apply(_c, [_g.sent()]), _f)]));\n              _g.label = 4;\n\n            case 4:\n              properties_1_1 = properties_1.next();\n              return [3, 2];\n\n            case 5:\n              return [3, 8];\n\n            case 6:\n              e_1_1 = _g.sent();\n              e_1 = {\n                error: e_1_1\n              };\n              return [3, 8];\n\n            case 7:\n              try {\n                if (properties_1_1 && !properties_1_1.done && (_e = properties_1.return)) _e.call(properties_1);\n              } finally {\n                if (e_1) throw e_1.error;\n              }\n\n              return [7];\n\n            case 8:\n              return [2, next(__assign(__assign({}, args), {\n                input: input\n              }))];\n          }\n        });\n      });\n    };\n  };\n}\nexport var ssecMiddlewareOptions = {\n  name: \"ssecMiddleware\",\n  step: \"initialize\",\n  tags: [\"SSE\"],\n  override: true\n};\nexport var getSsecPlugin = function getSsecPlugin(config) {\n  return {\n    applyToStack: function applyToStack(clientStack) {\n      clientStack.add(ssecMiddleware(config), ssecMiddlewareOptions);\n    }\n  };\n};","map":{"version":3,"sources":["/home/chuka/joe/ChopChowSD/node_modules/@aws-sdk/middleware-ssec/dist-es/index.js"],"names":["__assign","__awaiter","__generator","__values","ssecMiddleware","options","_this","next","args","input","properties","properties_1","properties_1_1","prop","value","valueView","encoded","hash","_a","_b","_c","_d","e_1_1","e_1","_e","_f","_g","label","target","trys","push","done","ArrayBuffer","isView","Uint8Array","buffer","byteOffset","byteLength","utf8Decoder","base64Encoder","md5","update","digest","apply","concat","sent","error","return","call","ssecMiddlewareOptions","name","step","tags","override","getSsecPlugin","config","applyToStack","clientStack","add"],"mappings":"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","sourcesContent":["import { __assign, __awaiter, __generator, __values } from \"tslib\";\nexport function ssecMiddleware(options) {\n    var _this = this;\n    return function (next) {\n        return function (args) { return __awaiter(_this, void 0, void 0, function () {\n            var input, properties, properties_1, properties_1_1, prop, value, valueView, encoded, hash, _a, _b, _c, _d, e_1_1;\n            var e_1, _e, _f;\n            return __generator(this, function (_g) {\n                switch (_g.label) {\n                    case 0:\n                        input = __assign({}, args.input);\n                        properties = [\n                            {\n                                target: \"SSECustomerKey\",\n                                hash: \"SSECustomerKeyMD5\",\n                            },\n                            {\n                                target: \"CopySourceSSECustomerKey\",\n                                hash: \"CopySourceSSECustomerKeyMD5\",\n                            },\n                        ];\n                        _g.label = 1;\n                    case 1:\n                        _g.trys.push([1, 6, 7, 8]);\n                        properties_1 = __values(properties), properties_1_1 = properties_1.next();\n                        _g.label = 2;\n                    case 2:\n                        if (!!properties_1_1.done) return [3, 5];\n                        prop = properties_1_1.value;\n                        value = input[prop.target];\n                        if (!value) return [3, 4];\n                        valueView = ArrayBuffer.isView(value)\n                            ? new Uint8Array(value.buffer, value.byteOffset, value.byteLength)\n                            : typeof value === \"string\"\n                                ? options.utf8Decoder(value)\n                                : new Uint8Array(value);\n                        encoded = options.base64Encoder(valueView);\n                        hash = new options.md5();\n                        hash.update(valueView);\n                        _a = [__assign({}, input)];\n                        _f = {}, _f[prop.target] = encoded;\n                        _b = prop.hash;\n                        _d = (_c = options).base64Encoder;\n                        return [4, hash.digest()];\n                    case 3:\n                        input = __assign.apply(void 0, _a.concat([(_f[_b] = _d.apply(_c, [_g.sent()]), _f)]));\n                        _g.label = 4;\n                    case 4:\n                        properties_1_1 = properties_1.next();\n                        return [3, 2];\n                    case 5: return [3, 8];\n                    case 6:\n                        e_1_1 = _g.sent();\n                        e_1 = { error: e_1_1 };\n                        return [3, 8];\n                    case 7:\n                        try {\n                            if (properties_1_1 && !properties_1_1.done && (_e = properties_1.return)) _e.call(properties_1);\n                        }\n                        finally { if (e_1) throw e_1.error; }\n                        return [7];\n                    case 8: return [2, next(__assign(__assign({}, args), { input: input }))];\n                }\n            });\n        }); };\n    };\n}\nexport var ssecMiddlewareOptions = {\n    name: \"ssecMiddleware\",\n    step: \"initialize\",\n    tags: [\"SSE\"],\n    override: true,\n};\nexport var getSsecPlugin = function (config) { return ({\n    applyToStack: function (clientStack) {\n        clientStack.add(ssecMiddleware(config), ssecMiddlewareOptions);\n    },\n}); };\n"]},"metadata":{},"sourceType":"module"}