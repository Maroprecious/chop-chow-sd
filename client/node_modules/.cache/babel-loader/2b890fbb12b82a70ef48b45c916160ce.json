{"ast":null,"code":"export function blobReader(blob, onChunk, chunkSize) {\n  if (chunkSize === void 0) {\n    chunkSize = 1024 * 1024;\n  }\n\n  return new Promise(function (resolve, reject) {\n    var fileReader = new FileReader();\n    fileReader.addEventListener(\"error\", reject);\n    fileReader.addEventListener(\"abort\", reject);\n    var size = blob.size;\n    var totalBytesRead = 0;\n\n    function read() {\n      if (totalBytesRead >= size) {\n        resolve();\n        return;\n      }\n\n      fileReader.readAsArrayBuffer(blob.slice(totalBytesRead, Math.min(size, totalBytesRead + chunkSize)));\n    }\n\n    fileReader.addEventListener(\"load\", function (event) {\n      var result = event.target.result;\n      onChunk(new Uint8Array(result));\n      totalBytesRead += result.byteLength;\n      read();\n    });\n    read();\n  });\n}","map":{"version":3,"sources":["/home/chuka/joe/ChopChowSD/node_modules/@aws-sdk/chunked-blob-reader/dist-es/index.js"],"names":["blobReader","blob","onChunk","chunkSize","Promise","resolve","reject","fileReader","FileReader","addEventListener","size","totalBytesRead","read","readAsArrayBuffer","slice","Math","min","event","result","target","Uint8Array","byteLength"],"mappings":"AAAA,OAAO,SAASA,UAAT,CAAoBC,IAApB,EAA0BC,OAA1B,EAAmCC,SAAnC,EAA8C;AACjD,MAAIA,SAAS,KAAK,KAAK,CAAvB,EAA0B;AAAEA,IAAAA,SAAS,GAAG,OAAO,IAAnB;AAA0B;;AACtD,SAAO,IAAIC,OAAJ,CAAY,UAAUC,OAAV,EAAmBC,MAAnB,EAA2B;AAC1C,QAAIC,UAAU,GAAG,IAAIC,UAAJ,EAAjB;AACAD,IAAAA,UAAU,CAACE,gBAAX,CAA4B,OAA5B,EAAqCH,MAArC;AACAC,IAAAA,UAAU,CAACE,gBAAX,CAA4B,OAA5B,EAAqCH,MAArC;AACA,QAAII,IAAI,GAAGT,IAAI,CAACS,IAAhB;AACA,QAAIC,cAAc,GAAG,CAArB;;AACA,aAASC,IAAT,GAAgB;AACZ,UAAID,cAAc,IAAID,IAAtB,EAA4B;AACxBL,QAAAA,OAAO;AACP;AACH;;AACDE,MAAAA,UAAU,CAACM,iBAAX,CAA6BZ,IAAI,CAACa,KAAL,CAAWH,cAAX,EAA2BI,IAAI,CAACC,GAAL,CAASN,IAAT,EAAeC,cAAc,GAAGR,SAAhC,CAA3B,CAA7B;AACH;;AACDI,IAAAA,UAAU,CAACE,gBAAX,CAA4B,MAA5B,EAAoC,UAAUQ,KAAV,EAAiB;AACjD,UAAIC,MAAM,GAAGD,KAAK,CAACE,MAAN,CAAaD,MAA1B;AACAhB,MAAAA,OAAO,CAAC,IAAIkB,UAAJ,CAAeF,MAAf,CAAD,CAAP;AACAP,MAAAA,cAAc,IAAIO,MAAM,CAACG,UAAzB;AACAT,MAAAA,IAAI;AACP,KALD;AAMAA,IAAAA,IAAI;AACP,GApBM,CAAP;AAqBH","sourcesContent":["export function blobReader(blob, onChunk, chunkSize) {\n    if (chunkSize === void 0) { chunkSize = 1024 * 1024; }\n    return new Promise(function (resolve, reject) {\n        var fileReader = new FileReader();\n        fileReader.addEventListener(\"error\", reject);\n        fileReader.addEventListener(\"abort\", reject);\n        var size = blob.size;\n        var totalBytesRead = 0;\n        function read() {\n            if (totalBytesRead >= size) {\n                resolve();\n                return;\n            }\n            fileReader.readAsArrayBuffer(blob.slice(totalBytesRead, Math.min(size, totalBytesRead + chunkSize)));\n        }\n        fileReader.addEventListener(\"load\", function (event) {\n            var result = event.target.result;\n            onChunk(new Uint8Array(result));\n            totalBytesRead += result.byteLength;\n            read();\n        });\n        read();\n    });\n}\n"]},"metadata":{},"sourceType":"module"}