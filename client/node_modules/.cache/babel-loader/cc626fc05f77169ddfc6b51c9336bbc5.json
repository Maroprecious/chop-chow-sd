{"ast":null,"code":"var _jsxFileName = \"/home/chuka/joe/ChopChowSD/client/src/components/mealsPage/MealsPage.js\";\nimport React, { Component } from \"react\";\nimport MyModal from \"./Mymodal\";\nimport WithScrollbar from \"./product_slider/WithScrollbar\"; // import \"./MealsPage.scoped.scss\";\n\nimport { Row } from 'react-bootstrap';\nimport axios from '../../util/Api';\n\nclass MealsPage extends Component {\n  // Mongo\n  constructor(props) {\n    super(props);\n\n    this.onClickMealCard = (i, col_count) => {\n      if (i === this.state.selected_index) this.setState({\n        slider_flag: !this.state.slider_flag\n      });else this.setState({\n        slider_flag: true\n      });\n      this.setState({\n        selected_index: i\n      });\n      this.setState({\n        selectedCard_mealData: this.state.products[i]\n      });\n      this.setState({\n        modalIsOpen: true\n      });\n      this.setState({\n        firstPart_ind: (parseInt(i / col_count) + 1) * col_count\n      });\n    };\n\n    this.setMealSliderModal = () => {\n      this.setState({\n        mealSlider_Flag: true\n      });\n    };\n\n    this.removeMealSliderModal = () => {\n      this.setState({\n        mealSlider_Flag: false\n      });\n    };\n\n    this.onhandleLoadMore = () => {\n      let count = this.state.currentMealCount;\n      if (count >= this.state.products.length) this.setState({\n        currentMealCount: this.state.products.length\n      });else this.setState({\n        currentMealCount: count + 10\n      });\n    };\n\n    this.update = () => {\n      let col_count = 1;\n      if (window.innerWidth > 1200) col_count = 4;else if (window.innerWidth > 900 && window.innerWidth < 1200) col_count = 3;else if (window.innerWidth > 500 && window.innerWidth < 900) col_count = 2;\n      if (this.state.products === null && window.innerWidth > 500 && window.innerHeight > 500) col_count = 4; // if(this.state.products.length < 4 && window.innerWidth > 500 && window.innerHeight > 500) col_count = 4; //Math.min(count, this.props.products.length);\n\n      this.setState({\n        col_count: col_count\n      });\n    };\n\n    window.addEventListener(\"resize\", this.update);\n    this.state = {\n      products: [],\n      width: 0,\n      firstPart_ind: 12,\n      slider_flag: false,\n      selectedCard_mealData: null,\n      selected_index: 0,\n      selectedCardID: \"\",\n      mealSlider_Flag: false,\n      currentMealCount: 12,\n      mealList: null,\n      col_count: 1\n    };\n  } //////////////////////////////////////////////////////////////////////////////////////////////\n\n\n  componentDidMount() {\n    this.update();\n    console.log(\"Comes in meal pages component did mount\"); // var url = \"https://chopchowdev.herokuapp.com/api/get-meals\";\n\n    var url = \"/get-meals\"; // axios(url)\n    //   .then(res => res.text())\n    //   .then(body => {\n\n    axios.get(url).then(body => {\n      var productsList = body.data;\n\n      if (productsList && productsList.data.length !== 0) {\n        console.log(\"shows products does return\");\n        console.log(productsList.data.length);\n        let products = [];\n\n        for (var i = 0; i < productsList.data.length; i++) {\n          products.push(productsList.data[i]);\n        }\n\n        this.setState({\n          products: products\n        });\n      } else {\n        console.log(\"shows products do not return\");\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  } //////////////////////////////////////////////////////////////////////////////////////////////\n\n\n  //////////////////////////////////////////////////////////////////////////////////////////////\n  render() {\n    const selectedCard_mealData = this.state.selectedCard_mealData;\n    const items = [];\n    let count = Math.min(this.state.products.length, this.state.currentMealCount);\n\n    if (this.state.products.length > 0) {\n      // Meal Cards displayed before selected card\n      for (let i = 0; i < Math.min(count, this.state.firstPart_ind); i += this.state.col_count) {\n        const tmp_item = [];\n\n        for (let j = 0; j < this.state.col_count; j++) {\n          if (i + j >= Math.min(count, this.state.firstPart_ind)) break;\n          const value = this.state.products[i + j];\n          tmp_item.push(\n          /*#__PURE__*/\n          React.createElement(\"div\", {\n            key: i + j,\n            className: \"col-sm-\".concat(12 / this.state.col_count, \" mealContainer\"),\n            style: {\n              justifyContent: \"center\"\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 13\n            }\n          },\n          /*#__PURE__*/\n          React.createElement(\"div\", {\n            className: \"meal-card\",\n            onClick: () => this.onClickMealCard(i + j, this.state.col_count),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 13\n            }\n          },\n          /*#__PURE__*/\n          React.createElement(\"div\", {\n            style: containerStyle,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 15\n            }\n          },\n          /*#__PURE__*/\n          React.createElement(\"div\", {\n            style: {\n              textAlign: \"center\"\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 17\n            }\n          },\n          /*#__PURE__*/\n          React.createElement(\"img\", {\n            src: value.mealImage,\n            className: \"images\",\n            style: {\n              width: \"200px\",\n              height: \"200px\"\n            },\n            alt: \"/\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 19\n            }\n          })),\n          /*#__PURE__*/\n          React.createElement(\"div\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 17\n            }\n          },\n          /*#__PURE__*/\n          React.createElement(\"span\", {\n            style: {\n              color: \"orange\"\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 19\n            }\n          }, value.label), \" \",\n          /*#__PURE__*/\n          React.createElement(\"br\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 75\n            }\n          }),\n          /*#__PURE__*/\n          React.createElement(\"span\", {\n            style: {\n              color: \"grey\"\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 19\n            }\n          }, \"View Details | \", value.cookTime, \"  mins to prepare\"),\n          /*#__PURE__*/\n          React.createElement(\"span\", {\n            style: {\n              color: \"black\"\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 19\n            }\n          }))))));\n        }\n\n        items.push(\n        /*#__PURE__*/\n        React.createElement(Row, {\n          key: i,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 11\n          }\n        }, \" \", tmp_item));\n      } // Meal card for selected card ONLY including Selected Card ingredient images on display\n\n\n      if (selectedCard_mealData && this.state.slider_flag) {\n        items.push(\n        /*#__PURE__*/\n        React.createElement(Row, {\n          key: Math.min(count, this.state.firstPart_ind),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 11\n          }\n        },\n        /*#__PURE__*/\n        React.createElement(\"div\", {\n          className: \"col-sm-12\",\n          style: {\n            background: \"#ffffff\"\n          },\n          key: \"1000001\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 13\n          }\n        },\n        /*#__PURE__*/\n        React.createElement(\"div\", {\n          style: {\n            width: \"95%\",\n            margin: \"auto\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 15\n          }\n        },\n        /*#__PURE__*/\n        React.createElement(\"div\", {\n          className: \"detail-card-explain\",\n          id: selectedCard_mealData._id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 17\n          }\n        },\n        /*#__PURE__*/\n        React.createElement(\"div\", {\n          style: {\n            fontSize: \"18px\",\n            paddingTop: \"20px\",\n            paddingBottom: \"20px\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 21\n          }\n        }, selectedCard_mealData.intro)),\n        /*#__PURE__*/\n        React.createElement(\"div\", {\n          id: selectedCard_mealData._id + \"products\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 19\n          }\n        },\n        /*#__PURE__*/\n        React.createElement(WithScrollbar, {\n          products: selectedCard_mealData.product_slider,\n          col_count: this.state.col_count,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 21\n          }\n        })),\n        /*#__PURE__*/\n        React.createElement(MyModal, {\n          value: selectedCard_mealData,\n          mealPrep: selectedCard_mealData.instructions,\n          ingredientsList: selectedCard_mealData.newer_ingredient_format,\n          func_setMealFlag: this.setMealSliderModal,\n          func_removeMealFlag: this.removeMealSliderModal,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 19\n          }\n        })))));\n      } // Meal Cards displayed after selected card\n\n\n      for (let i = Math.min(count, this.state.firstPart_ind); i < count; i += this.state.col_count) {\n        const tmp_item = [];\n\n        for (let j = 0; j < this.state.col_count; j++) {\n          if (i + j >= count) break;\n          const value = this.state.products[i + j];\n          tmp_item.push(\n          /*#__PURE__*/\n          React.createElement(\"div\", {\n            key: i + j,\n            className: \"col-sm-\".concat(12 / this.state.col_count, \" mealContainer\"),\n            style: {\n              justifyContent: \"center\"\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 15\n            }\n          },\n          /*#__PURE__*/\n          React.createElement(\"div\", {\n            className: \"meal-card\",\n            onClick: () => this.onClickMealCard(i + j, this.state.col_count),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 17\n            }\n          },\n          /*#__PURE__*/\n          React.createElement(\"div\", {\n            style: containerStyle,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 19\n            }\n          },\n          /*#__PURE__*/\n          React.createElement(\"div\", {\n            style: {\n              textAlign: \"center\"\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 21\n            }\n          },\n          /*#__PURE__*/\n          React.createElement(\"img\", {\n            src: value.mealImage,\n            className: \"images\",\n            style: {\n              width: \"200px\",\n              height: \"200px\"\n            },\n            alt: \"/\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 23\n            }\n          })),\n          /*#__PURE__*/\n          React.createElement(\"div\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 21\n            }\n          },\n          /*#__PURE__*/\n          React.createElement(\"span\", {\n            style: {\n              color: \"orange\"\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 23\n            }\n          }, value.label), \" \",\n          /*#__PURE__*/\n          React.createElement(\"br\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 79\n            }\n          }),\n          /*#__PURE__*/\n          React.createElement(\"span\", {\n            style: {\n              color: \"grey\"\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 23\n            }\n          }, \"View Details | \", value.cookTime, \"  mins to prepare\"),\n          /*#__PURE__*/\n          React.createElement(\"span\", {\n            style: {\n              color: \"black\"\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 23\n            }\n          }))))));\n        }\n\n        items.push(\n        /*#__PURE__*/\n        React.createElement(Row, {\n          key: i + 1,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 11\n          }\n        }, tmp_item));\n      }\n    }\n\n    return (\n      /*#__PURE__*/\n      React.createElement(\"div\", {\n        className: \"meals-Page\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 7\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(\"div\", {\n        id: \"title\",\n        className: \"meal-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 9\n        }\n      }, \" \",\n      /*#__PURE__*/\n      React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 49\n        }\n      }, \"Meals\"), \" \"),\n      /*#__PURE__*/\n      React.createElement(\"div\", {\n        className: \"mealPage-container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 9\n        }\n      }, items),\n      /*#__PURE__*/\n      React.createElement(\"section\", {\n        className: \"loadmore-section\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 9\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(\"button\", {\n        className: \"btn-loadmore\",\n        onClick: () => this.onhandleLoadMore(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 11\n        }\n      }, \"Load More\")))\n    );\n  }\n\n}\n\nexport default MealsPage;\nconst containerStyle = {\n  display: \"inline-block\",\n  width: \"100%\",\n  height: \"100%\"\n};","map":{"version":3,"sources":["/home/chuka/joe/ChopChowSD/client/src/components/mealsPage/MealsPage.js"],"names":["React","Component","MyModal","WithScrollbar","Row","axios","MealsPage","constructor","props","onClickMealCard","i","col_count","state","selected_index","setState","slider_flag","selectedCard_mealData","products","modalIsOpen","firstPart_ind","parseInt","setMealSliderModal","mealSlider_Flag","removeMealSliderModal","onhandleLoadMore","count","currentMealCount","length","update","window","innerWidth","innerHeight","addEventListener","width","selectedCardID","mealList","componentDidMount","console","log","url","get","then","body","productsList","data","push","catch","err","render","items","Math","min","tmp_item","j","value","justifyContent","containerStyle","textAlign","mealImage","height","color","label","cookTime","background","margin","_id","fontSize","paddingTop","paddingBottom","intro","product_slider","instructions","newer_ingredient_format","display"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport MyModal from \"./Mymodal\";\nimport WithScrollbar from \"./product_slider/WithScrollbar\";\n// import \"./MealsPage.scoped.scss\";\nimport { Row } from 'react-bootstrap'\nimport axios from '../../util/Api';\n\nclass MealsPage extends Component {\n  // Mongo\n  entries;\n\n  constructor(props) {\n    super(props);\n\n    window.addEventListener(\"resize\", this.update);\n    this.state = {\n      products: [],\n      width: 0,\n      firstPart_ind: 12,\n      slider_flag: false,\n      selectedCard_mealData: null,\n      selected_index: 0,\n      selectedCardID: \"\",\n\n      mealSlider_Flag: false,\n      currentMealCount: 12,\n\n      mealList:null,\n      col_count:1\n    };\n  }\n\n  //////////////////////////////////////////////////////////////////////////////////////////////\n  componentDidMount() {\n    this.update();\n\n    console.log(\"Comes in meal pages component did mount\");\n    // var url = \"https://chopchowdev.herokuapp.com/api/get-meals\";\n    var url = \"/get-meals\"\n\n    \n    // axios(url)\n    //   .then(res => res.text())\n    //   .then(body => {\n      axios.get(url).then((body) => {\n        var productsList = body.data;\n        if(productsList && productsList.data.length !== 0){\n          console.log(\"shows products does return\");\n          console.log(productsList.data.length);\n          let products = [];\n          for (var i = 0; i < productsList.data.length; i++) {\n            products.push(productsList.data[i]);\n          }\n          this.setState({ products: products})\n        }\n        else{\n          console.log(\"shows products do not return\");\n        }\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  }\n\n  //////////////////////////////////////////////////////////////////////////////////////////////\n  onClickMealCard = ( i, col_count )=>{\n    if(i === this.state.selected_index) this.setState({slider_flag: !this.state.slider_flag})\n    else this.setState({slider_flag: true})\n\n    this.setState({ selected_index: i});\n    this.setState({ selectedCard_mealData: this.state.products[i]});\n    this.setState({ modalIsOpen: true });  \n    this.setState({ firstPart_ind: (parseInt((i )/ col_count)+1)*col_count});   \n  }\n\n  //////////////////////////////////////////////////////////////////////////////////////////////\n  setMealSliderModal=()=>{\n    this.setState({mealSlider_Flag: true});\n  }\n\n  //////////////////////////////////////////////////////////////////////////////////////////////\n  removeMealSliderModal=()=>{\n    this.setState({mealSlider_Flag: false});\n  }\n\n  //////////////////////////////////////////////////////////////////////////////////////////////\n  onhandleLoadMore = () => {\n    let count = this.state.currentMealCount;\n    if(count>= this.state.products.length)   this.setState({currentMealCount: this.state.products.length});\n    else this.setState({currentMealCount: count + 10 });\n  }\n\n  //////////////////////////////////////////////////////////////////////////////////////////////\n  update = () => {\n    let col_count = 1;\n    if (window.innerWidth > 1200) col_count = 4;\n    else if(window.innerWidth > 900 && window.innerWidth < 1200) col_count = 3;\n    else if(window.innerWidth > 500 && window.innerWidth < 900) col_count = 2;\n\n    if(this.state.products === null && window.innerWidth > 500 && window.innerHeight > 500) col_count = 4;\n    // if(this.state.products.length < 4 && window.innerWidth > 500 && window.innerHeight > 500) col_count = 4; //Math.min(count, this.props.products.length);\n\n    this.setState({col_count: col_count});\n  };\n\n\n  //////////////////////////////////////////////////////////////////////////////////////////////\n  render() {\n    const {selectedCard_mealData} = this.state;\n    const items = [];\n    let count = Math.min(this.state.products.length, this.state.currentMealCount);\n\n    if(this.state.products.length>0){\n      // Meal Cards displayed before selected card\n      for (let i = 0; i< Math.min(count, this.state.firstPart_ind); i+= this.state.col_count) {\n        const tmp_item = []\n        for(let j = 0; j<this.state.col_count; j++)\n        {\n          if(i+j>= Math.min(count, this.state.firstPart_ind)) break;\n          const value = this.state.products[i+j];  \n          tmp_item.push(\n            <div key={i+j} className={`col-sm-${12/ this.state.col_count} mealContainer`} style={{ justifyContent:\"center\"}}>\n            <div className=\"meal-card\" onClick={()=>this.onClickMealCard(i+j, this.state.col_count)}>\n              <div style={containerStyle}>\n                <div style={{ textAlign:\"center\" }}>\n                  <img src={value.mealImage} className=\"images\" style={{ width: \"200px\", height: \"200px\" }} alt=\"/\"></img>\n                </div>\n                <div>\n                  <span style={{ color: \"orange\" }} >{value.label}</span> <br></br>\n                  <span style={{ color: \"grey\" }}>View Details | {value.cookTime}  mins to prepare</span>\n                  <span style={{ color: \"black\" }}></span>\n                </div>              \n              </div>\n            </div>\n          </div>\n          )\n        }\n\n        items.push(\n          <Row key={i}> {tmp_item}</Row>\n        )\n      }\n\n      // Meal card for selected card ONLY including Selected Card ingredient images on display\n      if(selectedCard_mealData && this.state.slider_flag){\n        items.push(\n          <Row key={Math.min(count, this.state.firstPart_ind)}>\n            <div className=\"col-sm-12\" style={{background:\"#ffffff\"}} key=\"1000001\">\n              <div style={{width: \"95%\", margin:\"auto\"}}>\n                <div className =\"detail-card-explain\" id={selectedCard_mealData._id} >\n                    <div style={{fontSize:\"18px\", paddingTop:\"20px\", paddingBottom:\"20px\"}}>{selectedCard_mealData.intro}\n                    </div>\n                  </div>\n\n                  <div id={selectedCard_mealData._id + \"products\"}>                  \n                    <WithScrollbar products={selectedCard_mealData.product_slider} col_count={this.state.col_count}/>\n                  </div>\n\n                  <MyModal \n                    value={selectedCard_mealData}\n                    mealPrep={selectedCard_mealData.instructions}\n                    ingredientsList={selectedCard_mealData.newer_ingredient_format }\n                    func_setMealFlag = {this.setMealSliderModal}\n                    func_removeMealFlag = {this.removeMealSliderModal}\n                  />\n                </div>\n            </div>\n          </Row>\n        )\n      }\n     \n      // Meal Cards displayed after selected card\n      for (let i = Math.min(count, this.state.firstPart_ind); i< count; i+=this.state.col_count) {\n        const tmp_item = []\n        for(let j = 0; j<this.state.col_count; j++)\n        {\n          if(i+j>= count) break;\n            const value = this.state.products[i+j];   \n            tmp_item.push(\n              <div key={i+j} className={`col-sm-${12/ this.state.col_count} mealContainer`} style={{ justifyContent:\"center\"}}>\n                <div className=\"meal-card\" onClick={()=>this.onClickMealCard(i+j, this.state.col_count)}>\n                  <div style={containerStyle}>\n                    <div style={{ textAlign:\"center\" }}>\n                      <img\n                        src={value.mealImage}\n                        className=\"images\"\n                        style={{ width: \"200px\", height: \"200px\" }}\n                        alt=\"/\"\n                      ></img>\n                    </div>\n                    <div>\n                      <span style={{ color: \"orange\" }} >{value.label}</span> <br></br>\n                      <span style={{ color: \"grey\" }}>View Details | {value.cookTime}  mins to prepare</span>\n                      <span style={{ color: \"black\" }}></span>\n                    </div>              \n                  </div>\n\n                </div>\n              </div>\n            )\n        }\n       \n        items.push(\n          <Row key={i+1}>{tmp_item}</Row>\n        );\n      }\n    }\n    \n    return (\n      <div className=\"meals-Page\">\n        <div id=\"title\" className=\"meal-title\"> <b>Meals</b> </div>\n        <div className=\"mealPage-container\">\n            {items}        \n        </div>\n        <section className=\"loadmore-section\">\n          <button className=\"btn-loadmore\" onClick={()=>this.onhandleLoadMore()}>Load More</button>\n        </section>\n      </div>\n    )\n  };\n}\n\nexport default MealsPage;\n\nconst containerStyle = {\n  display: \"inline-block\",\n  width: \"100%\",\n  height: \"100%\"\n};\n"]},"metadata":{},"sourceType":"module"}