{"ast":null,"code":"import { __assign, __awaiter, __generator } from \"tslib\";\nexport function locationConstraintMiddleware(options) {\n  var _this = this;\n\n  return function (next) {\n    return function (args) {\n      return __awaiter(_this, void 0, void 0, function () {\n        var CreateBucketConfiguration, region;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              CreateBucketConfiguration = args.input.CreateBucketConfiguration;\n              return [4, options.region()];\n\n            case 1:\n              region = _a.sent();\n\n              if (!CreateBucketConfiguration || !CreateBucketConfiguration.LocationConstraint) {\n                args = __assign(__assign({}, args), {\n                  input: __assign(__assign({}, args.input), {\n                    CreateBucketConfiguration: region === \"us-east-1\" ? undefined : {\n                      LocationConstraint: region\n                    }\n                  })\n                });\n              }\n\n              return [2, next(args)];\n          }\n        });\n      });\n    };\n  };\n}\nexport var locationConstraintMiddlewareOptions = {\n  step: \"initialize\",\n  tags: [\"LOCATION_CONSTRAINT\", \"CREATE_BUCKET_CONFIGURATION\"],\n  name: \"locationConstraintMiddleware\",\n  override: true\n};\nexport var getLocationConstraintPlugin = function getLocationConstraintPlugin(config) {\n  return {\n    applyToStack: function applyToStack(clientStack) {\n      clientStack.add(locationConstraintMiddleware(config), locationConstraintMiddlewareOptions);\n    }\n  };\n};","map":{"version":3,"sources":["/home/chuka/joe/ChopChowSD/node_modules/@aws-sdk/middleware-location-constraint/dist-es/index.js"],"names":["__assign","__awaiter","__generator","locationConstraintMiddleware","options","_this","next","args","CreateBucketConfiguration","region","_a","label","input","sent","LocationConstraint","undefined","locationConstraintMiddlewareOptions","step","tags","name","override","getLocationConstraintPlugin","config","applyToStack","clientStack","add"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,WAA9B,QAAiD,OAAjD;AACA,OAAO,SAASC,4BAAT,CAAsCC,OAAtC,EAA+C;AAClD,MAAIC,KAAK,GAAG,IAAZ;;AACA,SAAO,UAAUC,IAAV,EAAgB;AACnB,WAAO,UAAUC,IAAV,EAAgB;AAAE,aAAON,SAAS,CAACI,KAAD,EAAQ,KAAK,CAAb,EAAgB,KAAK,CAArB,EAAwB,YAAY;AACzE,YAAIG,yBAAJ,EAA+BC,MAA/B;AACA,eAAOP,WAAW,CAAC,IAAD,EAAO,UAAUQ,EAAV,EAAc;AACnC,kBAAQA,EAAE,CAACC,KAAX;AACI,iBAAK,CAAL;AACIH,cAAAA,yBAAyB,GAAGD,IAAI,CAACK,KAAL,CAAWJ,yBAAvC;AACA,qBAAO,CAAC,CAAD,EAAIJ,OAAO,CAACK,MAAR,EAAJ,CAAP;;AACJ,iBAAK,CAAL;AACIA,cAAAA,MAAM,GAAGC,EAAE,CAACG,IAAH,EAAT;;AACA,kBAAI,CAACL,yBAAD,IAA8B,CAACA,yBAAyB,CAACM,kBAA7D,EAAiF;AAC7EP,gBAAAA,IAAI,GAAGP,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAKO,IAAL,CAAT,EAAqB;AAAEK,kBAAAA,KAAK,EAAEZ,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAKO,IAAI,CAACK,KAAV,CAAT,EAA2B;AAAEJ,oBAAAA,yBAAyB,EAAEC,MAAM,KAAK,WAAX,GAAyBM,SAAzB,GAAqC;AAAED,sBAAAA,kBAAkB,EAAEL;AAAtB;AAAlE,mBAA3B;AAAjB,iBAArB,CAAf;AACH;;AACD,qBAAO,CAAC,CAAD,EAAIH,IAAI,CAACC,IAAD,CAAR,CAAP;AATR;AAWH,SAZiB,CAAlB;AAaH,OAfwC,CAAhB;AAepB,KAfL;AAgBH,GAjBD;AAkBH;AACD,OAAO,IAAIS,mCAAmC,GAAG;AAC7CC,EAAAA,IAAI,EAAE,YADuC;AAE7CC,EAAAA,IAAI,EAAE,CAAC,qBAAD,EAAwB,6BAAxB,CAFuC;AAG7CC,EAAAA,IAAI,EAAE,8BAHuC;AAI7CC,EAAAA,QAAQ,EAAE;AAJmC,CAA1C;AAMP,OAAO,IAAIC,2BAA2B,GAAG,SAA9BA,2BAA8B,CAAUC,MAAV,EAAkB;AAAE,SAAQ;AACjEC,IAAAA,YAAY,EAAE,sBAAUC,WAAV,EAAuB;AACjCA,MAAAA,WAAW,CAACC,GAAZ,CAAgBtB,4BAA4B,CAACmB,MAAD,CAA5C,EAAsDN,mCAAtD;AACH;AAHgE,GAAR;AAIxD,CAJE","sourcesContent":["import { __assign, __awaiter, __generator } from \"tslib\";\nexport function locationConstraintMiddleware(options) {\n    var _this = this;\n    return function (next) {\n        return function (args) { return __awaiter(_this, void 0, void 0, function () {\n            var CreateBucketConfiguration, region;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        CreateBucketConfiguration = args.input.CreateBucketConfiguration;\n                        return [4, options.region()];\n                    case 1:\n                        region = _a.sent();\n                        if (!CreateBucketConfiguration || !CreateBucketConfiguration.LocationConstraint) {\n                            args = __assign(__assign({}, args), { input: __assign(__assign({}, args.input), { CreateBucketConfiguration: region === \"us-east-1\" ? undefined : { LocationConstraint: region } }) });\n                        }\n                        return [2, next(args)];\n                }\n            });\n        }); };\n    };\n}\nexport var locationConstraintMiddlewareOptions = {\n    step: \"initialize\",\n    tags: [\"LOCATION_CONSTRAINT\", \"CREATE_BUCKET_CONFIGURATION\"],\n    name: \"locationConstraintMiddleware\",\n    override: true,\n};\nexport var getLocationConstraintPlugin = function (config) { return ({\n    applyToStack: function (clientStack) {\n        clientStack.add(locationConstraintMiddleware(config), locationConstraintMiddlewareOptions);\n    },\n}); };\n"]},"metadata":{},"sourceType":"module"}