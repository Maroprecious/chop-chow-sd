{"ast":null,"code":"import { __read } from \"tslib\";\nvar DOMAIN_PATTERN = /^[a-z0-9][a-z0-9\\.\\-]{1,61}[a-z0-9]$/;\nvar IP_ADDRESS_PATTERN = /(\\d+\\.){3}\\d+/;\nvar DOTS_PATTERN = /\\.\\./;\nexport var DOT_PATTERN = /\\./;\nexport var S3_HOSTNAME_PATTERN = /^(.+\\.)?s3(-fips)?(\\.dualstack)?[.-]([a-z0-9-]+)\\./;\nvar S3_US_EAST_1_ALTNAME_PATTERN = /^s3(-external-1)?\\.amazonaws\\.com$/;\nvar AWS_PARTITION_SUFFIX = \"amazonaws.com\";\nexport var isBucketNameOptions = function isBucketNameOptions(options) {\n  return typeof options.bucketName === \"string\";\n};\nexport var isDnsCompatibleBucketName = function isDnsCompatibleBucketName(bucketName) {\n  return DOMAIN_PATTERN.test(bucketName) && !IP_ADDRESS_PATTERN.test(bucketName) && !DOTS_PATTERN.test(bucketName);\n};\n\nvar getRegionalSuffix = function getRegionalSuffix(hostname) {\n  var parts = hostname.match(S3_HOSTNAME_PATTERN);\n  return [parts[4], hostname.replace(new RegExp(\"^\".concat(parts[0])), \"\")];\n};\n\nexport var getSuffix = function getSuffix(hostname) {\n  return S3_US_EAST_1_ALTNAME_PATTERN.test(hostname) ? [\"us-east-1\", AWS_PARTITION_SUFFIX] : getRegionalSuffix(hostname);\n};\nexport var getSuffixForArnEndpoint = function getSuffixForArnEndpoint(hostname) {\n  return S3_US_EAST_1_ALTNAME_PATTERN.test(hostname) ? [hostname.replace(\".\".concat(AWS_PARTITION_SUFFIX), \"\"), AWS_PARTITION_SUFFIX] : getRegionalSuffix(hostname);\n};\nexport var validateArnEndpointOptions = function validateArnEndpointOptions(options) {\n  if (options.pathStyleEndpoint) {\n    throw new Error(\"Path-style S3 endpoint is not supported when bucket is an ARN\");\n  }\n\n  if (options.accelerateEndpoint) {\n    throw new Error(\"Accelerate endpoint is not supported when bucket is an ARN\");\n  }\n\n  if (!options.tlsCompatible) {\n    throw new Error(\"HTTPS is required when bucket is an ARN\");\n  }\n};\nexport var validateService = function validateService(service) {\n  if (service !== \"s3\" && service !== \"s3-outposts\" && service !== \"s3-object-lambda\") {\n    throw new Error(\"Expect 's3' or 's3-outposts' or 's3-object-lambda' in ARN service component\");\n  }\n};\nexport var validateS3Service = function validateS3Service(service) {\n  if (service !== \"s3\") {\n    throw new Error(\"Expect 's3' in Accesspoint ARN service component\");\n  }\n};\nexport var validateOutpostService = function validateOutpostService(service) {\n  if (service !== \"s3-outposts\") {\n    throw new Error(\"Expect 's3-posts' in Outpost ARN service component\");\n  }\n};\nexport var validatePartition = function validatePartition(partition, options) {\n  if (partition !== options.clientPartition) {\n    throw new Error(\"Partition in ARN is incompatible, got \\\"\".concat(partition, \"\\\" but expected \\\"\").concat(options.clientPartition, \"\\\"\"));\n  }\n};\nexport var validateRegion = function validateRegion(region, options) {\n  if (region === \"\") {\n    throw new Error(\"ARN region is empty\");\n  }\n\n  if (options.useFipsEndpoint) {\n    if (!options.allowFipsRegion) {\n      throw new Error(\"FIPS region is not supported\");\n    } else if (!isEqualRegions(region, options.clientRegion)) {\n      throw new Error(\"Client FIPS region \".concat(options.clientRegion, \" doesn't match region \").concat(region, \" in ARN\"));\n    }\n  }\n\n  if (!options.useArnRegion && !isEqualRegions(region, options.clientRegion || \"\") && !isEqualRegions(region, options.clientSigningRegion || \"\")) {\n    throw new Error(\"Region in ARN is incompatible, got \".concat(region, \" but expected \").concat(options.clientRegion));\n  }\n};\nexport var validateRegionalClient = function validateRegionalClient(region) {\n  if ([\"s3-external-1\", \"aws-global\"].includes(region)) {\n    throw new Error(\"Client region \".concat(region, \" is not regional\"));\n  }\n};\n\nvar isEqualRegions = function isEqualRegions(regionA, regionB) {\n  return regionA === regionB;\n};\n\nexport var validateAccountId = function validateAccountId(accountId) {\n  if (!/[0-9]{12}/.exec(accountId)) {\n    throw new Error(\"Access point ARN accountID does not match regex '[0-9]{12}'\");\n  }\n};\nexport var validateDNSHostLabel = function validateDNSHostLabel(label, options) {\n  if (options === void 0) {\n    options = {\n      tlsCompatible: true\n    };\n  }\n\n  if (label.length >= 64 || !/^[a-z0-9][a-z0-9.-]*[a-z0-9]$/.test(label) || /(\\d+\\.){3}\\d+/.test(label) || /[.-]{2}/.test(label) || (options === null || options === void 0 ? void 0 : options.tlsCompatible) && DOT_PATTERN.test(label)) {\n    throw new Error(\"Invalid DNS label \".concat(label));\n  }\n};\nexport var validateCustomEndpoint = function validateCustomEndpoint(options) {\n  if (options.isCustomEndpoint) {\n    if (options.dualstackEndpoint) throw new Error(\"Dualstack endpoint is not supported with custom endpoint\");\n    if (options.accelerateEndpoint) throw new Error(\"Accelerate endpoint is not supported with custom endpoint\");\n  }\n};\nexport var getArnResources = function getArnResources(resource) {\n  var delimiter = resource.includes(\":\") ? \":\" : \"/\";\n\n  var _a = __read(resource.split(delimiter)),\n      resourceType = _a[0],\n      rest = _a.slice(1);\n\n  if (resourceType === \"accesspoint\") {\n    if (rest.length !== 1 || rest[0] === \"\") {\n      throw new Error(\"Access Point ARN should have one resource accesspoint\".concat(delimiter, \"{accesspointname}\"));\n    }\n\n    return {\n      accesspointName: rest[0]\n    };\n  } else if (resourceType === \"outpost\") {\n    if (!rest[0] || rest[1] !== \"accesspoint\" || !rest[2] || rest.length !== 3) {\n      throw new Error(\"Outpost ARN should have resource outpost\".concat(delimiter, \"{outpostId}\").concat(delimiter, \"accesspoint\").concat(delimiter, \"{accesspointName}\"));\n    }\n\n    var _b = __read(rest, 3),\n        outpostId = _b[0],\n        _1 = _b[1],\n        accesspointName = _b[2];\n\n    return {\n      outpostId: outpostId,\n      accesspointName: accesspointName\n    };\n  } else {\n    throw new Error(\"ARN resource should begin with 'accesspoint\".concat(delimiter, \"' or 'outpost\").concat(delimiter, \"'\"));\n  }\n};\nexport var validateNoDualstack = function validateNoDualstack(dualstackEndpoint) {\n  if (dualstackEndpoint) throw new Error(\"Dualstack endpoint is not supported with Outpost or Multi-region Access Point ARN.\");\n};\nexport var validateNoFIPS = function validateNoFIPS(useFipsEndpoint) {\n  if (useFipsEndpoint) throw new Error(\"FIPS region is not supported with Outpost.\");\n};\nexport var validateMrapAlias = function validateMrapAlias(name) {\n  try {\n    name.split(\".\").forEach(function (label) {\n      validateDNSHostLabel(label);\n    });\n  } catch (e) {\n    throw new Error(\"\\\"\".concat(name, \"\\\" is not a DNS compatible name.\"));\n  }\n};","map":{"version":3,"sources":["/home/chuka/joe/ChopChowSD/node_modules/@aws-sdk/middleware-bucket-endpoint/dist-es/bucketHostnameUtils.js"],"names":["__read","DOMAIN_PATTERN","IP_ADDRESS_PATTERN","DOTS_PATTERN","DOT_PATTERN","S3_HOSTNAME_PATTERN","S3_US_EAST_1_ALTNAME_PATTERN","AWS_PARTITION_SUFFIX","isBucketNameOptions","options","bucketName","isDnsCompatibleBucketName","test","getRegionalSuffix","hostname","parts","match","replace","RegExp","concat","getSuffix","getSuffixForArnEndpoint","validateArnEndpointOptions","pathStyleEndpoint","Error","accelerateEndpoint","tlsCompatible","validateService","service","validateS3Service","validateOutpostService","validatePartition","partition","clientPartition","validateRegion","region","useFipsEndpoint","allowFipsRegion","isEqualRegions","clientRegion","useArnRegion","clientSigningRegion","validateRegionalClient","includes","regionA","regionB","validateAccountId","accountId","exec","validateDNSHostLabel","label","length","validateCustomEndpoint","isCustomEndpoint","dualstackEndpoint","getArnResources","resource","delimiter","_a","split","resourceType","rest","slice","accesspointName","_b","outpostId","_1","validateNoDualstack","validateNoFIPS","validateMrapAlias","name","forEach","e"],"mappings":"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","sourcesContent":["import { __read } from \"tslib\";\nvar DOMAIN_PATTERN = /^[a-z0-9][a-z0-9\\.\\-]{1,61}[a-z0-9]$/;\nvar IP_ADDRESS_PATTERN = /(\\d+\\.){3}\\d+/;\nvar DOTS_PATTERN = /\\.\\./;\nexport var DOT_PATTERN = /\\./;\nexport var S3_HOSTNAME_PATTERN = /^(.+\\.)?s3(-fips)?(\\.dualstack)?[.-]([a-z0-9-]+)\\./;\nvar S3_US_EAST_1_ALTNAME_PATTERN = /^s3(-external-1)?\\.amazonaws\\.com$/;\nvar AWS_PARTITION_SUFFIX = \"amazonaws.com\";\nexport var isBucketNameOptions = function (options) { return typeof options.bucketName === \"string\"; };\nexport var isDnsCompatibleBucketName = function (bucketName) {\n    return DOMAIN_PATTERN.test(bucketName) && !IP_ADDRESS_PATTERN.test(bucketName) && !DOTS_PATTERN.test(bucketName);\n};\nvar getRegionalSuffix = function (hostname) {\n    var parts = hostname.match(S3_HOSTNAME_PATTERN);\n    return [parts[4], hostname.replace(new RegExp(\"^\".concat(parts[0])), \"\")];\n};\nexport var getSuffix = function (hostname) {\n    return S3_US_EAST_1_ALTNAME_PATTERN.test(hostname) ? [\"us-east-1\", AWS_PARTITION_SUFFIX] : getRegionalSuffix(hostname);\n};\nexport var getSuffixForArnEndpoint = function (hostname) {\n    return S3_US_EAST_1_ALTNAME_PATTERN.test(hostname)\n        ? [hostname.replace(\".\".concat(AWS_PARTITION_SUFFIX), \"\"), AWS_PARTITION_SUFFIX]\n        : getRegionalSuffix(hostname);\n};\nexport var validateArnEndpointOptions = function (options) {\n    if (options.pathStyleEndpoint) {\n        throw new Error(\"Path-style S3 endpoint is not supported when bucket is an ARN\");\n    }\n    if (options.accelerateEndpoint) {\n        throw new Error(\"Accelerate endpoint is not supported when bucket is an ARN\");\n    }\n    if (!options.tlsCompatible) {\n        throw new Error(\"HTTPS is required when bucket is an ARN\");\n    }\n};\nexport var validateService = function (service) {\n    if (service !== \"s3\" && service !== \"s3-outposts\" && service !== \"s3-object-lambda\") {\n        throw new Error(\"Expect 's3' or 's3-outposts' or 's3-object-lambda' in ARN service component\");\n    }\n};\nexport var validateS3Service = function (service) {\n    if (service !== \"s3\") {\n        throw new Error(\"Expect 's3' in Accesspoint ARN service component\");\n    }\n};\nexport var validateOutpostService = function (service) {\n    if (service !== \"s3-outposts\") {\n        throw new Error(\"Expect 's3-posts' in Outpost ARN service component\");\n    }\n};\nexport var validatePartition = function (partition, options) {\n    if (partition !== options.clientPartition) {\n        throw new Error(\"Partition in ARN is incompatible, got \\\"\".concat(partition, \"\\\" but expected \\\"\").concat(options.clientPartition, \"\\\"\"));\n    }\n};\nexport var validateRegion = function (region, options) {\n    if (region === \"\") {\n        throw new Error(\"ARN region is empty\");\n    }\n    if (options.useFipsEndpoint) {\n        if (!options.allowFipsRegion) {\n            throw new Error(\"FIPS region is not supported\");\n        }\n        else if (!isEqualRegions(region, options.clientRegion)) {\n            throw new Error(\"Client FIPS region \".concat(options.clientRegion, \" doesn't match region \").concat(region, \" in ARN\"));\n        }\n    }\n    if (!options.useArnRegion &&\n        !isEqualRegions(region, options.clientRegion || \"\") &&\n        !isEqualRegions(region, options.clientSigningRegion || \"\")) {\n        throw new Error(\"Region in ARN is incompatible, got \".concat(region, \" but expected \").concat(options.clientRegion));\n    }\n};\nexport var validateRegionalClient = function (region) {\n    if ([\"s3-external-1\", \"aws-global\"].includes(region)) {\n        throw new Error(\"Client region \".concat(region, \" is not regional\"));\n    }\n};\nvar isEqualRegions = function (regionA, regionB) { return regionA === regionB; };\nexport var validateAccountId = function (accountId) {\n    if (!/[0-9]{12}/.exec(accountId)) {\n        throw new Error(\"Access point ARN accountID does not match regex '[0-9]{12}'\");\n    }\n};\nexport var validateDNSHostLabel = function (label, options) {\n    if (options === void 0) { options = { tlsCompatible: true }; }\n    if (label.length >= 64 ||\n        !/^[a-z0-9][a-z0-9.-]*[a-z0-9]$/.test(label) ||\n        /(\\d+\\.){3}\\d+/.test(label) ||\n        /[.-]{2}/.test(label) ||\n        ((options === null || options === void 0 ? void 0 : options.tlsCompatible) && DOT_PATTERN.test(label))) {\n        throw new Error(\"Invalid DNS label \".concat(label));\n    }\n};\nexport var validateCustomEndpoint = function (options) {\n    if (options.isCustomEndpoint) {\n        if (options.dualstackEndpoint)\n            throw new Error(\"Dualstack endpoint is not supported with custom endpoint\");\n        if (options.accelerateEndpoint)\n            throw new Error(\"Accelerate endpoint is not supported with custom endpoint\");\n    }\n};\nexport var getArnResources = function (resource) {\n    var delimiter = resource.includes(\":\") ? \":\" : \"/\";\n    var _a = __read(resource.split(delimiter)), resourceType = _a[0], rest = _a.slice(1);\n    if (resourceType === \"accesspoint\") {\n        if (rest.length !== 1 || rest[0] === \"\") {\n            throw new Error(\"Access Point ARN should have one resource accesspoint\".concat(delimiter, \"{accesspointname}\"));\n        }\n        return { accesspointName: rest[0] };\n    }\n    else if (resourceType === \"outpost\") {\n        if (!rest[0] || rest[1] !== \"accesspoint\" || !rest[2] || rest.length !== 3) {\n            throw new Error(\"Outpost ARN should have resource outpost\".concat(delimiter, \"{outpostId}\").concat(delimiter, \"accesspoint\").concat(delimiter, \"{accesspointName}\"));\n        }\n        var _b = __read(rest, 3), outpostId = _b[0], _1 = _b[1], accesspointName = _b[2];\n        return { outpostId: outpostId, accesspointName: accesspointName };\n    }\n    else {\n        throw new Error(\"ARN resource should begin with 'accesspoint\".concat(delimiter, \"' or 'outpost\").concat(delimiter, \"'\"));\n    }\n};\nexport var validateNoDualstack = function (dualstackEndpoint) {\n    if (dualstackEndpoint)\n        throw new Error(\"Dualstack endpoint is not supported with Outpost or Multi-region Access Point ARN.\");\n};\nexport var validateNoFIPS = function (useFipsEndpoint) {\n    if (useFipsEndpoint)\n        throw new Error(\"FIPS region is not supported with Outpost.\");\n};\nexport var validateMrapAlias = function (name) {\n    try {\n        name.split(\".\").forEach(function (label) {\n            validateDNSHostLabel(label);\n        });\n    }\n    catch (e) {\n        throw new Error(\"\\\"\".concat(name, \"\\\" is not a DNS compatible name.\"));\n    }\n};\n"]},"metadata":{},"sourceType":"module"}