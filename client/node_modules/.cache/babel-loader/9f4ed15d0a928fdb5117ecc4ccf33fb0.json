{"ast":null,"code":"import _regeneratorRuntime from \"/home/chuka/joe/ChopChowSD/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/chuka/joe/ChopChowSD/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/home/chuka/joe/ChopChowSD/client/src/components/SuggestProduct.js\";\nimport React, { Component } from \"react\";\nimport TextField from \"@material-ui/core/TextField\"; // import Chip from \"@material-ui/core/Chip\";\n\nimport Autocomplete from \"@material-ui/lab/Autocomplete\"; // createFilterOptions,\n// import axios from 'axios';\n\nimport axios from '../util/Api';\nimport { Row, Col } from \"react-bootstrap\";\nimport Button from '@material-ui/core/Button';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport { green } from '@material-ui/core/colors';\nimport { Dialog, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core';\n\nclass SuggestProduct extends Component {\n  constructor(props) {\n    var _this;\n\n    super(props);\n    _this = this;\n    this.products = [];\n    this.productsImg_path = [];\n    this.categories = [];\n    this.measurements = [\"mL\", \"oz\", \"L\", \"cup(s)\", \"Tbsp\", \"tsp\", \"pt\", \"lb\", \"g\", \"kg\", \"lb\"];\n\n    this.handleClose = () => {\n      this.setState({\n        open: false\n      });\n    };\n\n    this.onTextFieldChange = e => {\n      this.setState({\n        [e.target.id]: e.target.value\n      });\n    };\n\n    this.onTextFieldClick = event => {\n      if (event.target.files[0] === undefined) return;\n      this.setState({\n        imgSrc: event.target.files[0]\n      });\n      this.setState({\n        loading_imgSrc: URL.createObjectURL(event.target.files[0])\n      });\n      this.setState({\n        img_change_flag: true\n      });\n    };\n\n    this.onhandleProductImg = event => {\n      if (event.target.files[0] === undefined) return;\n      this.setState({\n        productImgSrc: event.target.files[0]\n      });\n\n      if (event.target.files[0] !== null) {\n        this.setState({\n          productImg_path: URL.createObjectURL(event.target.files[0])\n        });\n      }\n    };\n\n    this.onhandleInstructionImg = event => {\n      if (event.target.files[0] === undefined) return;\n      this.setState({\n        instructionImgData: event.target.files[0]\n      });\n\n      if (event.target.files[0] !== null) {\n        this.setState({\n          instructionImgPath: URL.createObjectURL(event.target.files[0])\n        });\n      }\n    };\n\n    this.onHandleIngredientItem = ind => {\n      var array = this.state.ingredientStrings; // make a separate copy of the array\n\n      var array3 = this.state.ingredientGroupList;\n\n      if (ind !== -1) {\n        array.splice(ind, 1);\n        array3.splice(ind, 1);\n        this.setState({\n          ingredientStrings: array,\n          ingredientGroupList: array3\n        });\n      }\n    };\n\n    this.onHandleInstructionItem = ind => {\n      const array = this.state.instructionGroupList;\n      array.splice(ind, 1);\n      this.setState({\n        instructionGroupList: array\n      });\n    };\n\n    this.onUpdateIngredientImg = (event, ind) => {\n      if (event.target.files[0] === null || this.state.ingredientGroupList.length <= ind) return;\n      const tmp_ingredientData = this.state.ingredientGroupList;\n      const tmp_ingredientItem = tmp_ingredientData[ind];\n      var tmp1 = {\n        product: tmp_ingredientItem.product,\n        quantity: tmp_ingredientItem.quantity,\n        measurement: tmp_ingredientItem.measurement,\n        productImgData: event.target.files[0],\n        productImgPath: URL.createObjectURL(event.target.files[0]),\n        flag: true\n      };\n      tmp_ingredientData[ind] = tmp1;\n      this.setState({\n        ingredientGroupList: tmp_ingredientData\n      });\n    };\n\n    this.onUpdateInstructionImg = (event, ind) => {\n      if (event.target.files[0] === null || this.state.instructionGroupList.length <= ind) return;\n      const tmp_instructionData = this.state.instructionGroupList;\n      const tmp_instructionItem = tmp_instructionData[ind];\n      let tmp = {\n        step: tmp_instructionItem.step,\n        imgdata: event.target.files[0],\n        imgpath: URL.createObjectURL(event.target.files[0])\n      };\n      tmp_instructionData[ind] = tmp;\n      this.setState({\n        instructionGroupList: tmp_instructionData\n      });\n    };\n\n    this.handleIngredientDropdownChange = (event, val) => {\n      var array = this.products;\n      var index = array.indexOf(val);\n\n      if (index !== -1) {\n        this.setState({\n          product_ind: index\n        });\n      }\n\n      if (event.target.value !== null) {\n        this.setState({\n          currentIngredient: val\n        });\n      } else {\n        this.setState({\n          currentIngredient: event.target.innerHTML\n        });\n      }\n    };\n\n    this.handleProductName = (event, val) => {\n      const searchResult = this.products.map(element => element.toLowerCase().includes(val.toLowerCase()));\n      const flag = searchResult.find(element => element === true);\n\n      if (flag !== true || flag === null) {\n        this.setState({\n          productImgSetting_flag: true\n        });\n        this.setState({\n          currentIngredient: val\n        });\n      } else {\n        this.setState({\n          productImgSetting_flag: false\n        });\n        this.setState({\n          currentIngredient: val\n        });\n      }\n    };\n\n    this.handleCategoryDropdownChange = val => {\n      this.setState({\n        categoryList: val\n      });\n    };\n\n    this.addInstructionList = () => {\n      if (this.state.instructionsChip.length === 0) return;\n      let tmp = {\n        step: this.state.instructionsChip,\n        imgdata: this.state.instructionImgData,\n        imgpath: this.state.instructionImgPath\n      };\n      this.setState({\n        instructionGroupList: [...this.state.instructionGroupList, tmp]\n      });\n      this.setState({\n        instructionsChip: [],\n        instructionImgData: null,\n        instructionImgPath: \"\"\n      });\n    };\n\n    this.sendSuggestedMealToDB =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(e) {\n        var _this$state, productLabel, intro, servings, ingredientStrings, ingredientGroupList, instructionGroupList, imgSrc, readTime, cookTime, categoryList, productImgForm, img_count1, i, productImg_paths, productImg_url, productImg_config, response, formatted_ingredient1, product_slider, n1, tmp_ingredient, image, tmp_slider_data, instructionImgForm, img_count, instructionImg_paths, instructionImg_url, instructionImg_config, instructionGroupData, n, tmp, new_categories, index, url, suggestMealForm, config;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _this$state = _this.state, productLabel = _this$state.productLabel, intro = _this$state.intro, servings = _this$state.servings, ingredientStrings = _this$state.ingredientStrings, ingredientGroupList = _this$state.ingredientGroupList, instructionGroupList = _this$state.instructionGroupList, imgSrc = _this$state.imgSrc, readTime = _this$state.readTime, cookTime = _this$state.cookTime, categoryList = _this$state.categoryList;\n\n              if (!(productLabel === \"\")) {\n                _context.next = 4;\n                break;\n              }\n\n              console.log(\"meal label blank\");\n              return _context.abrupt(\"return\");\n\n            case 4:\n              if (!(ingredientStrings.length === 0)) {\n                _context.next = 7;\n                break;\n              }\n\n              window.alert(\"Suggested meal requires adding at least one ingredient to submit\");\n              return _context.abrupt(\"return\");\n\n            case 7:\n              if (!(imgSrc === null)) {\n                _context.next = 10;\n                break;\n              }\n\n              window.alert(\"You didn't add suggested meal image\");\n              return _context.abrupt(\"return\");\n\n            case 10:\n              //------------- to get glabal path for instrution image ----------------------------------------\n              productImgForm = new FormData();\n              img_count1 = 0;\n\n              for (i = 0; i < ingredientGroupList.length; i++) {\n                if (ingredientGroupList[i].productImgData !== null) {\n                  productImgForm.append('productImgs', ingredientGroupList[i].productImgData);\n                  img_count1++;\n                }\n              }\n\n              productImg_paths = null;\n\n              if (!(img_count1 !== 0)) {\n                _context.next = 22;\n                break;\n              }\n\n              productImg_url = \"/getProductImgURL/\";\n              productImg_config = {\n                method: 'POST',\n                data: productImgForm,\n                url: productImg_url\n              };\n              _context.next = 19;\n              return axios(productImg_config);\n\n            case 19:\n              response = _context.sent;\n              console.log(\"UploadedImage_URL: \", response);\n              productImg_paths = response.data.productImg_paths;\n\n            case 22:\n              //-------------to make prodcut data ------------------------------------------\n              formatted_ingredient1 = [];\n              product_slider = [];\n              n1 = -1;\n\n              for (i = 0; i < ingredientGroupList.length; i++) {\n                tmp_ingredient = {\n                  product: ingredientGroupList[i].product,\n                  quantity: ingredientGroupList[i].quantity,\n                  measurement: ingredientGroupList[i].measurement\n                };\n                formatted_ingredient1.push(tmp_ingredient); //-----------------------------------------------\n\n                image = \"\";\n\n                if (ingredientGroupList[i].productImgData !== null) {\n                  n1++;\n                  image = productImg_paths[n1];\n                } else {\n                  image = ingredientGroupList[i].productImgPath;\n                }\n\n                tmp_slider_data = {\n                  ingredient: ingredientGroupList[i].product,\n                  image: image,\n                  flag: ingredientGroupList[i].flag\n                };\n                product_slider.push(tmp_slider_data);\n              } //------------- to get glabal path for instrution image ----------------------------------------\n\n\n              instructionImgForm = new FormData();\n              img_count = 0;\n\n              for (i = 0; i < instructionGroupList.length; i++) {\n                if (instructionGroupList[i].imgdata !== null) {\n                  instructionImgForm.append('instructionImgs', instructionGroupList[i].imgdata);\n                  img_count++;\n                }\n              }\n\n              instructionImg_paths = null;\n\n              if (!(img_count !== 0)) {\n                _context.next = 37;\n                break;\n              }\n\n              instructionImg_url = \"/getInstructionImgURL/\";\n              instructionImg_config = {\n                method: 'POST',\n                data: instructionImgForm,\n                url: instructionImg_url\n              };\n              _context.next = 35;\n              return axios(instructionImg_config);\n\n            case 35:\n              response = _context.sent;\n              instructionImg_paths = response.data.instrutionImg_paths;\n\n            case 37:\n              //-------------to make instruction data ------------------------------------------\n              instructionGroupData = [];\n              n = -1;\n\n              for (i = 0; i < instructionGroupList.length; i++) {\n                image = null;\n\n                if (instructionGroupList[i].imgdata !== null) {\n                  n++;\n                  image = instructionImg_paths[n];\n                }\n\n                tmp = {\n                  step: instructionGroupList[i].step,\n                  image: image\n                };\n                instructionGroupData.push(tmp);\n              } //-------------to make new category data ------------------------------------------\n\n\n              new_categories = [];\n\n              for (i = 0; i < categoryList.length; i++) {\n                index = _this.categories.indexOf(categoryList[i]);\n                if (index === -1) new_categories.push(categoryList[i]);\n              } //-------------to make ingredient data ------------------------------------------\n\n\n              url = \"/addMealSuggestion/\";\n              suggestMealForm = new FormData();\n              suggestMealForm.append('productLabel', productLabel);\n              suggestMealForm.append('intro', intro);\n              suggestMealForm.append('servings', servings);\n              suggestMealForm.append('product_slider', JSON.stringify(product_slider));\n              suggestMealForm.append('formatted_ingredient', JSON.stringify(formatted_ingredient1));\n              suggestMealForm.append('instructionsGroupList', JSON.stringify(instructionGroupData));\n              suggestMealForm.append('ingredientStrings', ingredientStrings);\n              suggestMealForm.append('readTime', readTime);\n              suggestMealForm.append('cookTime', cookTime);\n              suggestMealForm.append('categoryChips', JSON.stringify(categoryList));\n              suggestMealForm.append('newCategories', JSON.stringify(new_categories));\n              suggestMealForm.append('imgSrc', imgSrc);\n              config = {\n                method: 'POST',\n                data: suggestMealForm,\n                url: url\n              };\n              axios(config).then(response => {\n                if (response.status >= 200 && response.status < 300) {\n                  _this.setState({\n                    open: true\n                  });\n\n                  console.log(response);\n                  console.log(\"Display Meal submitted successfully\");\n                  window.location.href = \"/SuggestMeal\";\n                } else {\n                  console.log(\"Somthing happened wrong\");\n                }\n              }).catch(error => {\n                console.log(error);\n              });\n\n            case 58:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    this.state = {\n      productLabel: \"\",\n      currentIngredientMeasurement: \"\",\n      currentIngredientQuantity: \"\",\n      ingredientStrings: [],\n      instructionsChip: [],\n      categoryChips: [\"snacks\", \"abc\", \"123\"],\n      productsPopulated: false,\n      imgSrc: null,\n      loading_imgSrc: \"\",\n      open: false,\n      productImgSetting_flag: false,\n      productImgSrc: null,\n      productImg_path: \"\",\n      product_ind: 0,\n      categoryList: []\n    };\n    this.handleIngredientDropdownChange = this.handleIngredientDropdownChange.bind(this);\n    this.handleIngredientMeasurement = this.handleIngredientMeasurement.bind(this);\n    this.handleIngredientQuantity = this.handleIngredientQuantity.bind(this);\n    this.addIngredientToMeal = this.addIngredientToMeal.bind(this);\n  } ///////////////////////////////////////////////////////////////////////////////////////\n\n\n  componentDidMount() {\n    var url = \"/get-all-products\";\n    axios.get(url).then(body => {\n      var productsList = body.data;\n\n      if (productsList && productsList.data.length !== 0) {\n        console.log(\"returns GET ALL PRODUCTS \");\n\n        for (var i = 0; i < productsList.data.length; i++) {\n          this.products.push(productsList.data[i].product_name);\n          this.productsImg_path.push(productsList.data[i].product_image);\n        }\n\n        console.log(\"PRINTING ALL PRODUCTS LIST\");\n        console.log(this.products);\n        this.setState({\n          productsPopulated: true\n        });\n      } else {\n        console.log(\"get all products function does not return\");\n      }\n    }).catch(err => {\n      console.log(err);\n    }); //----get category meals-------------------------\n\n    url = \"/get-all-categories\";\n    axios.get(url).then(body => {\n      var categoryList = body.data;\n\n      if (categoryList && categoryList.data.length !== 0) {\n        console.log(\"returns GET of ALL Categories \");\n\n        for (var i = 0; i < categoryList.data.length; i++) {\n          this.categories.push(categoryList.data[i].category_name);\n        }\n\n        console.log(\"PRINTING UPDATED CATEGORIES LIST\");\n      } else {\n        console.log(\"get all products function does not return\");\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  } ///////////////////////////////////////////////////////////////////////////////////////\n\n\n  ///////////////////////////////////////////////////////////////////////////////////////\n  handleAddIngredientChip(chip) {\n    this.setState({\n      ingredientStrings: [...this.state.ingredientStrings, chip]\n    });\n  } ///////////////////////////////////////////////////////////////////////////////////////\n\n\n  handleAddCategoryChip(chip) {\n    this.setState({\n      categoryChips: [...this.state.categoryChips, chip]\n    }); //\n  } ///////////////////////////////////////////////////////////////////////////////////////\n\n\n  handleAddInstructionStep(chip) {\n    this.setState({\n      instructionsChip: [...this.state.instructionsChip, chip]\n    });\n  } ///////////////////////////////////////////////////////////////////////////////////////\n\n\n  handleAddCategoryStep() {\n    console.log(\"FFFFFFFFFFFFFF+++++++++\");\n  } ///////////////////////////////////////////////////////////////////////////////////////\n\n\n  ///////////////////////////////////////////////////////////////////////////////////////\n  handleDeleteIngredientChip(chip) {\n    var array = this.state.ingredientStrings; // make a separate copy of the array\n\n    var array3 = this.state.ingredientGroupList;\n    var index = array.indexOf(chip);\n\n    if (index !== -1) {\n      array.splice(index, 1);\n      array3.splice(index, 1);\n      this.setState({\n        ingredientStrings: array,\n        ingredientGroupList: array3\n      });\n    }\n  } ///////////////////////////////////////////////////////////////////////////////////////\n\n\n  handleDeleteCategoryChip(chip) {\n    var array = [...this.state.categoryChips]; // make a separate copy of the array\n\n    var index = array.indexOf(chip);\n\n    if (index !== -1) {\n      array.splice(index, 1);\n      this.setState({\n        categoryChips: array\n      });\n    }\n  } ///////////////////////////////////////////////////////////////////////////////////////\n\n\n  handleDeleteInstructionsStep(chip) {\n    var array = [...this.state.instructionsChip]; // make a separate copy of the array\n\n    var index = array.indexOf(chip);\n\n    if (index !== -1) {\n      array.splice(index, 1);\n      this.setState({\n        instructionsChip: array\n      });\n    }\n  } ///////////////////////////////////////////////////////////////////////////////////////\n\n\n  handleIngredientQuantity(event) {\n    console.log(event.target.value);\n    this.setState({\n      currentIngredientQuantity: event.target.value\n    });\n  } ///////////////////////////////////////////////////////////////////////////////////////\n\n\n  ///////////////////////////////////////////////////////////////////////////////////////\n  handleIngredientMeasurement(event) {\n    if (event.target.value) {\n      this.setState({\n        currentIngredientMeasurement: event.target.value\n      });\n    } else {\n      this.setState({\n        currentIngredientMeasurement: event.target.innerHTML\n      });\n    }\n  } ///////////////////////////////////////////////////////////////////////////////////////\n\n\n  addIngredientToMeal(event) {\n    event.preventDefault();\n    var properIngredientStringSyntax;\n\n    if (document.getElementById(\"currentIngredient\").value === \"\") {\n      window.alert(\"Enter an ingredient to add to meal\");\n      return;\n    } // update ingredient string syntax for no quantity or no measurement.\n\n\n    if (this.state.currentIngredientQuantity === 0) {\n      properIngredientStringSyntax = document.getElementById(\"currentIngredient\").value;\n    } else if (document.getElementById(\"currentIngredientMeasurement\").value === null) {\n      properIngredientStringSyntax = \"\" + this.state.currentIngredientQuantity + \" \" + document.getElementById(\"currentIngredient\").value;\n    } else {\n      properIngredientStringSyntax = \"\" + this.state.currentIngredientQuantity + \" \" + document.getElementById(\"currentIngredientMeasurement\").value + \" of \" + document.getElementById(\"currentIngredient\").value;\n    }\n\n    var currProductObject = {\n      product: this.state.currentIngredient,\n      quantity: this.state.currentIngredientQuantity,\n      measurement: this.state.currentIngredientMeasurement,\n      productImgData: this.state.productImgSrc,\n      productImgPath: null,\n      flag: this.state.productImgSetting_flag\n    };\n\n    if (this.state.productImgSetting_flag) {\n      currProductObject.productImgPath = this.state.productImg_path;\n      currProductObject.flag = true;\n    } else {\n      currProductObject.productImgPath = this.productsImg_path[this.state.product_ind];\n      currProductObject.flag = false;\n    }\n\n    this.handleAddIngredientChip(properIngredientStringSyntax);\n    this.setState({\n      ingredientGroupList: [...this.state.ingredientGroupList, currProductObject]\n    });\n    this.setState({\n      productImgSrc: null,\n      productImg_path: \"\"\n    });\n    this.setState({\n      currentIngredient: \"\",\n      currentIngredientQuantity: \"\",\n      currentIngredientMeasurement: \"\"\n    });\n  } ///////////////////////////////////////////////////////////////////////////////////////\n\n\n  ///////////////////////////////////////////////////////////////////////////////////////\n  render() {\n    const theme = createMuiTheme({\n      palette: {\n        primary: green\n      }\n    });\n    const _this$state2 = this.state,\n          loading_imgSrc = _this$state2.loading_imgSrc,\n          categoryList = _this$state2.categoryList;\n    return (\n      /*#__PURE__*/\n      React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 488,\n          columnNumber: 7\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(\"div\", {\n        style: {\n          width: \"85%\",\n          margin: \"auto\",\n          backgroundColor: \"#f4f4f4\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 489,\n          columnNumber: 9\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(\"div\", {\n        style: {\n          padding: \"20px\",\n          boxShadow: \"1px 1px 4px 2px #00000030\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 490,\n          columnNumber: 11\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(\"div\", {\n        id: \"title\",\n        style: {\n          marginTop: \"20px\",\n          marginBottom: \"20px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 491,\n          columnNumber: 13\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 492,\n          columnNumber: 15\n        }\n      }, \"Suggest Product\")),\n      /*#__PURE__*/\n      React.createElement(\"form\", {\n        noValidate: true,\n        autoComplete: \"off\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 494,\n          columnNumber: 13\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(Row, {\n        className: \"mb-1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 495,\n          columnNumber: 17\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(Col, {\n        md: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 496,\n          columnNumber: 19\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(Autocomplete, {\n        id: \"currentIngredient\",\n        options: this.products.map(option => option),\n        onChange: (ev, val) => this.handleIngredientDropdownChange(ev, val),\n        onInputChange: (ev, val) => this.handleProductName(ev, val),\n        freeSolo: true,\n        renderInput: params =>\n        /*#__PURE__*/\n        React.createElement(TextField, Object.assign({}, params, {\n          label: \"Product Name\",\n          variant: \"filled\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 503,\n            columnNumber: 50\n          }\n        })),\n        fullWidth: true,\n        className: \"mb-3\",\n        value: this.state.currentIngredient,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 497,\n          columnNumber: 21\n        }\n      })),\n      /*#__PURE__*/\n      React.createElement(Col, {\n        md: 4,\n        style: {\n          marginTop: \"20px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 511,\n          columnNumber: 19\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(\"input\", {\n        accept: \"image/*\",\n        id: \"imgSrc\",\n        type: \"file\",\n        className: \"mb-2 pr-4\",\n        onChange: ev => this.onTextFieldClick(ev),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 512,\n          columnNumber: 21\n        }\n      })),\n      /*#__PURE__*/\n      React.createElement(Col, {\n        md: 4,\n        style: {\n          marginTop: \"20px\",\n          textAlign: \"center\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 514,\n          columnNumber: 17\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(\"img\", {\n        src: loading_imgSrc,\n        width: \"70%\",\n        height: \"auto\",\n        alt: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 515,\n          columnNumber: 19\n        }\n      }))),\n      /*#__PURE__*/\n      React.createElement(Row, {\n        className: \"mb-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 522,\n          columnNumber: 17\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(Col, {\n        md: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 523,\n          columnNumber: 19\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(Autocomplete, {\n        multiple: true,\n        id: \"tags-filled\",\n        className: \"mb-2\",\n        freeSolo: true // filterSelectedOptions\n        ,\n        options: this.categories.map(option => option) // onChange={(ev,val)=>this.handleCategoryDropdownChange(ev,val)}\n        ,\n        onChange: (e, newValue) => this.handleCategoryDropdownChange(newValue) // getOptionLabel={option => option}\n        // renderTags={() => {}}\n        ,\n        value: categoryList,\n        renderInput: params =>\n        /*#__PURE__*/\n        React.createElement(TextField, Object.assign({}, params, {\n          variant: \"filled\",\n          label: \"Categories\",\n          placeholder: \"Suggest categories for this meal..\",\n          fullWidth: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 537,\n            columnNumber: 27\n          }\n        })),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 524,\n          columnNumber: 21\n        }\n      }))),\n      /*#__PURE__*/\n      React.createElement(\"hr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 550,\n          columnNumber: 17\n        }\n      }),\n      /*#__PURE__*/\n      React.createElement(Row, {\n        className: \"mb-5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 552,\n          columnNumber: 17\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(Col, {\n        md: 4,\n        style: {\n          textAlign: \"center\",\n          margin: \"auto\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 553,\n          columnNumber: 19\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(ThemeProvider, {\n        theme: theme,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 554,\n          columnNumber: 21\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(Button, {\n        variant: \"contained\",\n        className: \"mb-2\",\n        color: \"primary\",\n        style: {\n          color: \"white\"\n        },\n        onClick: () => this.sendSuggestedMealToDB(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 555,\n          columnNumber: 23\n        }\n      }, \" Add Product\"))))))),\n      /*#__PURE__*/\n      React.createElement(Dialog, {\n        open: this.state.open,\n        onClose: this.handleClose,\n        \"aria-labelledby\": \"alert-dialog-title\",\n        \"aria-describedby\": \"alert-dialog-description\",\n        maxWidth: \"xs\",\n        fullWidth: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 562,\n          columnNumber: 9\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(DialogTitle, {\n        id: \"alert-dialog-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 570,\n          columnNumber: 11\n        }\n      }, \"Informtation\"),\n      /*#__PURE__*/\n      React.createElement(DialogContent, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 571,\n          columnNumber: 11\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(DialogContentText, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 572,\n          columnNumber: 13\n        }\n      }, \"Successfully added in database\"))))\n    );\n  }\n\n}\n\nexport default SuggestProduct;","map":{"version":3,"sources":["/home/chuka/joe/ChopChowSD/client/src/components/SuggestProduct.js"],"names":["React","Component","TextField","Autocomplete","axios","Row","Col","Button","createMuiTheme","ThemeProvider","green","Dialog","DialogContent","DialogContentText","DialogTitle","SuggestProduct","constructor","props","products","productsImg_path","categories","measurements","handleClose","setState","open","onTextFieldChange","e","target","id","value","onTextFieldClick","event","files","undefined","imgSrc","loading_imgSrc","URL","createObjectURL","img_change_flag","onhandleProductImg","productImgSrc","productImg_path","onhandleInstructionImg","instructionImgData","instructionImgPath","onHandleIngredientItem","ind","array","state","ingredientStrings","array3","ingredientGroupList","splice","onHandleInstructionItem","instructionGroupList","onUpdateIngredientImg","length","tmp_ingredientData","tmp_ingredientItem","tmp1","product","quantity","measurement","productImgData","productImgPath","flag","onUpdateInstructionImg","tmp_instructionData","tmp_instructionItem","tmp","step","imgdata","imgpath","handleIngredientDropdownChange","val","index","indexOf","product_ind","currentIngredient","innerHTML","handleProductName","searchResult","map","element","toLowerCase","includes","find","productImgSetting_flag","handleCategoryDropdownChange","categoryList","addInstructionList","instructionsChip","sendSuggestedMealToDB","productLabel","intro","servings","readTime","cookTime","console","log","window","alert","productImgForm","FormData","img_count1","i","append","productImg_paths","productImg_url","productImg_config","method","data","url","response","formatted_ingredient1","product_slider","n1","tmp_ingredient","push","image","tmp_slider_data","ingredient","instructionImgForm","img_count","instructionImg_paths","instructionImg_url","instructionImg_config","instrutionImg_paths","instructionGroupData","n","new_categories","suggestMealForm","JSON","stringify","config","then","status","location","href","catch","error","currentIngredientMeasurement","currentIngredientQuantity","categoryChips","productsPopulated","bind","handleIngredientMeasurement","handleIngredientQuantity","addIngredientToMeal","componentDidMount","get","body","productsList","product_name","product_image","err","category_name","handleAddIngredientChip","chip","handleAddCategoryChip","handleAddInstructionStep","handleAddCategoryStep","handleDeleteIngredientChip","handleDeleteCategoryChip","handleDeleteInstructionsStep","preventDefault","properIngredientStringSyntax","document","getElementById","currProductObject","render","theme","palette","primary","width","margin","backgroundColor","padding","boxShadow","marginTop","marginBottom","option","ev","params","textAlign","newValue","color"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\n// import Chip from \"@material-ui/core/Chip\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\"; // createFilterOptions,\n// import axios from 'axios';\nimport axios from '../util/Api';\nimport { Row, Col } from \"react-bootstrap\";\nimport Button from '@material-ui/core/Button';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport { green } from '@material-ui/core/colors';\nimport {Dialog, DialogContent, DialogContentText, DialogTitle} from '@material-ui/core';\n\nclass SuggestProduct extends Component {\n  products = [];\n  productsImg_path = [];\n  categories = [];\n  measurements = [\"mL\",\"oz\",\"L\",\"cup(s)\",\"Tbsp\",\"tsp\",\"pt\",\"lb\",\"g\",\"kg\",\"lb\"];\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      productLabel: \"\",\n      currentIngredientMeasurement: \"\",\n      currentIngredientQuantity: \"\",\n      ingredientStrings: [],\n      instructionsChip: [],      \n      categoryChips: [\"snacks\", \"abc\", \"123\"],\n      productsPopulated: false,\n      imgSrc: null,\n      loading_imgSrc:\"\",\n      open:false,\n      productImgSetting_flag: false,\n      productImgSrc: null,\n      productImg_path:\"\",\n      product_ind: 0,\n      categoryList:[]\n    };\n\n    this.handleIngredientDropdownChange = this.handleIngredientDropdownChange.bind(\n      this\n    );\n    this.handleIngredientMeasurement = this.handleIngredientMeasurement.bind(\n      this\n    );\n    this.handleIngredientQuantity = this.handleIngredientQuantity.bind(this);\n    this.addIngredientToMeal = this.addIngredientToMeal.bind(this);\n  }\n\n  ///////////////////////////////////////////////////////////////////////////////////////\n  componentDidMount() {\n    var url = \"/get-all-products\";\n      axios.get(url).then((body) => {\n        var productsList = body.data;\n        if (productsList && productsList.data.length !== 0) {\n          console.log(\"returns GET ALL PRODUCTS \");\n          for (var i = 0; i < productsList.data.length; i++) {\n            this.products.push(productsList.data[i].product_name);\n            this.productsImg_path.push(productsList.data[i].product_image);\n          }\n          console.log(\"PRINTING ALL PRODUCTS LIST\");\n          console.log(this.products);\n          this.setState({ productsPopulated: true });          \n        } else {\n          console.log(\"get all products function does not return\");\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n\n    //----get category meals-------------------------\n    url = \"/get-all-categories\";\n    axios.get(url).then((body) => {        \n        var categoryList = body.data;\n        if (categoryList && categoryList.data.length !== 0) {\n          console.log(\"returns GET of ALL Categories \");\n\n          for (var i = 0; i < categoryList.data.length; i++) {\n            this.categories.push(categoryList.data[i].category_name);\n          }\n          console.log(\"PRINTING UPDATED CATEGORIES LIST\");\n        } else {\n          console.log(\"get all products function does not return\");\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  ///////////////////////////////////////////////////////////////////////////////////////\n  handleClose = () => { this.setState({open: false});};\n\n  ///////////////////////////////////////////////////////////////////////////////////////\n  onTextFieldChange = (e) => {\n    this.setState({ [e.target.id]: e.target.value });\n  };\n\n  ///////////////////////////////////////////////////////////////////////////////////////\n  onTextFieldClick = (event) => {    \n    if (event.target.files[0] === undefined ) return;\n    this.setState({ imgSrc: event.target.files[0] });\n    this.setState({ loading_imgSrc:  URL.createObjectURL(event.target.files[0]) });\n    this.setState({ img_change_flag: true });\n\n  };\n\n///////////////////////////////////////////////////////////////////////////////////////\n  onhandleProductImg = (event) => {   \n    if (event.target.files[0] === undefined ) return;\n    this.setState({ productImgSrc: event.target.files[0] });\n    if (event.target.files[0] !== null) {\n        this.setState({ productImg_path:  URL.createObjectURL(event.target.files[0]) });\n    }\n  };\n\n  ///////////////////////////////////////////////////////////////////////////////////////\n  onhandleInstructionImg = (event) => { \n    if (event.target.files[0] === undefined ) return;  \n    this.setState({ instructionImgData: event.target.files[0] });\n    if (event.target.files[0] !== null) {\n        this.setState({ instructionImgPath:  URL.createObjectURL(event.target.files[0]) });\n    }\n  };\n\n///////////////////////////////////////////////////////////////////////////////////////\n  handleAddIngredientChip(chip) {\n    this.setState({\n      ingredientStrings: [...this.state.ingredientStrings, chip],\n    });\n  }\n\n  ///////////////////////////////////////////////////////////////////////////////////////\n  handleAddCategoryChip(chip) {\n    this.setState({ categoryChips: [...this.state.categoryChips, chip] }); //\n  }\n\n  ///////////////////////////////////////////////////////////////////////////////////////\n  handleAddInstructionStep(chip) {\n    this.setState({\n      instructionsChip: [...this.state.instructionsChip, chip],\n    });\n  }\n\n\n  ///////////////////////////////////////////////////////////////////////////////////////\n  handleAddCategoryStep() {\n   console.log(\"FFFFFFFFFFFFFF+++++++++\");\n  }\n  \n  ///////////////////////////////////////////////////////////////////////////////////////\n  onHandleIngredientItem = (ind) =>{\n    var array = this.state.ingredientStrings; // make a separate copy of the array\n    var array3 = this.state.ingredientGroupList;\n    if (ind !== -1) {\n      array.splice(ind, 1);\n      array3.splice(ind, 1);\n      this.setState({ ingredientStrings: array,ingredientGroupList: array3});\n    }\n\n  }\n\n  ///////////////////////////////////////////////////////////////////////////////////////\n  onHandleInstructionItem = (ind) =>{\n    const array  =this.state.instructionGroupList;\n    array.splice(ind, 1);\n    this.setState({instructionGroupList: array});\n  }\n\n  ///////////////////////////////////////////////////////////////////////////////////////\n  onUpdateIngredientImg= (event, ind) =>{\n    if (event.target.files[0] === null || this.state.ingredientGroupList.length<= ind) return;\n    const tmp_ingredientData = this.state.ingredientGroupList;\n    const tmp_ingredientItem = tmp_ingredientData[ind];\n\n    var tmp1 = { \n      product: tmp_ingredientItem.product,  \n      quantity: tmp_ingredientItem.quantity,  \n      measurement: tmp_ingredientItem.measurement, \n      productImgData: event.target.files[0],\n      productImgPath: URL.createObjectURL(event.target.files[0]),\n      flag: true,\n    };\n    tmp_ingredientData[ind] = tmp1;\n    this.setState({ingredientGroupList: tmp_ingredientData});\n  }\n\n  ///////////////////////////////////////////////////////////////////////////////////////\n  onUpdateInstructionImg = (event, ind) =>{\n    if (event.target.files[0] === null || this.state.instructionGroupList.length<= ind) return;\n    const tmp_instructionData = this.state.instructionGroupList;\n    const tmp_instructionItem = tmp_instructionData[ind];\n\n    let tmp = {\n      step: tmp_instructionItem.step,\n      imgdata: event.target.files[0],\n      imgpath: URL.createObjectURL(event.target.files[0]),\n    };\n\n    tmp_instructionData[ind] = tmp;\n    this.setState({instructionGroupList: tmp_instructionData});\n  }\n\n  ///////////////////////////////////////////////////////////////////////////////////////\n  handleDeleteIngredientChip(chip) {\n    var array = this.state.ingredientStrings; // make a separate copy of the array\n    var array3 = this.state.ingredientGroupList;\n\n    var index = array.indexOf(chip);\n    if (index !== -1) {\n      array.splice(index, 1);\n      array3.splice(index, 1);\n\n      this.setState({ ingredientStrings: array, ingredientGroupList:array3});\n    }\n  }\n\n  ///////////////////////////////////////////////////////////////////////////////////////\n  handleDeleteCategoryChip(chip) {\n    var array = [...this.state.categoryChips]; // make a separate copy of the array\n    var index = array.indexOf(chip);\n    if (index !== -1) {\n      array.splice(index, 1);\n      this.setState({ categoryChips: array });\n    }\n  }\n\n  ///////////////////////////////////////////////////////////////////////////////////////\n  handleDeleteInstructionsStep(chip) {\n    var array = [...this.state.instructionsChip]; // make a separate copy of the array\n    var index = array.indexOf(chip);\n    if (index !== -1) {\n      array.splice(index, 1);\n      this.setState({ instructionsChip: array });\n    }\n  }\n\n  ///////////////////////////////////////////////////////////////////////////////////////\n  handleIngredientQuantity(event) {\n    console.log(event.target.value);\n    this.setState({ currentIngredientQuantity: event.target.value });\n  }\n\n  ///////////////////////////////////////////////////////////////////////////////////////\n  handleIngredientDropdownChange=(event,val)=>{\n    var array = this.products; \n    var index = array.indexOf(val);\n    if (index !== -1) {      \n      this.setState({ product_ind: index });\n    }\n\n    if (event.target.value!== null) {\n      this.setState({ currentIngredient: val });\n    } else {\n      this.setState({ currentIngredient: event.target.innerHTML });\n    }\n  }\n\n  ///////////////////////////////////////////////////////////////////////////////////////\n  handleProductName=(event, val)=>{\n    const searchResult = this.products.map(element=>element.toLowerCase().includes(val.toLowerCase()));\n    const flag = searchResult.find(element=>element === true);\n\n    if(flag !== true || flag ===null) {\n      this.setState({productImgSetting_flag:true});\n      this.setState({ currentIngredient: val });\n    }else{\n      this.setState({productImgSetting_flag:false});\n      this.setState({ currentIngredient: val});\n    }\n  }\n\n\n ///////////////////////////////////////////////////////////////////////////////////////\n  handleCategoryDropdownChange=(val)=>{\n    this.setState({categoryList: val});\n  }\n\n\n///////////////////////////////////////////////////////////////////////////////////////\n  handleIngredientMeasurement(event) {\n    if (event.target.value) {\n      this.setState({ currentIngredientMeasurement: event.target.value });\n    } else {\n      this.setState({ currentIngredientMeasurement: event.target.innerHTML });\n    }\n  }\n\n  ///////////////////////////////////////////////////////////////////////////////////////\n  addIngredientToMeal(event) {\n    event.preventDefault();\n    var properIngredientStringSyntax;\n    if (document.getElementById(\"currentIngredient\").value === \"\") {   window.alert(\"Enter an ingredient to add to meal\");   return;  }\n    // update ingredient string syntax for no quantity or no measurement.\n    if (this.state.currentIngredientQuantity === 0) {\n      properIngredientStringSyntax = document.getElementById(\"currentIngredient\").value;\n    } else if (  document.getElementById(\"currentIngredientMeasurement\").value === null  ) {\n      properIngredientStringSyntax = \"\" + this.state.currentIngredientQuantity +  \" \" +  document.getElementById(\"currentIngredient\").value;\n    } else {\n      properIngredientStringSyntax =\n        \"\" + this.state.currentIngredientQuantity + \" \" +  document.getElementById(\"currentIngredientMeasurement\").value +\n        \" of \" + document.getElementById(\"currentIngredient\").value;\n    }\n\n    var currProductObject = { \n      product: this.state.currentIngredient,  \n      quantity: this.state.currentIngredientQuantity,  \n      measurement: this.state.currentIngredientMeasurement, \n      productImgData: this.state.productImgSrc,\n      productImgPath: null,\n      flag: this.state.productImgSetting_flag,\n    };\n\n    if(this.state.productImgSetting_flag ){\n      currProductObject.productImgPath = this.state.productImg_path;\n      currProductObject.flag = true\n    }else{\n      currProductObject.productImgPath = this.productsImg_path[this.state.product_ind];\n      currProductObject.flag = false;\n    }\n   \n\n    this.handleAddIngredientChip(properIngredientStringSyntax);\n    this.setState({ ingredientGroupList: [ ...this.state.ingredientGroupList,  currProductObject ] });\n    this.setState({ productImgSrc: null, productImg_path:\"\" });\n    this.setState({ currentIngredient:\"\",  currentIngredientQuantity:\"\", currentIngredientMeasurement:\"\"});\n\n  }\n\n  ///////////////////////////////////////////////////////////////////////////////////////\n  addInstructionList =()=>{\n    if( this.state.instructionsChip.length ===0 ) return;\n    let tmp = {\n      step: this.state.instructionsChip,\n      imgdata: this.state.instructionImgData,\n      imgpath: this.state.instructionImgPath,\n    }\n    this.setState({instructionGroupList: [...this.state.instructionGroupList, tmp ]});\n    this.setState({instructionsChip:[], instructionImgData: null, instructionImgPath:\"\" });\n  }\n \n\n///////////////////////////////////////////////////////////////////////////////////////\n  sendSuggestedMealToDB = async (e) => {\n    const { productLabel, intro,servings,ingredientStrings,ingredientGroupList, instructionGroupList,imgSrc,readTime,cookTime,categoryList} = this.state;\n\n    if (productLabel === \"\") {  console.log(\"meal label blank\"); return; }\n    if (ingredientStrings.length === 0) {   window.alert( \"Suggested meal requires adding at least one ingredient to submit\" );   return;  }\n    if (imgSrc === null) {   window.alert( \"You didn't add suggested meal image\" );   return;  }\n\n    //------------- to get glabal path for instrution image ----------------------------------------\n    let productImgForm = new FormData();\n    let img_count1 = 0;\n    for (var i = 0; i < ingredientGroupList.length; i++){\n      if (ingredientGroupList[i].productImgData !== null)\n      {\n        productImgForm.append('productImgs', ingredientGroupList[i].productImgData);\n        img_count1 ++;\n      }\n    }\n\n    let productImg_paths = null;\n    if(img_count1 !== 0){\n      var productImg_url = \"/getProductImgURL/\";\n      const productImg_config = {  method: 'POST',  data: productImgForm, url: productImg_url };\n\n      const response = await axios(productImg_config)\n      console.log(\"UploadedImage_URL: \", response)\n      productImg_paths = response.data.productImg_paths;\n    }\n\n    //-------------to make prodcut data ------------------------------------------\n    const formatted_ingredient1 = [];\n    const product_slider = [];\n    let n1 = -1;\n    for (i = 0; i < ingredientGroupList.length; i++){\n      var tmp_ingredient = { \n        product: ingredientGroupList[i].product,  \n        quantity: ingredientGroupList[i].quantity,  \n        measurement: ingredientGroupList[i].measurement, \n      };\n      formatted_ingredient1.push(tmp_ingredient);\n\n      //-----------------------------------------------\n     let image = \"\";\n     if (ingredientGroupList[i].productImgData !== null)\n     {   \n       n1 ++; image = productImg_paths[n1]\n     }\n     else{\n       image = ingredientGroupList[i].productImgPath;\n     }\n      const tmp_slider_data = { \n        ingredient: ingredientGroupList[i].product,  \n        image: image,  \n        flag: ingredientGroupList[i].flag, \n      };\n      product_slider.push(tmp_slider_data);\n    }\n\n    //------------- to get glabal path for instrution image ----------------------------------------\n    let instructionImgForm = new FormData();\n    let img_count = 0;\n    for ( i = 0; i < instructionGroupList.length; i++){\n      if (instructionGroupList[i].imgdata !== null)\n      {\n        instructionImgForm.append('instructionImgs', instructionGroupList[i].imgdata);\n        img_count ++;\n      }\n    }\n\n    var instructionImg_paths = null;\n    if(img_count !== 0){\n      var instructionImg_url = \"/getInstructionImgURL/\";\n      const instructionImg_config = {  method: 'POST',  data: instructionImgForm, url: instructionImg_url };\n\n      const response = await axios(instructionImg_config)\n      instructionImg_paths = response.data.instrutionImg_paths;\n    }\n\n    //-------------to make instruction data ------------------------------------------\n    const instructionGroupData = [];\n    let n = -1;\n    for ( i = 0; i < instructionGroupList.length; i++){\n      let image = null;\n      if (instructionGroupList[i].imgdata !== null)\n      {   n ++; image = instructionImg_paths[n] }\n\n      let tmp = {\n        step: instructionGroupList[i].step,\n        image: image,\n      }\n      instructionGroupData.push(tmp);\n    }\n\n    //-------------to make new category data ------------------------------------------\n    let new_categories = [];\n    for(i =0; i< categoryList.length; i++)\n    {\n      let index = this.categories.indexOf(categoryList[i]);\n      if(index===-1) new_categories.push(categoryList[i])\n    }\n\n    //-------------to make ingredient data ------------------------------------------\n    var url = \"/addMealSuggestion/\";\n\n    let suggestMealForm = new FormData();\n    suggestMealForm.append('productLabel', productLabel);\n    suggestMealForm.append('intro', intro);\n    suggestMealForm.append('servings', servings);\n    suggestMealForm.append('product_slider', JSON.stringify(product_slider));\n    suggestMealForm.append('formatted_ingredient', JSON.stringify(formatted_ingredient1));\n    suggestMealForm.append('instructionsGroupList', JSON.stringify(instructionGroupData));\n    suggestMealForm.append('ingredientStrings', ingredientStrings);\n    suggestMealForm.append('readTime', readTime);\n    suggestMealForm.append('cookTime', cookTime);\n    suggestMealForm.append('categoryChips', JSON.stringify(categoryList));    \n    suggestMealForm.append('newCategories', JSON.stringify(new_categories)); \n\n    suggestMealForm.append('imgSrc', imgSrc);\n    \n    const config = {  method: 'POST',  data: suggestMealForm, url: url };\n    axios(config).then(response => {\n      if (response.status >= 200 && response.status < 300) {\n        this.setState({ open : true});\n        console.log(response);\n        console.log(\"Display Meal submitted successfully\");   \n        window.location.href = \"/SuggestMeal\"  \n      } else {\n        console.log(\"Somthing happened wrong\");\n      }\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n\n\n  ///////////////////////////////////////////////////////////////////////////////////////\n  render(){\n    const theme = createMuiTheme({\n      palette: { primary: green, },\n    });\n  \n    const {loading_imgSrc, categoryList} = this.state;\n\n    return (\n      <div>\n        <div style={{ width:\"85%\" , margin:\"auto\", backgroundColor: \"#f4f4f4\"}}>\n          <div style={{ padding:\"20px\", boxShadow: \"1px 1px 4px 2px #00000030\"}}>\n            <div id=\"title\" style={{  marginTop:\"20px\", marginBottom:\"20px\", }}>\n              <b>Suggest Product</b>\n            </div>\n            <form noValidate autoComplete=\"off\">      \n                <Row className=\"mb-1\">\n                  <Col md={4}>\n                    <Autocomplete\n                      id=\"currentIngredient\"\n                      options={this.products.map((option) => option)}\n                      onChange={(ev,val)=>this.handleIngredientDropdownChange(ev,val)}\n                      onInputChange={(ev, val) => this.handleProductName(ev, val)}\n                      freeSolo\n                      renderInput={(params) => ( <TextField {...params} label=\"Product Name\" variant=\"filled\"/>)}\n                      fullWidth \n                      className=\"mb-3\"\n                      value={this.state.currentIngredient}\n                    />\n                   \n                    {/* <TextField fullWidth id=\"currentIngredientQuantity\" type=\"number\"  onChange={this.onTextFieldChange}  label=\"Quantity\" variant=\"filled\" placeholder=\"1..\"  className=\"mb-3\" value={this.state.currentIngredientQuantity}/> */}\n                  </Col>\n                  <Col md={4} style={{  marginTop:\"20px\"}}>\n                    <input accept=\"image/*\" id=\"imgSrc\" type=\"file\" className=\"mb-2 pr-4\" onChange={(ev)=>this.onTextFieldClick(ev)} /> \n                </Col>\n                <Col md={4} style={{  marginTop:\"20px\", textAlign:\"center\"}}>\n                  <img src={loading_imgSrc} width=\"70%\" height=\"auto\"  alt=\"\"/>\n                </Col>   \n\n                  {/* <Col md={4}  style={{textAlign:\"center\", margin: \"auto\"}}> \n                    <Button variant=\"contained\" color=\"primary\" disableRipple onClick={this.addIngredientToMeal} style={{color:\"white\", width:\"80%\"}}  className=\"mb-3\" > Add Ingredient</Button>\n                  </Col>             */}\n                </Row>\n                <Row className=\"mb-3\">\n                  <Col md={4}>\n                    <Autocomplete\n                        multiple\n                        id=\"tags-filled\"\n                        className=\"mb-2\" \n                        freeSolo\n                        // filterSelectedOptions\n                        options={this.categories.map((option) => option)} \n                        // onChange={(ev,val)=>this.handleCategoryDropdownChange(ev,val)}\n                        onChange={(e, newValue) => this.handleCategoryDropdownChange(newValue)}\n                        // getOptionLabel={option => option}\n                        // renderTags={() => {}}\n                        value={categoryList}\n                        renderInput={params => (\n                          <TextField\n                            {...params}\n                            variant=\"filled\"\n                            label=\"Categories\"\n                            placeholder=\"Suggest categories for this meal..\"\n                            fullWidth\n                          />\n                        )}\n                      />\n                    \n                  </Col>        \n                </Row>\n\n                <hr/>\n\n                <Row className=\"mb-5\">\n                  <Col md={4} style={{textAlign:\"center\", margin: \"auto\"}}>\n                    <ThemeProvider theme={theme}>\n                      <Button variant=\"contained\" className=\"mb-2\" color=\"primary\" style={{color:\"white\"}} onClick={()=>this.sendSuggestedMealToDB()}> Add Product</Button>\n                    </ThemeProvider>\n                  </Col>       \n                </Row>              \n              </form>\n          </div>\n        </div>\n        <Dialog\n          open={this.state.open}\n          onClose={this.handleClose}\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n          maxWidth = \"xs\"\n          fullWidth\n          >\n          <DialogTitle id=\"alert-dialog-title\">Informtation</DialogTitle>\n          <DialogContent>  \n            <DialogContentText>Successfully added in database</DialogContentText>       \n          </DialogContent>\n        </Dialog>\n      </div>\n    );\n  }\n}\n\nexport default SuggestProduct;\n"]},"metadata":{},"sourceType":"module"}