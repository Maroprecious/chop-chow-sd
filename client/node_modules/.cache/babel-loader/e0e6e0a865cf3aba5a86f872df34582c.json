{"ast":null,"code":"var _jsxFileName = \"/home/chuka/joe/ChopChowSD/client/src/components/mealsPage/PreviewMealsPage.js\";\nimport React, { Component } from \"react\";\nimport MealsPageModal from \"./MealsPageModal\";\nimport WithScrollbar from \"./product_slider/WithScrollbar\"; // import \"./MealsPage.scoped.scss\";\n\nimport { Row } from 'react-bootstrap';\nimport axios from '../../util/Api';\n\nclass PreviewMealsPage extends Component {\n  // Mongo\n  constructor(props) {\n    super(props);\n\n    this.onClickMealCard = (i, col_count) => {\n      if (i === this.state.selected_index) this.setState({\n        slider_flag: !this.state.slider_flag\n      });else this.setState({\n        slider_flag: true\n      });\n      this.setState({\n        selected_index: i\n      });\n      this.setState({\n        meal_data: this.state.products[i]\n      });\n      this.setState({\n        modalIsOpen: true\n      });\n      this.setState({\n        firstPart_ind: (parseInt(i / col_count) + 1) * col_count\n      });\n    };\n\n    this.setMealSliderModal = () => {\n      this.setState({\n        mealSlider_Flag: true\n      });\n    };\n\n    this.removeMealSliderModal = () => {\n      this.setState({\n        mealSlider_Flag: false\n      });\n    };\n\n    this.update = () => {\n      let col_count = 1;\n      if (window.innerWidth > 1200) col_count = 4;else if (window.innerWidth > 900 && window.innerWidth < 1200) col_count = 3;else if (window.innerWidth > 500 && window.innerWidth < 900) col_count = 2;\n      if (this.state.products === null && window.innerWidth > 500 && window.innerHeight > 500) col_count = 4; // if(this.state.products.length < 4 && window.innerWidth > 500 && window.innerHeight > 500) col_count = 4; //Math.min(count, this.props.products.length);\n\n      this.setState({\n        col_count: col_count\n      });\n    };\n\n    window.addEventListener(\"resize\", this.update);\n    this.state = {\n      products: [],\n      width: 0,\n      firstPart_ind: 12,\n      slider_flag: false,\n      meal_data: null,\n      selected_index: 0,\n      selectedCardID: \"\",\n      mealSlider_Flag: false,\n      currentMealCount: 12,\n      mealList: null,\n      col_count: 1\n    };\n  } //////////////////////////////////////////////////////////////////////////////////////////////\n\n\n  componentDidMount() {\n    // store props values into state, along with display and close functionality\n    // add productList props into products state\n    this.update();\n    console.log(\"Comes in meal pages component did mount\");\n  } //////////////////////////////////////////////////////////////////////////////////////////////\n\n\n  //////////////////////////////////////////////////////////////////////////////////////////////\n  render() {\n    const meal_data = this.state.meal_data;\n    const _this$props = this.props,\n          meal_name = _this$props.meal_name,\n          mealPrep = _this$props.mealPrep;\n    const meal_preview = [];\n    let count = Math.min(this.state.products.length, this.state.currentMealCount); // Meal Cards displayed after selected card\n\n    for (let i = Math.min(count, this.state.firstPart_ind); i < count; i += this.state.col_count) {\n      const tmp_item = [];\n\n      for (let j = 0; j < this.state.col_count; j++) {\n        if (i + j >= count) break;\n        const value = this.state.products[i + j];\n        tmp_item.push(\n        /*#__PURE__*/\n        React.createElement(\"div\", {\n          key: i + j,\n          className: \"col-sm-\".concat(12 / this.state.col_count, \" mealContainer\"),\n          style: {\n            justifyContent: \"center\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 15\n          }\n        },\n        /*#__PURE__*/\n        React.createElement(\"div\", {\n          className: \"meal-card\",\n          onClick: () => this.onClickMealCard(i + j, this.state.col_count),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 17\n          }\n        },\n        /*#__PURE__*/\n        React.createElement(\"div\", {\n          style: containerStyle,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 19\n          }\n        },\n        /*#__PURE__*/\n        React.createElement(\"div\", {\n          style: {\n            textAlign: \"center\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 21\n          }\n        },\n        /*#__PURE__*/\n        React.createElement(\"img\", {\n          src: value.mealImage,\n          className: \"images\",\n          style: {\n            width: \"200px\",\n            height: \"200px\"\n          },\n          alt: \"/\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 23\n          }\n        })),\n        /*#__PURE__*/\n        React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 21\n          }\n        },\n        /*#__PURE__*/\n        React.createElement(\"span\", {\n          style: {\n            color: \"orange\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 23\n          }\n        }, value.label), \" \",\n        /*#__PURE__*/\n        React.createElement(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 79\n          }\n        }),\n        /*#__PURE__*/\n        React.createElement(\"span\", {\n          style: {\n            color: \"grey\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 23\n          }\n        }, \"View Details | \", value.cookTime, \"  mins to prepare\"),\n        /*#__PURE__*/\n        React.createElement(\"span\", {\n          style: {\n            color: \"black\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 23\n          }\n        }))))));\n      }\n\n      meal_preview.push(\n      /*#__PURE__*/\n      React.createElement(Row, {\n        key: i + 1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }\n      }, tmp_item));\n    } // }\n\n\n    return (\n      /*#__PURE__*/\n      React.createElement(\"div\", {\n        className: \"meals-Page\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 7\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(\"div\", {\n        id: \"title\",\n        className: \"meal-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 9\n        }\n      }, \" \",\n      /*#__PURE__*/\n      React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 49\n        }\n      }, \"Preview\"), \" \"),\n      /*#__PURE__*/\n      React.createElement(\"div\", {\n        className: \"mealPage-container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 9\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(MealsPageModal, {\n        value: meal_name,\n        mealPrep: mealPrep // mealPrep={meal_data.instructions}\n        // ingredientsList={meal_data.newer_ingredient_format }\n        ,\n        func_setMealFlag: this.setMealSliderModal,\n        func_removeMealFlag: this.removeMealSliderModal,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }\n      })))\n    );\n  }\n\n}\n\nexport default PreviewMealsPage;\nconst containerStyle = {\n  display: \"inline-block\",\n  width: \"100%\",\n  height: \"100%\"\n};","map":{"version":3,"sources":["/home/chuka/joe/ChopChowSD/client/src/components/mealsPage/PreviewMealsPage.js"],"names":["React","Component","MealsPageModal","WithScrollbar","Row","axios","PreviewMealsPage","constructor","props","onClickMealCard","i","col_count","state","selected_index","setState","slider_flag","meal_data","products","modalIsOpen","firstPart_ind","parseInt","setMealSliderModal","mealSlider_Flag","removeMealSliderModal","update","window","innerWidth","innerHeight","addEventListener","width","selectedCardID","currentMealCount","mealList","componentDidMount","console","log","render","meal_name","mealPrep","meal_preview","count","Math","min","length","tmp_item","j","value","push","justifyContent","containerStyle","textAlign","mealImage","height","color","label","cookTime","display"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport MealsPageModal from \"./MealsPageModal\";\nimport WithScrollbar from \"./product_slider/WithScrollbar\";\n// import \"./MealsPage.scoped.scss\";\nimport { Row } from 'react-bootstrap'\nimport axios from '../../util/Api';\n\nclass PreviewMealsPage extends Component {\n  // Mongo\n  entries;\n\n  constructor(props) {\n    super(props);\n\n    window.addEventListener(\"resize\", this.update);\n    this.state = {\n      products: [],\n      width: 0,\n      firstPart_ind: 12,\n      slider_flag: false,\n      meal_data: null,\n      selected_index: 0,\n      selectedCardID: \"\",\n\n      mealSlider_Flag: false,\n      currentMealCount: 12,\n\n      mealList:null,\n      col_count:1\n    };\n  }\n\n  //////////////////////////////////////////////////////////////////////////////////////////////\n  componentDidMount() {\n  // store props values into state, along with display and close functionality\n  // add productList props into products state\n\n  this.update();\n\n  console.log(\"Comes in meal pages component did mount\");\n\n  }\n\n  //////////////////////////////////////////////////////////////////////////////////////////////\n  onClickMealCard = ( i, col_count )=>{\n    if(i === this.state.selected_index) this.setState({slider_flag: !this.state.slider_flag})\n    else this.setState({slider_flag: true})\n\n    this.setState({ selected_index: i});\n    this.setState({ meal_data: this.state.products[i]});\n    this.setState({ modalIsOpen: true });  \n    this.setState({ firstPart_ind: (parseInt((i )/ col_count)+1)*col_count});   \n  }\n\n  //////////////////////////////////////////////////////////////////////////////////////////////\n  setMealSliderModal=()=>{\n    this.setState({mealSlider_Flag: true});\n  }\n\n  //////////////////////////////////////////////////////////////////////////////////////////////\n  removeMealSliderModal=()=>{\n    this.setState({mealSlider_Flag: false});\n  }\n\n  //////////////////////////////////////////////////////////////////////////////////////////////\n  update = () => {\n    let col_count = 1;\n    if (window.innerWidth > 1200) col_count = 4;\n    else if(window.innerWidth > 900 && window.innerWidth < 1200) col_count = 3;\n    else if(window.innerWidth > 500 && window.innerWidth < 900) col_count = 2;\n\n    if(this.state.products === null && window.innerWidth > 500 && window.innerHeight > 500) col_count = 4;\n    // if(this.state.products.length < 4 && window.innerWidth > 500 && window.innerHeight > 500) col_count = 4; //Math.min(count, this.props.products.length);\n\n    this.setState({col_count: col_count});\n  };\n\n\n  //////////////////////////////////////////////////////////////////////////////////////////////\n  render() {\n    const {meal_data} = this.state;\n    const {meal_name, mealPrep} = this.props;\n    const meal_preview = [];\n    let count = Math.min(this.state.products.length, this.state.currentMealCount);\n     \n      // Meal Cards displayed after selected card\n      for (let i = Math.min(count, this.state.firstPart_ind); i< count; i+=this.state.col_count) {\n        const tmp_item = []\n        for(let j = 0; j<this.state.col_count; j++)\n        {\n          if(i+j>= count) break;\n            const value = this.state.products[i+j];   \n            tmp_item.push(\n              <div key={i+j} className={`col-sm-${12/ this.state.col_count} mealContainer`} style={{ justifyContent:\"center\"}}>\n                <div className=\"meal-card\" onClick={()=>this.onClickMealCard(i+j, this.state.col_count)}>\n                  <div style={containerStyle}>\n                    <div style={{ textAlign:\"center\" }}>\n                      <img\n                        src={value.mealImage}\n                        className=\"images\"\n                        style={{ width: \"200px\", height: \"200px\" }}\n                        alt=\"/\"\n                      ></img>\n                    </div>\n                    <div>\n                      <span style={{ color: \"orange\" }} >{value.label}</span> <br></br>\n                      <span style={{ color: \"grey\" }}>View Details | {value.cookTime}  mins to prepare</span>\n                      <span style={{ color: \"black\" }}></span>\n                    </div>              \n                  </div>\n\n                </div>\n              </div>\n            )\n        }\n        meal_preview.push(\n          <Row key={i+1}>{tmp_item}</Row>\n        );\n      }\n    // }\n    \n    return (\n      <div className=\"meals-Page\">\n        <div id=\"title\" className=\"meal-title\"> <b>Preview</b> </div>\n        <div className=\"mealPage-container\">\n            {/* {meal_preview}     */}\n            <MealsPageModal \n                    value={meal_name}\n                    mealPrep={mealPrep}\n                    // mealPrep={meal_data.instructions}\n                    // ingredientsList={meal_data.newer_ingredient_format }\n                    func_setMealFlag = {this.setMealSliderModal}\n                    func_removeMealFlag = {this.removeMealSliderModal}\n            />    \n        </div>\n      </div>\n    )\n  };\n}\n\nexport default PreviewMealsPage;\n\nconst containerStyle = {\n  display: \"inline-block\",\n  width: \"100%\",\n  height: \"100%\"\n};\n"]},"metadata":{},"sourceType":"module"}