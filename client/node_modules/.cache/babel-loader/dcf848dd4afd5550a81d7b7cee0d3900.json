{"ast":null,"code":"import _regeneratorRuntime from \"/home/chuka/joe/ChopChowSD/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/chuka/joe/ChopChowSD/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/home/chuka/joe/ChopChowSD/client/src/components/ViewSuggestedMeals.js\";\nimport React, { Component } from \"react\"; // let ejs = require('ejs');\n\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TablePagination, TableRow, Checkbox, Typography, Toolbar, Dialog, DialogContent, DialogTitle, Button, IconButton, TextField } from '@material-ui/core';\nimport clsx from \"clsx\";\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport SendIcon from '@material-ui/icons/Send';\nimport ChipInput from \"material-ui-chip-input\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport { createMuiTheme, withStyles, ThemeProvider } from '@material-ui/core/styles';\nimport { green } from '@material-ui/core/colors'; // import axios from 'axios';\n\nimport axios from '../util/Api';\nimport { Row, Col } from \"react-bootstrap\";\nimport Tooltip from '@material-ui/core/Tooltip'; // const { GetObjectCommand } = require(\"@aws-sdk/client-s3\");\n// const { S3Client } = require(\"@aws-sdk/client-s3\");\n// var client = '';\n// const client = new S3Client({\n//   credientials: {\n//     region: const_region,\n//     aws_access_key_id: const_id,\n//     aws_secret_access_key: const_secret,\n//   }\n// })\n// height of the TextField\n\nconst columns = [{\n  id: '_id',\n  label: 'id',\n  minWidth: 100\n}, {\n  id: 'mealName',\n  label: 'MealName',\n  minWi859dth: 100\n}, {\n  id: 'intro',\n  label: 'Intro',\n  minWidth: 100\n}, {\n  id: 'servings',\n  label: 'Servings',\n  minWidth: 30\n}, // { id: 'mealImage', label: 'ImageSrc',  minWidth: 100},\n{\n  id: 'prepTime',\n  label: 'prepTime',\n  minWidth: 30\n}, {\n  id: 'cookTime',\n  label: 'cookTime',\n  minWidth: 30\n}, {\n  id: 'active',\n  label: 'Active',\n  minWidth: 150\n}];\n\nconst styles = theme => ({\n  button: {\n    margin: theme.spacing.unit\n  },\n  leftIcon: {\n    marginRight: theme.spacing.unit\n  },\n  rightIcon: {\n    marginLeft: theme.spacing.unit\n  },\n  iconSmall: {\n    fontSize: 20\n  },\n  root: {\n    width: '95%',\n    margin: 'auto',\n    marginTop: '20px'\n  },\n  container: {\n    maxHeight: 440\n  }\n});\n\nconst LightTooltip = withStyles(theme => ({\n  tooltip: {\n    backgroundColor: '#c0dbf2',\n    color: '#000000',\n    boxShadow: theme.shadows[1],\n    fontSize: 15,\n    marginTop: \"50px\"\n  }\n}))(Tooltip); ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nclass ViewSuggestedMeals extends Component {\n  constructor(props) {\n    var _this;\n\n    super(props);\n    _this = this;\n    this.products = [];\n    this.productsImg_path = [];\n    this.categories = [];\n    this.measurements = [\"mL\", \"oz\", \"L\", \"cup(s)\", \"Tbsp\", \"tsp\", \"pt\", \"lb\", \"g\", \"kg\", \"lb\"];\n\n    this.addInstructionList = () => {\n      if (this.state.instructionsChip.length === 0) return;\n      let tmp = {\n        step: this.state.instructionsChip,\n        imgdata: this.state.instructionImgData,\n        image: this.state.instructionImgPath\n      };\n      this.setState({\n        instructionGroupList: [...this.state.instructionGroupList, tmp]\n      });\n      this.setState({\n        instructionsChip: [],\n        instructionImgData: null,\n        instructionImgPath: \"\"\n      });\n    };\n\n    this.updateSuggestItem = (data, mealRole) => {\n      const instructionData = data.instructions;\n      const tmp_instructionData = [];\n\n      for (let i = 0; i < instructionData.length; i++) {\n        let tmp = {\n          step: instructionData[i].step,\n          imgdata: -1,\n          image: instructionData[i].image\n        };\n        tmp_instructionData.push(tmp);\n      }\n\n      this.setState({\n        categoryList: data.categories\n      });\n      this.setState({\n        selected_id: data._id,\n        instructionGroupList: tmp_instructionData,\n        suggestMealRole: mealRole,\n        mealLabel: data.label,\n        intro: data.intro,\n        servings: data.servings,\n        loading_imgSrc: data.mealImage,\n        formatted_ingredient: data.formatted_ingredient\n      });\n      this.setState({\n        open: true\n      }); // this.setState({ currentIngredientMeasurement: last_ingredient.measurement, currentIngredientQuantity: last_ingredient.quantity, currentIngredient: last_ingredient.product });\n\n      this.setState({\n        imgSrc: data.mealImage,\n        prepTime: data.prepTime,\n        cookTime: data.cookTime,\n        product_slider: data.product_slider,\n        productImgSetting_flag: false\n      }); // const last_slider = data.product_slider[data.product_slider.length-1];\n      // this.setState({productImg_path: last_slider.image});\n\n      let tmp_inst_groupList = [];\n      let temp = [];\n      let parsed_ingredients = JSON.parse(data.formatted_ingredient);\n      console.log(\"Parsed ingredients\");\n      console.log(parsed_ingredients);\n\n      for (let i = 0; i < parsed_ingredients.length; i++) {\n        var currProductObject = {\n          product: data.parsed_ingredients[i].product,\n          quantity: data.parsed_ingredients[i].quantity,\n          measurement: data.parsed_ingredients[i].measurement,\n          productImgData: null,\n          // productImgPath: data.product_slider[i].image,\n          flag: false\n        };\n        tmp_inst_groupList.push(currProductObject);\n        const last_ingredient = data.parsed_ingredients[i];\n        var properIngredientStringSyntax;\n        if (last_ingredient.quantity === 0) properIngredientStringSyntax = last_ingredient.product;else if (last_ingredient.measurement === null) properIngredientStringSyntax = \"\" + last_ingredient.quantity + \" \" + last_ingredient.product;else properIngredientStringSyntax = \"\" + last_ingredient.quantity + \" \" + last_ingredient.measurement + \" of \" + last_ingredient.product;\n        temp.push(properIngredientStringSyntax); // const tmp_data = {imgSrc:null, path_flag: data.product_slider[i].flag, path: data.product_slider[i].image};\n        // tmp_ingredientData.push(tmp_data);\n      }\n\n      this.setState({\n        ingredientGroupList: tmp_inst_groupList\n      });\n      this.setState({\n        ingredientStrings: temp\n      }); // this.setState({ ingredientData: tmp_ingredientData }); \n    };\n\n    this.onhandleInstructionImg = event => {\n      this.setState({\n        instructionImgData: event.target.files[0]\n      });\n\n      if (event.target.files[0] !== null) {\n        this.setState({\n          instructionImgPath: URL.createObjectURL(event.target.files[0])\n        });\n      }\n    };\n\n    this.handleUpdateSubmit =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var data, mealLabel, intro, servings, instructionGroupList, ingredientGroupList, ingredientStrings, imgSrc, prepTime, cookTime, selected_id, categoryList, productImgForm, img_count1, i, productImg_paths, productImg_url, productImg_config, response, formatted_ingredient1, product_slider, n1, tmp_ingredient, image, tmp_slider_data, instructionImgForm, img_count, instructionImg_paths, instructionImg_url, instructionImg_config, instructionGroupData, n, tmp, new_categories, index, suggestMealForm, url, config;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            data = _this.state;\n            mealLabel = data.mealLabel, intro = data.intro, servings = data.servings, instructionGroupList = data.instructionGroupList, ingredientGroupList = data.ingredientGroupList, ingredientStrings = data.ingredientStrings, imgSrc = data.imgSrc, prepTime = data.prepTime, cookTime = data.cookTime, selected_id = data.selected_id, categoryList = data.categoryList;\n            productImgForm = new FormData();\n            img_count1 = 0;\n\n            for (i = 0; i < ingredientGroupList.length; i++) {\n              if (ingredientGroupList[i].productImgData !== null) {\n                productImgForm.append('productImgs', ingredientGroupList[i].productImgData);\n                img_count1++;\n              }\n            }\n\n            productImg_paths = null;\n\n            if (!(img_count1 !== 0)) {\n              _context.next = 13;\n              break;\n            }\n\n            productImg_url = \"/getProductImgURL/\";\n            productImg_config = {\n              method: 'POST',\n              data: productImgForm,\n              url: productImg_url\n            };\n            _context.next = 11;\n            return axios(productImg_config);\n\n          case 11:\n            response = _context.sent;\n            productImg_paths = response.data.productImg_paths;\n\n          case 13:\n            console.log(\"productImg_paths: \", productImg_paths); //-------------to make prodcut data ------------------------------------------\n\n            formatted_ingredient1 = [];\n            product_slider = [];\n            n1 = -1;\n\n            for (i = 0; i < ingredientGroupList.length; i++) {\n              tmp_ingredient = {\n                product: ingredientGroupList[i].product,\n                quantity: ingredientGroupList[i].quantity,\n                measurement: ingredientGroupList[i].measurement\n              };\n              formatted_ingredient1.push(tmp_ingredient); //-----------------------------------------------\n\n              image = \"\";\n\n              if (ingredientGroupList[i].productImgData !== null) {\n                n1++;\n                image = productImg_paths[n1];\n              } else {\n                image = ingredientGroupList[i].productImgPath;\n              }\n\n              tmp_slider_data = {\n                ingredient: ingredientGroupList[i].product,\n                image: image,\n                flag: ingredientGroupList[i].flag\n              };\n              product_slider.push(tmp_slider_data);\n            } //------------- to get glabal path for instrution image ----------------------------------------\n\n\n            instructionImgForm = new FormData();\n            img_count = 0;\n\n            for (i = 0; i < instructionGroupList.length; i++) {\n              if (instructionGroupList[i].imgdata !== null && instructionGroupList[i].imgdata !== -1) {\n                instructionImgForm.append('instructionImgs', instructionGroupList[i].imgdata);\n                img_count++;\n              }\n            }\n\n            instructionImg_paths = null;\n\n            if (!(img_count !== 0)) {\n              _context.next = 29;\n              break;\n            }\n\n            instructionImg_url = \"/getInstructionImgURL/\";\n            instructionImg_config = {\n              method: 'POST',\n              data: instructionImgForm,\n              url: instructionImg_url\n            };\n            _context.next = 27;\n            return axios(instructionImg_config);\n\n          case 27:\n            response = _context.sent;\n            instructionImg_paths = response.data.instrutionImg_paths;\n\n          case 29:\n            //-------------to make instruction data ------------------------------------------\n            instructionGroupData = [];\n            n = -1;\n\n            for (i = 0; i < instructionGroupList.length; i++) {\n              image = null;\n\n              if (instructionGroupList[i].imgdata !== null && instructionGroupList[i].imgdata !== -1) {\n                n++;\n                image = instructionImg_paths[n];\n              } else if (instructionGroupList[i].imgdata === -1) {\n                image = instructionGroupList[i].image;\n              }\n\n              tmp = {\n                step: instructionGroupList[i].step,\n                image: image\n              };\n              instructionGroupData.push(tmp);\n            } //-------------to make new category data ------------------------------------------\n\n\n            new_categories = [];\n\n            for (i = 0; i < categoryList.length; i++) {\n              index = _this.categories.indexOf(categoryList[i]);\n              if (index === -1) new_categories.push(categoryList[i]);\n            }\n\n            suggestMealForm = new FormData();\n            suggestMealForm.append('id', selected_id);\n            suggestMealForm.append('mealLabel', mealLabel);\n            suggestMealForm.append('intro', intro);\n            suggestMealForm.append('servings', servings);\n            suggestMealForm.append('product_slider', JSON.stringify(product_slider));\n            suggestMealForm.append('formatted_ingredient', JSON.stringify(formatted_ingredient1));\n            suggestMealForm.append('instructionsGroupList', JSON.stringify(instructionGroupData));\n            suggestMealForm.append('ingredientStrings', ingredientStrings);\n            suggestMealForm.append('prepTime', prepTime);\n            suggestMealForm.append('cookTime', cookTime);\n            suggestMealForm.append('categoryChips', JSON.stringify(categoryList));\n            suggestMealForm.append('newCategories', JSON.stringify(new_categories));\n            suggestMealForm.append('imgSrc', imgSrc); // const ingredient_list = [];\n\n            if (_this.state.img_change_flag) {\n              suggestMealForm.append('img_change_flag', \"true\");\n              suggestMealForm.append('imgSrc', imgSrc);\n            } else {\n              suggestMealForm.set('img_change_flag', \"false\");\n            } // console.log(\"KKKKKKKKKKK: \", ingredientData);\n            // for(var i=0; i< ingredientData.length; i++)\n            // {\n            //   if(ingredientData[i].imgSrc==null){\n            //     ingredient_list.push(null);\n            //   }else{\n            //     ingredient_list.push({path_flag:ingredientData[i].path_flag,  path: ingredientData[i].path});\n            //     if(ingredientData[i].path_flag){\n            //       suggestMealForm.append('imgSrc', ingredientData[i].imgSrc);\n            //     } \n            //   }    \n            // }  \n            // suggestMealForm.append('ingredient_list', JSON.stringify(ingredient_list));\n\n\n            url = \"/updateSuggestItem\";\n            config = {\n              method: 'POST',\n              data: suggestMealForm,\n              url: url\n            };\n            _context.next = 53;\n            return axios(config);\n\n          case 53:\n            response = _context.sent;\n\n            if (!(response.status >= 200 && response.status < 300)) {\n              _context.next = 59;\n              break;\n            }\n\n            console.log(\"Updated Meal submitted successfully\");\n            return _context.abrupt(\"return\", window.location.href = \"/ViewSuggestedMeals\");\n\n          case 59:\n            console.log(\"Somthing happened wrong\");\n\n          case 60:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }));\n\n    this.onTextFieldChange = e => {\n      this.setState({\n        [e.target.id]: e.target.value\n      });\n    };\n\n    this.onTextFieldClick = event => {\n      this.setState({\n        imgSrc: event.target.files[0]\n      });\n\n      if (this.state.imgSrc !== null) {\n        this.setState({\n          loading_imgSrc: URL.createObjectURL(event.target.files[0])\n        });\n        this.setState({\n          img_change_flag: true\n        });\n      }\n    };\n\n    this.onhandleProductImg = event => {\n      this.setState({\n        productImgSrc: event.target.files[0]\n      });\n\n      if (event.target.files[0] !== null) {\n        this.setState({\n          productImg_path: URL.createObjectURL(event.target.files[0])\n        });\n      }\n    };\n\n    this.onHandleIngredientItem = ind => {\n      var array = this.state.ingredientStrings; // make a separate copy of the array\n\n      var array3 = this.state.ingredientGroupList;\n\n      if (ind !== -1) {\n        array.splice(ind, 1);\n        array3.splice(ind, 1);\n        this.setState({\n          ingredientStrings: array,\n          ingredientGroupList: array3\n        });\n      }\n    };\n\n    this.onHandleInstructionItem = ind => {\n      const array = this.state.instructionGroupList;\n      array.splice(ind, 1);\n      this.setState({\n        instructionGroupList: array\n      });\n    };\n\n    this.onUpdateIngredientImg = (event, ind) => {\n      // if (event.target.files[0] === null || this.state.ingredientData.length<= ind) return;\n      // const tmp_ingredientData = this.state.ingredientData;\n      // const tmp = {imgSrc:event.target.files[0], path_flag: true, path:URL.createObjectURL(event.target.files[0])}\n      // tmp_ingredientData[ind] = tmp;\n      // this.setState({ingredientData: tmp_ingredientData});\n      if (event.target.files[0] === null || this.state.ingredientGroupList.length <= ind) return;\n      const tmp_ingredientData = this.state.ingredientGroupList;\n      const tmp_ingredientItem = tmp_ingredientData[ind];\n      var tmp1 = {\n        product: tmp_ingredientItem.product,\n        quantity: tmp_ingredientItem.quantity,\n        measurement: tmp_ingredientItem.measurement,\n        productImgData: event.target.files[0],\n        productImgPath: URL.createObjectURL(event.target.files[0]),\n        flag: true\n      };\n      tmp_ingredientData[ind] = tmp1;\n      this.setState({\n        ingredientGroupList: tmp_ingredientData\n      });\n    };\n\n    this.onUpdateInstructionImg = (event, ind) => {\n      if (event.target.files[0] === null || this.state.instructionGroupList.length <= ind) return;\n      const tmp_instructionData = this.state.instructionGroupList;\n      const tmp_instructionItem = tmp_instructionData[ind];\n      let tmp = {\n        step: tmp_instructionItem.step,\n        imgdata: event.target.files[0],\n        image: URL.createObjectURL(event.target.files[0])\n      };\n      tmp_instructionData[ind] = tmp;\n      this.setState({\n        instructionGroupList: tmp_instructionData\n      });\n    };\n\n    this.handleIngredientDropdownChange = (event, value) => {\n      var array = this.products;\n      var index = array.indexOf(value);\n\n      if (index !== -1) {\n        this.setState({\n          product_ind: index\n        });\n      }\n\n      if (event.target.value) {\n        this.setState({\n          currentIngredient: event.target.value\n        });\n      } else {\n        this.setState({\n          currentIngredient: event.target.innerHTML\n        });\n      }\n    };\n\n    this.handleProductName = (event, val) => {\n      const searchResult = this.products.map(element => element.toLowerCase().includes(val.toLowerCase()));\n      const flag = searchResult.find(element => element === true);\n\n      if (flag !== true || flag === null) {\n        this.setState({\n          productImgSetting_flag: true\n        });\n        this.setState({\n          currentIngredient: val\n        });\n      } else {\n        this.setState({\n          productImgSetting_flag: false\n        });\n        this.setState({\n          currentIngredient: val\n        });\n      }\n    };\n\n    this.handleCategoryDropdownChange = val => {\n      this.setState({\n        categoryList: val\n      });\n    };\n\n    this.onhandleSendData = () => {\n      fetch(\"./api/send-mealData\", {\n        method: 'POST',\n        credentials: 'include',\n        headers: {\n          'Content-type': 'application/json'\n        },\n        body: JSON.stringify(this.state.selected)\n      }).then(response => {\n        console.log(response);\n\n        if (response.status === 200) {\n          return window.location.href = \"/ViewSuggestedMeals\";\n        }\n      }).catch(error => {\n        console.log(error);\n      });\n    };\n\n    this.handleChangePage = (event, newPage) => {\n      this.setState({\n        page: newPage\n      });\n    };\n\n    this.handleChangeRowsPerPage = event => {\n      this.setState({\n        page: 0\n      });\n      this.setState({\n        rowsPerPage: +event.target.value\n      });\n    };\n\n    this.handleDeleteMealItem = data => {\n      var url = \"./api/removeSeggestItem/\".concat(data._id);\n      fetch(url).then(res => {\n        return res.json();\n      }).then(response => {\n        console.log(\"Delets item\");\n        return window.location.href = \"/ViewSuggestedMeals\";\n      }).catch(err => {\n        console.log(\"unDelets item\");\n        console.log(err);\n      });\n    };\n\n    this.handleClickOpen = (data, mealRole) => {\n      console.log(\"data is :\");\n      console.log(data);\n      let parsed_instructionData = data.stepSlides;\n      const tmp_instructionData = [];\n      console.log(\"Parsed Step Instructions: \");\n      console.log(parsed_instructionData); // console.log(data.mealImage)\n\n      console.log(\"Trying to call image to display \"); //get meal image from gridfs\n      // var url = \"http://chopchowdev/getOneMongoFileImage/\"+data.mealImage;\n\n      let url = 'https://chopchowdev.herokuapp.com/getOneMongoFileImage/' + data.mealImageName;\n      this.setState({\n        imgSrc: url\n      }); // let stepData = this.getDataFromS3(parsed_instructionData[0].instructionChunk.dataName, 0);\n      //  let urldata = URL.createObjectURL(stepData);\n      // this.setState({ contentData: stepData });\n\n      console.log(\"Length of instruction data: \" + parsed_instructionData.length);\n\n      for (let i = 0; i < parsed_instructionData.length; i++) {\n        console.log(\"i : \" + i);\n        let instructionChunk = parsed_instructionData[i].instructionChunk; // console.log(\"instruction title is: \");\n        // console.log(instructionChunk.title);\n        // console.log(\"instruction chunk is: \");\n        // console.log(instructionChunk);\n        // let instructionSteps = instructionChunk['instructionSteps'];\n\n        let tmp = {\n          step: instructionChunk.instructionSteps,\n          title: instructionChunk.title,\n          dataName: instructionChunk.dataName\n        }; // this.getDataFromS3(tmp.dataName, i);\n\n        tmp_instructionData.push(tmp); // console.log(tmp);\n      }\n\n      this.setState({\n        selected_id: data._id,\n        instructionGroupList: tmp_instructionData,\n        suggestMealRole: mealRole,\n        mealLabel: data.mealName,\n        intro: data.intro,\n        servings: data.servings,\n        loading_imgSrc: data.mealImage,\n        formatted_ingredient: data.formatted_ingredient,\n        tips: data.tips\n      });\n      this.setState({\n        open: true\n      });\n      const last_ingredient = data.formatted_ingredient[data.formatted_ingredient.length - 1];\n      let parsed_categories = JSON.parse(data.categories);\n      this.setState({\n        currentIngredientMeasurement: last_ingredient.measurement,\n        currentIngredientQuantity: last_ingredient.quantity,\n        currentIngredient: last_ingredient.product\n      }); //   const reader = new FileReader();\n      // reader.onload = function(e) {\n      //     this.setState({imgSrc: reader.result})\n      // }\n      // reader.readAsDataURL(e.target.files[0]);\n      // reader.readAsDataURL(data.mealImage);\\\n      // find mealimage name in meal image and add image data to displayed image src\n      // let binaryMealimage = data.mealImage;\n      // console.log(binaryMealimage);\n      // let binaryImageToString = binaryMealimage.toString('base64');\n      // console.log(binaryImageToString);\n      // console.log('data:image/image/png;base64,'+binaryImageToString);\n      // url = 'data:image/image/png;base64,'+binaryImageToString;\n      // console.log(JSON.stringify(data.mealImage.data));\n\n      this.setState({\n        prepTime: data.prepTime,\n        cookTime: data.cookTime,\n        categoryList: parsed_categories,\n        product_slider: data.product_slider,\n        productImgSetting_flag: false\n      }); // const last_slider = data.product_slider[data.product_slider.length-1];\n      // this.setState({productImg_path: last_slider.image});\n\n      let temp = [];\n      let tmp_ingredientData = [];\n      let parsed_ingredients = JSON.parse(data.formatted_ingredient);\n\n      for (let i = 0; i < parsed_ingredients.length; i++) {\n        const last_ingredient = parsed_ingredients[i];\n        var properIngredientStringSyntax; // if (last_ingredient.quantity === 0) properIngredientStringSyntax = last_ingredient.product;\n        // else if (last_ingredient.measurement === null ) properIngredientStringSyntax =\"\" + last_ingredient.quantity + \" \" +  last_ingredient.product;\n        // else properIngredientStringSyntax =\"\" + last_ingredient.quantity + \" \" +  last_ingredient.measurement+\" of \" + last_ingredient.product;\n\n        temp.push(last_ingredient.properIngredientStringSyntax);\n        tmp_ingredientData.push(null);\n      }\n\n      this.setState({\n        ingredientStrings: temp\n      });\n      this.setState({\n        ingredientData: tmp_ingredientData\n      });\n    };\n\n    this.handleClose = () => {\n      this.setState({\n        open: false\n      });\n    };\n\n    this.onTextFieldChange = e => {\n      this.setState({\n        [e.target.id]: e.target.value\n      });\n    };\n\n    this.handleSelectAllClick = event => {\n      if (event.target.checked) {\n        const newSelecteds = this.state.mealData_list.map(n => n._id);\n        this.setState({\n          selected: newSelecteds\n        });\n        return;\n      }\n\n      this.setState({\n        selected: []\n      });\n    };\n\n    this.handleClick = (event, id) => {\n      const selected = this.state.selected;\n      const selectedIndex = selected.indexOf(id);\n      let newSelected = [];\n\n      if (selectedIndex === -1) {\n        newSelected = newSelected.concat(selected, id);\n      } else if (selectedIndex === 0) {\n        newSelected = newSelected.concat(selected.slice(1));\n      } else if (selectedIndex === selected.length - 1) {\n        newSelected = newSelected.concat(selected.slice(0, -1));\n      } else if (selectedIndex > 0) {\n        newSelected = newSelected.concat(selected.slice(0, selectedIndex), selected.slice(selectedIndex + 1));\n      }\n\n      this.setState({\n        selected: newSelected\n      });\n    };\n\n    this.state = {\n      mealLabel: \"\",\n      intro: \"\",\n      servings: 0,\n      // currentIngredient: \"Butter scotch\",\n      currentIngredient: \"\",\n      currentIngredientMeasurement: \"\",\n      currentIngredientQuantity: \"\",\n      ingredientStrings: [],\n      formatted_ingredient: [],\n      instructionsChip: [],\n      prepTime: \"0 mins read\",\n      cookTime: \"10 mins cook time\",\n      categoryChips: [\"snacks\", \"abc\", \"123\"],\n      productsPopulated: false,\n      img_change_flag: false,\n      selected_id: \"\",\n      mealData_list: [],\n      mealImages_list: [],\n      specificMealImage: \"\",\n      page: 0,\n      rowsPerPage: 10,\n      open: false,\n      suggestMealRole: \"\",\n      imgSrc: \"\",\n      loading_imgSrc: \"\",\n      productImgSetting_flag: null,\n      productImgSrc: null,\n      productImg_path: \"\",\n      product_ind: 0,\n      ingredientGroupList: [],\n      selected: [],\n      instructionGroupList: [],\n      instructionImgData: null,\n      instructionImgPath: \"\",\n      categoryList: [],\n      tips: \"\"\n    };\n    this.handleIngredientDropdownChange = this.handleIngredientDropdownChange.bind(this);\n    this.handleProductName = this.handleProductName.bind(this);\n    this.handleIngredientMeasurement = this.handleIngredientMeasurement.bind(this);\n    this.handleIngredientQuantity = this.handleIngredientQuantity.bind(this);\n    this.addIngredientToMeal = this.addIngredientToMeal.bind(this);\n  } ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n\n  componentDidMount() {\n    console.log(\"app Env files: \" + process.env.NODE_ENV);\n    console.log(\"app Env var of region: \" + process.env.REACT_APP_S3_REGION);\n    const const_region = process.env.REACT_APP_S3_REGION;\n    const const_id = process.env.REACT_APP_CHOPCHOWAPP_USER_AWS_KEY;\n    const const_secret = process.env.REACT_APP_CHOPCHOWAPP_USER_AWS_SECRET;\n    var url1 = \"/get-suggested-meals\";\n    axios.get(url1).then(body => {\n      var mealsList = body.data;\n\n      if (mealsList && mealsList.data.length !== 0) {\n        console.log(\"shows products does return\");\n        this.setState({\n          mealData_list: mealsList.data\n        });\n      } else {\n        console.log(\"shows products do not return\");\n      }\n\n      console.log(mealsList);\n    }).catch(err => {\n      console.log(err);\n    }); //----get category meals-------------------------\n\n    var url = \"/get-all-categories\";\n    axios.get(url).then(body => {\n      var categoryList = body.data;\n      console.log(categoryList);\n\n      if (categoryList && categoryList.data.length !== 0) {\n        console.log(\"returns GET of ALL Categories \");\n\n        for (var i = 0; i < categoryList.data.length; i++) {\n          this.categories.push(categoryList.data[i].category_name);\n        }\n\n        console.log(\"PRINTING UPDATED CATEGORIES LIST\");\n      } else {\n        console.log(\"get all products function does not return\");\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  } ///////////////////////////////////////////////////////////////////////////////////////\n\n\n  ////////////////////////////////////////////////////////////////////////////\n  handleAddIngredientChip(chip) {\n    let temp = this.state.ingredientStrings;\n    temp.push(chip);\n    this.setState({\n      ingredientStrings: temp\n    });\n  } ////////////////////////////////////////////////////////////////////////////\n\n\n  handleAddCategoryChip(chip) {\n    this.setState({\n      categoryChips: [...this.state.categoryChips, chip]\n    }); //\n  } ///////////////////////////////////////////////////////////////////////////////////////\n\n\n  handleAddInstructionStep(chip) {\n    this.setState({\n      instructionsChip: [...this.state.instructionsChip, chip]\n    });\n  } ///////////////////////////////////////////////////////////////////////////////////////\n\n\n  ////////////////////////////////////////////////////////////////////////////\n  handleDeleteIngredientChip(chip) {\n    var array = this.state.ingredientStrings; // make a separate copy of the array\n\n    var array3 = this.state.ingredientGroupList;\n    var index = array.indexOf(chip);\n\n    if (index !== -1) {\n      array.splice(index, 1);\n      array3.splice(index, 1);\n      this.setState({\n        ingredientStrings: array,\n        ingredientGroupList: array3\n      });\n    }\n  } ////////////////////////////////////////////////////////////////////////////\n\n\n  handleDeleteCategoryChip(chip, index) {\n    console.log(\"handleDeleteCategoryChip:\", index);\n  } // ////////////////////////////////////////////////////////////////////////////\n  // handleDeleteCategoryChip(chip) {\n  //   console.log(\"removing chop input\");\n  //   var array = [...this.state.categoryChips]; // make a separate copy of the array\n  //   var index = array.indexOf(chip);\n  //   if (index !== -1) {\n  //     array.splice(index, 1);\n  //     this.setState({ categoryChips: array });\n  //   }\n  // }\n  ////////////////////////////////////////////////////////////////////////////\n\n\n  handleDeleteInstructionsStep(chip) {\n    console.log(\"removing chop input\");\n    var array = [...this.state.instructionsChip]; // make a separate copy of the array\n\n    var index = array.indexOf(chip);\n\n    if (index !== -1) {\n      array.splice(index, 1);\n      this.setState({\n        instructionsChip: array\n      });\n    }\n  } ////////////////////////////////////////////////////////////////////////////\n\n\n  handleIngredientQuantity(event) {\n    console.log(event.target.value);\n    this.setState({\n      currentIngredientQuantity: event.target.value\n    });\n  } ////////////////////////////////////////////////////////////////////////////\n\n\n  ////////////////////////////////////////////////////////////////////////////\n  handleIngredientMeasurement(event) {\n    if (event.target.value) {\n      this.setState({\n        currentIngredientMeasurement: event.target.value\n      });\n    } else {\n      this.setState({\n        currentIngredientMeasurement: event.target.innerHTML\n      });\n    }\n  } ////////////////////////////////////////////////////////////////////////////\n\n\n  ////////////////////////////////////////////////////////////////////////////\n  addIngredientToMeal(event) {\n    event.preventDefault();\n    console.log(this.state.currentIngredientMeasurement);\n    var properIngredientStringSyntax;\n\n    if (document.getElementById(\"currentIngredient\").value === \"\") {\n      window.alert(\"Enter an ingredient to add to meal\");\n      return;\n    }\n\n    if (this.state.currentIngredientQuantity === 0) {\n      properIngredientStringSyntax = document.getElementById(\"currentIngredient\").value;\n    } else if (document.getElementById(\"currentIngredientMeasurement\").value === null) {\n      properIngredientStringSyntax = \"\" + this.state.currentIngredientQuantity + \" \" + document.getElementById(\"currentIngredient\").value;\n    } else {\n      properIngredientStringSyntax = \"\" + this.state.currentIngredientQuantity + \" \" + document.getElementById(\"currentIngredientMeasurement\").value + \" of \" + document.getElementById(\"currentIngredient\").value;\n    }\n\n    var currProductObject = {\n      product: this.state.currentIngredient,\n      quantity: this.state.currentIngredientQuantity,\n      measurement: this.state.currentIngredientMeasurement,\n      productImgData: this.state.productImgSrc,\n      productImgPath: null,\n      flag: this.state.productImgSetting_flag\n    };\n\n    if (this.state.productImgSetting_flag) {\n      currProductObject.productImgPath = this.state.productImg_path;\n      currProductObject.flag = true;\n    } else {\n      currProductObject.productImgPath = this.productsImg_path[this.state.product_ind];\n      currProductObject.flag = false;\n    }\n\n    this.handleAddIngredientChip(properIngredientStringSyntax); // if(this.state.productImgSetting_flag ){\n    //   const tmp_data = {imgSrc:this.state.productImgSrc, path_flag: true, path:\"\"}\n    //   this.setState({ ingredientData: [...this.state.ingredientData, tmp_data] });  \n    // }else{\n    //   const tmp_data = {imgSrc:[], path_flag: false, path:this.productsImg_path[this.state.product_ind]}\n    //   this.setState({ ingredientData: [...this.state.ingredientData, tmp_data] });\n    // }\n    // this.setState({ formatted_ingredient: [ ...this.state.formatted_ingredient, currIngredientObject, ], \n    //   productImg_path:null,\n    //   product_slider: [...this.state.product_slider, null],\n    // });\n\n    this.setState({\n      ingredientGroupList: [...this.state.ingredientGroupList, currProductObject]\n    });\n    this.setState({\n      productImgSrc: null,\n      productImg_path: \"\"\n    });\n  } ////////////////////////////////////////////////////////////////////////////\n\n\n  ////////////////////////////////////////////////////////////////////////////\n  render() {\n    console.log(\"this.state.instructionGroupList: \", this.state.instructionGroupList);\n    var comp_instructions = [];\n    var count_index = 1; // var urld_image = URL.createObjectURL(this.state.imgSrc);\n\n    for (let i = 0; i < this.state.instructionGroupList.length; i++) {\n      let content = \"\";\n\n      if (i !== 0) {\n        count_index += this.state.instructionGroupList[i - 1].step.length;\n      } // Allowing file type\n\n\n      var allowedImageExtensions = /(\\.jpg|\\.jpeg|\\.png|\\.)$/i;\n      var allowedVideoExtensions = /(\\.mp4|\\.m4v|\\.)$/i;\n      let instructionContent = '';\n\n      if (allowedVideoExtensions.exec(this.state.instructionGroupList[i].dataName)) {\n        instructionContent =\n        /*#__PURE__*/\n        React.createElement(\"video\", {\n          id: \"instructionVideo\" + i,\n          controls: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 847,\n            columnNumber: 30\n          }\n        },\n        /*#__PURE__*/\n        React.createElement(\"source\", {\n          src: 'https://meal-chunk-images-and-videos.s3.us-west-1.amazonaws.com/' + this.state.instructionGroupList[i].dataName,\n          type: this.state.instructionGroupList[i].mimetype,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 848,\n            columnNumber: 9\n          }\n        }));\n      } else if (allowedImageExtensions.exec(this.state.instructionGroupList[i].dataName)) {\n        instructionContent =\n        /*#__PURE__*/\n        React.createElement(\"img\", {\n          id: \"instructionImg\" + i,\n          src: 'https://meal-chunk-images-and-videos.s3.us-west-1.amazonaws.com/' + this.state.instructionGroupList[i].dataName,\n          alt: this.state.instructionGroupList[i].dataName,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 852,\n            columnNumber: 30\n          }\n        });\n      } else {\n        // use generic content\n        instructionContent =\n        /*#__PURE__*/\n        React.createElement(\"img\", {\n          id: \"instructionImg\" + i,\n          src: 'public/images/meal_pics/chopchow_default_instruction.png',\n          alt: \"chop chop image\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 856,\n            columnNumber: 30\n          }\n        });\n      }\n\n      comp_instructions.push(\n      /*#__PURE__*/\n      React.createElement(\"div\", {\n        key: i,\n        className: \"mb-3\",\n        style: {\n          margin: \"10px\",\n          padding: \"10px\",\n          backgroundColor: \"white\",\n          boxShadow: \"1px 1px 4px 2px #00000030\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 861,\n          columnNumber: 9\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(Row, {\n        style: {\n          justifyContent: \"flex-end\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 862,\n          columnNumber: 11\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(\"i\", {\n        className: \"fa fa-remove\",\n        style: {\n          fontSize: \"50%\",\n          marginTop: \"0px\",\n          marginRight: \"15px\"\n        },\n        onClick: () => this.onHandleInstructionItem(i),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 863,\n          columnNumber: 13\n        }\n      })),\n      /*#__PURE__*/\n      React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 865,\n          columnNumber: 11\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(Col, {\n        md: 4,\n        className: \"mb-2\",\n        style: {\n          overflowWrap: \"break-word\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 866,\n          columnNumber: 13\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(\"div\", {\n        className: \"mdc-list\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 867,\n          columnNumber: 15\n        }\n      }, this.state.instructionGroupList[i].step.map((chip, index1) =>\n      /*#__PURE__*/\n      React.createElement(\"div\", {\n        className: \"mdc-list-item\",\n        key: index1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 869,\n          columnNumber: 19\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(\"span\", {\n        className: \"mdc-list-item__text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 870,\n          columnNumber: 21\n        }\n      }, index1 + count_index, \".\",\n      /*#__PURE__*/\n      React.createElement(\"span\", {\n        className: \"mdc-list-item__text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 871,\n          columnNumber: 23\n        }\n      }, \" \", chip)))))),\n      /*#__PURE__*/\n      React.createElement(Col, {\n        md: 4,\n        className: \"mb-2\",\n        style: {\n          textAlign: \"center\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 877,\n          columnNumber: 13\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(\"img\", {\n        className: \"mb-2\",\n        src: this.state.instructionGroupList[i].imgpath,\n        width: \"auto\",\n        height: \"150px\",\n        alt: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 878,\n          columnNumber: 15\n        }\n      }),\n      /*#__PURE__*/\n      React.createElement(\"input\", {\n        accept: \"image/*\",\n        id: \"imgSrc1\",\n        type: \"file\",\n        className: \"mb-2, ml-3\",\n        value: this.state.mealImage,\n        onChange: ev => this.onUpdateInstructionImg(ev, i),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 879,\n          columnNumber: 15\n        }\n      })),\n      /*#__PURE__*/\n      React.createElement(Col, {\n        md: 4,\n        className: \"mb-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 881,\n          columnNumber: 13\n        }\n      })),\n      /*#__PURE__*/\n      React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 883,\n          columnNumber: 11\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 884,\n          columnNumber: 13\n        }\n      }), instructionContent)));\n    }\n\n    const classes = this.props.classes;\n    const _this$state = this.state,\n          mealData_list = _this$state.mealData_list,\n          page = _this$state.page,\n          rowsPerPage = _this$state.rowsPerPage,\n          open = _this$state.open,\n          suggestMealRole = _this$state.suggestMealRole,\n          loading_imgSrc = _this$state.loading_imgSrc,\n          categoryList = _this$state.categoryList,\n          imgSrc = _this$state.imgSrc;\n    const _this$state2 = this.state,\n          mealLabel = _this$state2.mealLabel,\n          intro = _this$state2.intro,\n          currentIngredient = _this$state2.currentIngredient,\n          currentIngredientQuantity = _this$state2.currentIngredientQuantity,\n          currentIngredientMeasurement = _this$state2.currentIngredientMeasurement,\n          prepTime = _this$state2.prepTime,\n          cookTime = _this$state2.cookTime,\n          servings = _this$state2.servings;\n    const theme = createMuiTheme({\n      palette: {\n        primary: green\n      }\n    });\n    const numSelected = this.state.selected.length;\n    const rowCount = mealData_list ? mealData_list.length : 0;\n    return (\n      /*#__PURE__*/\n      React.createElement(\"div\", {\n        className: classes.root,\n        style: {\n          boxShadow: \"2px 2px 8px 0px #a0a0a0\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 911,\n          columnNumber: 7\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(Toolbar, {\n        className: clsx(classes.root, {\n          [classes.highlight]: numSelected > 0\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 912,\n          columnNumber: 9\n        }\n      }, numSelected > 0 ?\n      /*#__PURE__*/\n      React.createElement(Typography, {\n        className: classes.title,\n        color: \"inherit\",\n        variant: \"subtitle1\",\n        component: \"div\",\n        style: {\n          fontSize: \"16px\",\n          fontWeight: \"600\",\n          marginRight: \"20px\",\n          color: \"blue\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 914,\n          columnNumber: 14\n        }\n      }, \" \", numSelected, \" selected\") :\n      /*#__PURE__*/\n      React.createElement(Typography, {\n        className: classes.title,\n        variant: \"h6\",\n        id: \"tableTitle\",\n        component: \"div\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 915,\n          columnNumber: 16\n        }\n      }, \"None Selected  \"), numSelected > 0 ?\n      /*#__PURE__*/\n      React.createElement(Button, {\n        variant: \"outlined\",\n        color: \"primary\",\n        endIcon:\n        /*#__PURE__*/\n        React.createElement(SendIcon, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 917,\n            columnNumber: 83\n          }\n        }),\n        onClick: this.onhandleSendData,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 917,\n          columnNumber: 31\n        }\n      }, \"Send\") : null),\n      /*#__PURE__*/\n      React.createElement(TableContainer, {\n        className: classes.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 919,\n          columnNumber: 9\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(Table, {\n        stickyHeader: true,\n        \"aria-label\": \"sticky table\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 920,\n          columnNumber: 11\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(TableHead, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 921,\n          columnNumber: 13\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(TableRow, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 922,\n          columnNumber: 15\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(TableCell, {\n        padding: \"checkbox\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 923,\n          columnNumber: 17\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(Checkbox, {\n        indeterminate: numSelected > 0 && numSelected < rowCount,\n        checked: rowCount > 0 && numSelected === rowCount,\n        onChange: this.handleSelectAllClick,\n        inputProps: {\n          'aria-label': 'select all desserts'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 924,\n          columnNumber: 19\n        }\n      })), columns.map(column =>\n      /*#__PURE__*/\n      React.createElement(TableCell, {\n        key: column.id,\n        align: column.align,\n        style: {\n          minWidth: column.minWidth,\n          fontSize: '15x',\n          fontWeight: '600',\n          padding: '10px 5px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 933,\n          columnNumber: 19\n        }\n      }, column.label)))),\n      /*#__PURE__*/\n      React.createElement(TableBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 943,\n          columnNumber: 13\n        }\n      }, mealData_list && mealData_list.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => {\n        const isSelected = id => this.state.selected.indexOf(id) !== -1;\n\n        const isItemSelected = isSelected(row._id);\n        const labelId = \"enhanced-table-checkbox-\".concat(index);\n        return (\n          /*#__PURE__*/\n          React.createElement(TableRow, {\n            hover: true,\n            onClick: event => this.handleClick(event, row._id),\n            role: \"checkbox\",\n            \"aria-checked\": isItemSelected,\n            tabIndex: -1,\n            key: row._id,\n            selected: isItemSelected,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 951,\n              columnNumber: 21\n            }\n          },\n          /*#__PURE__*/\n          React.createElement(TableCell, {\n            padding: \"checkbox\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 960,\n              columnNumber: 23\n            }\n          },\n          /*#__PURE__*/\n          React.createElement(Checkbox, {\n            checked: isItemSelected,\n            inputProps: {\n              'aria-labelledby': labelId\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 961,\n              columnNumber: 25\n            }\n          })), columns.map(column => {\n            if (column.id === \"active\") {\n              return (\n                /*#__PURE__*/\n                React.createElement(TableCell, {\n                  key: column.id,\n                  style: {\n                    padding: '0px 0px'\n                  },\n                  __self: this,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 970,\n                    columnNumber: 29\n                  }\n                },\n                /*#__PURE__*/\n                React.createElement(LightTooltip, {\n                  title: \"  View  \",\n                  placement: \"top\",\n                  __self: this,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 971,\n                    columnNumber: 31\n                  }\n                },\n                /*#__PURE__*/\n                React.createElement(IconButton, {\n                  color: \"primary\",\n                  \"aria-label\": \"upload picture\",\n                  component: \"span\",\n                  onClick: () => this.handleClickOpen(row, \"moreView\"),\n                  __self: this,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 972,\n                    columnNumber: 33\n                  }\n                },\n                /*#__PURE__*/\n                React.createElement(VisibilityIcon, {\n                  __self: this,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 973,\n                    columnNumber: 35\n                  }\n                }))),\n                /*#__PURE__*/\n                React.createElement(LightTooltip, {\n                  title: \"  Update  \",\n                  placement: \"top\",\n                  __self: this,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 977,\n                    columnNumber: 31\n                  }\n                },\n                /*#__PURE__*/\n                React.createElement(IconButton, {\n                  color: \"primary\",\n                  \"aria-label\": \"upload picture\",\n                  component: \"span\",\n                  onClick: () => this.updateSuggestItem(row, \"edit\"),\n                  __self: this,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 978,\n                    columnNumber: 33\n                  }\n                },\n                /*#__PURE__*/\n                React.createElement(EditIcon, {\n                  style: {\n                    color: 'green'\n                  },\n                  __self: this,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 979,\n                    columnNumber: 35\n                  }\n                }))),\n                /*#__PURE__*/\n                React.createElement(LightTooltip, {\n                  title: \"  Delete  \",\n                  placement: \"top\",\n                  __self: this,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 983,\n                    columnNumber: 31\n                  }\n                },\n                /*#__PURE__*/\n                React.createElement(IconButton, {\n                  color: \"secondary\",\n                  \"aria-label\": \"upload picture\",\n                  component: \"span\",\n                  onClick: () => this.handleDeleteMealItem(row),\n                  __self: this,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 984,\n                    columnNumber: 33\n                  }\n                },\n                /*#__PURE__*/\n                React.createElement(DeleteIcon, {\n                  __self: this,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 985,\n                    columnNumber: 35\n                  }\n                }))))\n              );\n            } else {\n              const value = row[column.id];\n              return (\n                /*#__PURE__*/\n                React.createElement(TableCell, {\n                  key: column.id,\n                  style: {\n                    padding: '5px 5px'\n                  },\n                  __self: this,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 991,\n                    columnNumber: 70\n                  }\n                }, value)\n              );\n            }\n          }))\n        );\n      })))),\n      /*#__PURE__*/\n      React.createElement(TablePagination, {\n        rowsPerPageOptions: [10, 25, 100],\n        component: \"div\",\n        count: rowCount,\n        rowsPerPage: rowsPerPage,\n        page: page,\n        onChangePage: this.handleChangePage,\n        onChangeRowsPerPage: this.handleChangeRowsPerPage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1000,\n          columnNumber: 9\n        }\n      }),\n      /*#__PURE__*/\n      React.createElement(Dialog, {\n        open: open,\n        onClose: this.handleClose,\n        \"aria-labelledby\": \"alert-dialog-title\",\n        \"aria-describedby\": \"alert-dialog-description\",\n        maxWidth: \"lg\",\n        fullWidth: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1010,\n          columnNumber: 9\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(DialogTitle, {\n        id: \"alert-dialog-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1018,\n          columnNumber: 11\n        }\n      }, suggestMealRole === \"moreView\" ? \"Suggest Meal\" : \"Update Meal\"),\n      /*#__PURE__*/\n      React.createElement(DialogContent, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1019,\n          columnNumber: 11\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(\"form\", {\n        noValidate: true,\n        autoComplete: \"off\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1020,\n          columnNumber: 13\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(Row, {\n        className: \"mb-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1021,\n          columnNumber: 15\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(Col, {\n        md: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1022,\n          columnNumber: 17\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(TextField, {\n        id: \"mealLabel\",\n        fullWidth: true,\n        onChange: this.onTextFieldChange,\n        label: \"Meal Name\",\n        required: true,\n        variant: \"filled\",\n        className: \"mb-3\",\n        value: mealLabel,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1023,\n          columnNumber: 19\n        }\n      }),\n      /*#__PURE__*/\n      React.createElement(TextField, {\n        multiline: true,\n        id: \"intro\",\n        fullWidth: true,\n        onChange: this.onTextFieldChange,\n        label: \"Intro\",\n        variant: \"filled\",\n        className: \"mb-3\",\n        value: intro,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1024,\n          columnNumber: 19\n        }\n      })),\n      /*#__PURE__*/\n      React.createElement(Col, {\n        md: 4,\n        style: {\n          marginTop: \"20px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1026,\n          columnNumber: 17\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(\"input\", {\n        accept: \"image/*\",\n        id: \"imgSrc\",\n        type: \"file\",\n        className: \"mb-2 pr-4\",\n        onChange: ev => this.onTextFieldClick(ev),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1027,\n          columnNumber: 19\n        }\n      }),\n      /*#__PURE__*/\n      React.createElement(\"img\", {\n        src: imgSrc,\n        width: \"100%\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1028,\n          columnNumber: 19\n        }\n      })),\n      /*#__PURE__*/\n      React.createElement(Col, {\n        md: 4,\n        style: {\n          marginTop: \"20px\",\n          textAlign: \"center\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1030,\n          columnNumber: 17\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(\"img\", {\n        src: loading_imgSrc,\n        width: \"70%\",\n        height: \"auto\",\n        alt: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1031,\n          columnNumber: 19\n        }\n      }))),\n      /*#__PURE__*/\n      React.createElement(\"hr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1036,\n          columnNumber: 15\n        }\n      }),\n      /*#__PURE__*/\n      React.createElement(Row, {\n        className: \"mb-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1037,\n          columnNumber: 15\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(Col, {\n        md: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1038,\n          columnNumber: 17\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(ChipInput, {\n        label: \"IngredientsList\",\n        value: this.state.ingredientStrings,\n        onAdd: chip => this.handleAddIngredientChip(chip),\n        placeholder: \"e.g 1 Onion, 2 Cups of Water, etc\",\n        onDelete: (chip, index) => this.handleDeleteIngredientChip(chip, index),\n        variant: \"filled\",\n        fullWidth: true,\n        className: \"mb-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1039,\n          columnNumber: 19\n        }\n      }))), this.state.ingredientGroupList && this.state.ingredientGroupList.map((data, index) =>\n      /*#__PURE__*/\n      React.createElement(\"div\", {\n        key: index,\n        className: \"mb-3\",\n        style: {\n          margin: \"10px\",\n          padding: \"10px\",\n          backgroundColor: \"white\",\n          boxShadow: \"1px 1px 4px 2px #00000030\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1055,\n          columnNumber: 19\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(Row, {\n        style: {\n          justifyContent: \"flex-end\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1056,\n          columnNumber: 21\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(\"i\", {\n        className: \"fa fa-remove\",\n        style: {\n          fontSize: \"50%\",\n          marginTop: \"0px\",\n          marginRight: \"15px\"\n        },\n        onClick: () => this.onHandleIngredientItem(index),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1057,\n          columnNumber: 23\n        }\n      })),\n      /*#__PURE__*/\n      React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1059,\n          columnNumber: 21\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(Col, {\n        md: 5,\n        className: \"mb-2\",\n        style: {\n          overflowWrap: \"break-word\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1060,\n          columnNumber: 23\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(\"div\", {\n        className: \"card-ingredient-content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1061,\n          columnNumber: 25\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1062,\n          columnNumber: 27\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(\"span\", {\n        style: {\n          fontWeight: \"600\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1062,\n          columnNumber: 32\n        }\n      }, \"1. Product \\u2003\\u2003\\xA0 :\"), \" \", data.product),\n      /*#__PURE__*/\n      React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1063,\n          columnNumber: 27\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(\"span\", {\n        style: {\n          fontWeight: \"600\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1063,\n          columnNumber: 32\n        }\n      }, \"2. Quantity\\u2003\\u2003 :\"), \" \", data.quantity),\n      /*#__PURE__*/\n      React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1064,\n          columnNumber: 27\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(\"span\", {\n        style: {\n          fontWeight: \"600\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1064,\n          columnNumber: 32\n        }\n      }, \"3. Measurement:\"), \" \", data.measurement),\n      /*#__PURE__*/\n      React.createElement(\"input\", {\n        accept: \"image/*\",\n        id: \"imgSrc1\",\n        type: \"file\",\n        className: \"mb-2 ml-3 mt-3 \",\n        onChange: ev => this.onUpdateIngredientImg(ev, index),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1066,\n          columnNumber: 27\n        }\n      }))),\n      /*#__PURE__*/\n      React.createElement(Col, {\n        md: 4,\n        className: \"mb-2\",\n        style: {\n          textAlign: \"center\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1069,\n          columnNumber: 23\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(\"img\", {\n        className: \"mb-2\",\n        src: data.productImgPath,\n        width: \"auto\",\n        height: \"150px\",\n        alt: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1070,\n          columnNumber: 25\n        }\n      })),\n      /*#__PURE__*/\n      React.createElement(Col, {\n        md: 3,\n        className: \"mb-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1073,\n          columnNumber: 23\n        }\n      })))),\n      /*#__PURE__*/\n      React.createElement(Row, {\n        className: \"mb-1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1079,\n          columnNumber: 15\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(Col, {\n        md: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1080,\n          columnNumber: 17\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(Autocomplete, {\n        id: \"currentIngredient\",\n        options: this.products.map(option => option),\n        onChange: (ev, val) => this.handleIngredientDropdownChange(ev, val),\n        onInputChange: (ev, val) => this.handleProductName(ev, val),\n        freeSolo: true,\n        renderInput: params =>\n        /*#__PURE__*/\n        React.createElement(TextField, Object.assign({}, params, {\n          label: \"Ingredient..\",\n          variant: \"filled\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1087,\n            columnNumber: 47\n          }\n        })),\n        fullWidth: true,\n        className: \"mb-3\",\n        value: currentIngredient,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1081,\n          columnNumber: 19\n        }\n      }),\n      /*#__PURE__*/\n      React.createElement(TextField, {\n        fullWidth: true,\n        id: \"currentIngredientQuantity\",\n        type: \"number\",\n        onChange: this.onTextFieldChange,\n        label: \"Quantity\",\n        variant: \"filled\",\n        placeholder: \"1..\",\n        className: \"mb-3\",\n        value: currentIngredientQuantity,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1092,\n          columnNumber: 19\n        }\n      })),\n      /*#__PURE__*/\n      React.createElement(Col, {\n        md: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1095,\n          columnNumber: 17\n        }\n      }, this.state.productImgSetting_flag ?\n      /*#__PURE__*/\n      React.createElement(\"input\", {\n        accept: \"image/*\",\n        id: \"imgSrc1\",\n        type: \"file\",\n        className: \"mt-3 mb-4\",\n        onChange: ev => this.onhandleProductImg(ev),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1098,\n          columnNumber: 23\n        }\n      }) :\n      /*#__PURE__*/\n      React.createElement(\"div\", {\n        style: {\n          marginTop: \"70px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1098,\n          columnNumber: 146\n        }\n      }),\n      /*#__PURE__*/\n      React.createElement(Autocomplete, {\n        id: \"currentIngredientMeasurement\",\n        options: this.measurements.map(option => option),\n        value: currentIngredientMeasurement,\n        onChange: this.handleIngredientMeasurement,\n        freeSolo: true,\n        renderInput: params =>\n        /*#__PURE__*/\n        React.createElement(TextField, Object.assign({}, params, {\n          label: \"Measurement..\",\n          variant: \"filled\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1107,\n            columnNumber: 47\n          }\n        })),\n        className: \"mb-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1101,\n          columnNumber: 19\n        }\n      })),\n      /*#__PURE__*/\n      React.createElement(Col, {\n        md: 4,\n        style: {\n          textAlign: \"center\",\n          margin: \"auto\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1112,\n          columnNumber: 17\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        disableRipple: true,\n        onClick: this.addIngredientToMeal,\n        style: {\n          color: \"white\"\n        },\n        className: \"mb-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1113,\n          columnNumber: 19\n        }\n      }, \" Add Ingredient\"))),\n      /*#__PURE__*/\n      React.createElement(Row, {\n        className: \"mb-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1116,\n          columnNumber: 15\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(Col, {\n        md: 4,\n        style: {\n          textAlign: \"center\",\n          margin: \"auto\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1117,\n          columnNumber: 17\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(TextField, {\n        id: \"servings\",\n        fullWidth: true,\n        type: \"number\",\n        onChange: this.onTextFieldChange,\n        label: \"Servings\",\n        variant: \"filled\",\n        className: \"mb-2\",\n        placeholder: \"1 person, 2, 4 or 10 people\",\n        style: {\n          marginTop: \"10px\"\n        },\n        value: servings,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1118,\n          columnNumber: 19\n        }\n      })),\n      /*#__PURE__*/\n      React.createElement(Col, {\n        md: 4,\n        style: {\n          textAlign: \"center\",\n          margin: \"auto\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1120,\n          columnNumber: 17\n        }\n      }, \" \"),\n      /*#__PURE__*/\n      React.createElement(Col, {\n        md: 4,\n        style: {\n          textAlign: \"center\",\n          margin: \"auto\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1121,\n          columnNumber: 17\n        }\n      }, \" \")),\n      /*#__PURE__*/\n      React.createElement(\"hr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1123,\n          columnNumber: 15\n        }\n      }), comp_instructions // this.state.instructionGroupList.length > 0 &&\n      // this.state.instructionGroupList.map((data, index)=>(\n      //   <div key={index}  className=\"mb-3\" style={{margin:\"10px\", padding:\"10px\", backgroundColor:\"white\",  boxShadow: \"1px 1px 4px 2px #00000030\"}}>\n      //     <Row style={{justifyContent: \"flex-end\"}}> \n      //       <i className=\"fa fa-remove\" style={{fontSize:\"50%\", marginTop: \"0px\", marginRight: \"15px\"}} onClick={()=>this.onHandleInstructionItem(index)}></i>\n      //     </Row>                        \n      //     <Row >\n      //       <Col md={4}  className=\"mb-2\" style={{overflowWrap: \"break-word\"}}>\n      //         <ol className=\"mdc-list\">\n      //           {data.step.map((chip, index1) => (\n      //             <li className=\"mdc-list-item\" tabIndex=\"0\" key={index1}>\n      //               <span className=\"mdc-list-item__text\">{chip}</span>\n      //             </li>\n      //           ))}\n      //         </ol>\n      //       </Col>\n      //       <Col md={4}  className=\"mb-2\" style={{textAlign: \"center\"}}>\n      //         <img className=\"mb-2\" src={data.image} width=\"auto\" height=\"150px\" alt=\"\"/>\n      //         <input accept=\"image/*\" id=\"imgSrc1\" type=\"file\" className=\"mb-2, ml-3\" onChange={(ev)=>this.onUpdateInstructionImg(ev, index)} />\n      //       </Col>\n      //       <Col md={4}  className=\"mb-2\"></Col>\n      //     </Row>\n      //   </div>\n      // ))\n      ,\n      /*#__PURE__*/\n      React.createElement(Row, {\n        className: \"mb-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1153,\n          columnNumber: 15\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(Col, {\n        md: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1154,\n          columnNumber: 17\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(ChipInput, {\n        label: \"Instructions\",\n        className: \"mb-2\",\n        fullWidth: true,\n        value: this.state.instructionsChip,\n        onAdd: chip => this.handleAddInstructionStep(chip),\n        onDelete: (chip, index) => this.handleDeleteInstructionsStep(chip, index),\n        variant: \"filled\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1155,\n          columnNumber: 19\n        }\n      }))),\n      /*#__PURE__*/\n      React.createElement(Row, {\n        className: \"mb-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1158,\n          columnNumber: 15\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(Col, {\n        md: 4,\n        className: \"mb-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1159,\n          columnNumber: 17\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(\"input\", {\n        accept: \"image/*\",\n        id: \"imgSrc1\",\n        type: \"file\",\n        className: \"mb-2\",\n        onChange: ev => this.onhandleInstructionImg(ev),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1160,\n          columnNumber: 19\n        }\n      })),\n      /*#__PURE__*/\n      React.createElement(Col, {\n        md: 4,\n        style: {\n          textAlign: \"center\",\n          margin: \"auto\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1162,\n          columnNumber: 17\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        disableRipple: true,\n        style: {\n          color: \"white\",\n          width: \"300px\"\n        },\n        className: \"mb-3\",\n        onClick: this.addInstructionList,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1163,\n          columnNumber: 19\n        }\n      }, \" ADD NEW INSTRUCTION SET\")),\n      /*#__PURE__*/\n      React.createElement(Col, {\n        md: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1165,\n          columnNumber: 17\n        }\n      }, \" \")),\n      /*#__PURE__*/\n      React.createElement(Row, {\n        className: \"mb-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1168,\n          columnNumber: 15\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(Col, {\n        md: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1169,\n          columnNumber: 17\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(TextField, {\n        id: \"prepTime\",\n        className: \"mb-2\",\n        type: \"number\",\n        fullWidth: true,\n        onChange: this.onTextFieldChange,\n        label: \"prepTime (mins)\",\n        variant: \"filled\",\n        required: true,\n        value: prepTime,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1170,\n          columnNumber: 19\n        }\n      })),\n      /*#__PURE__*/\n      React.createElement(Col, {\n        md: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1172,\n          columnNumber: 17\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(TextField, {\n        id: \"cookTime\",\n        className: \"mb-2\",\n        type: \"number\",\n        fullWidth: true,\n        onChange: this.onTextFieldChange,\n        label: \"CookTime (mins)\",\n        variant: \"filled\",\n        required: true,\n        value: cookTime,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1173,\n          columnNumber: 19\n        }\n      })),\n      /*#__PURE__*/\n      React.createElement(Col, {\n        md: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1175,\n          columnNumber: 17\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(Autocomplete, {\n        multiple: true,\n        id: \"tags-standard\",\n        className: \"mb-2\",\n        freeSolo: true // filterSelectedOptions\n        ,\n        options: this.categories.map(option => option) // onChange={(ev,val)=>this.handleCategoryDropdownChange(ev,val)}\n        ,\n        onChange: (e, newValue) => this.handleCategoryDropdownChange(newValue) // getOptionLabel={option => option}\n        // renderTags={() => {}}\n        ,\n        value: categoryList,\n        renderInput: params =>\n        /*#__PURE__*/\n        React.createElement(TextField, Object.assign({}, params, {\n          variant: \"filled\",\n          label: \"Categories\",\n          placeholder: \"Suggest categories for this meal..\",\n          fullWidth: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1203,\n            columnNumber: 23\n          }\n        })),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1190,\n          columnNumber: 19\n        }\n      }))), suggestMealRole !== \"moreView\" &&\n      /*#__PURE__*/\n      React.createElement(Row, {\n        className: \"mb-5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1216,\n          columnNumber: 17\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(Col, {\n        md: 4,\n        style: {\n          textAlign: \"center\",\n          margin: \"auto\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1217,\n          columnNumber: 19\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(ThemeProvider, {\n        theme: theme,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1218,\n          columnNumber: 21\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(Button, {\n        variant: \"contained\",\n        className: \"mb-2\",\n        color: \"primary\",\n        size: \"small\",\n        style: {\n          color: \"white\"\n        },\n        onClick: () => this.handleUpdateSubmit(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1219,\n          columnNumber: 23\n        }\n      }, \" Update Meal\")))),\n      /*#__PURE__*/\n      React.createElement(Row, {\n        className: \"mb-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1224,\n          columnNumber: 15\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(Col, {\n        md: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1225,\n          columnNumber: 17\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(ChipInput, {\n        label: \"Tips\",\n        className: \"mb-2\",\n        fullWidth: true,\n        value: this.state.tips,\n        variant: \"filled\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1226,\n          columnNumber: 19\n        }\n      })))))))\n    );\n  }\n\n}\n\nexport default withStyles(styles)(ViewSuggestedMeals); ///////////////////////////////////////////////////////////////////////////////\n// getDataFromS3 = (fileName, index) => {\n// console.log(\"clients gets3 func,\\n i is: \" + index + \" file name is: \" + fileName);\n// if (fileName) {\n// let url = 'http://localhost:5000/api/getFromS3/' + fileName;\n// fetch(url, {\n//   method: 'GET',\n// }).then(response => {\n//   console.log(response)\n//   if (response.status === 200) {\n//     console.log(\"content returned to be displayed on client\");\n//     console.log(response.body);\n//     // console.log(response.blob);\n//     const responseBody = response.body;\n//     let binaryImageToString = responseBody.toString('base64');\n//     console.log(binaryImageToString);\n//     console.log('data:image/image/png;base64,' + binaryImageToString);\n// let imgUrl = 'data:image/image/png;base64,' + binaryImageToString;\n// let imgUrl = 'https://meal-chunk-images-and-videos.s3.us-west-1.amazonaws.com/'+fileName;\n// this.setState({ contentData: imgUrl });\n// return response;\n// return (window.location.href = \"/ViewSuggestedMeals\");\n//   }\n// })\n//   .catch(error => {\n//     console.log(\"no content returned.. file not found ?\");\n//     console.log(error);\n//   });\n// axios.get(url).then(body => {\n//   console.log(\"Returns content\");\n//   var content = body.data;\n//   // console.log(content);\n//   if (content) {\n//     console.log(\"content returned to be displayed on client\");\n//     // this.setState({ contentData:content });\n//     return content;\n//   }\n//   else { console.log(\"no content returned.. file not found ?\"); }\n// }).catch(err => { console.log(err); });\n// }\n// else {\n// No content available to display\n// }\n// // Create an object and upload it to the Amazon S3 bucket.\n// const input = {\n//   Bucket: process.env.REACT_APP_S3_BUCKET, // The name of the bucket. For example, 'sample_bucket_101'.\n//   Key: fileName // The name of the object.\n// };\n// const run = async (input) => {\n//   console.log(\"input: \");\n//   console.log(input);\n//   try {\n//     console.log(client);\n//     // Create a helper function to convert a ReadableStream to a string.\n//     const streamToString = (stream) =>\n//       new Promise((resolve, reject) => {\n//         const chunks = [];\n//         stream.on(\"data\", (chunk) => chunks.push(chunk));\n//         stream.on(\"error\", reject);\n//         stream.on(\"end\", () => resolve(Buffer.concat(chunks).toString(\"utf8\")));\n//         // console.log(chunks);\n//       });\n//     // const client = new S3Client(config);\n//     const command = new GetObjectCommand(input);\n//     const data = await client.send(command);\n//     console.log(data);\n//     // return false;\n//   } catch (err) {\n//     // console.log(client)\n//     console.log(\"Error\", err);\n//   };\n// };\n// if (input.Key !== '') {\n//   run(input);\n// }\n// else {\n//   console.log(\"No  content in instructions group list to check\");\n// }\n// }\n// var url = \"/get-all-products\";\n// axios.get(url)\n//   .then((body) => {\n//     var productsList = body.data;\n//     if (productsList && productsList.data.length !== 0) {\n//       console.log(\"returns GET ALL PRODUCTS \");\n//       for (var i = 0; i < productsList.data.length; i++) {\n//         this.productsImg_path.push(productsList.data[i].product_image);\n//       }\n//       console.log(\"PRINTING ALL PRODUCTS LIST\", this.products);\n//       this.setState({ productsPopulated: true });\n//     } else { console.log(\"get all products function does not return\"); }\n//   })\n//   .catch((err) => { console.log(err); });\n// get suggested meal images ?\n// var url = \"/get-suggested-meals-images\"\n// axios.get(url).then(body => {\n//   var mealImagesList = body.data;\n//   if (mealImagesList && mealImagesList.data.length !== 0) {\n//     console.log(\"meal images does return\");\n//     this.setState({ mealImages_list: mealImagesList.data });\n//   }\n//   else { console.log(\"meal images do not return\"); }\n//   console.log(mealImagesList);\n// }).catch(err => { console.log(err); });\n// this.setState({open: true});\n// this.setState({ suggestMealRole: mealRole, mealLabel: data.label, intro: data.intro, servings: data.servings, formatted_ingredient:data.formatted_ingredient   });\n// const last_ingredient = data.formatted_ingredient[data.formatted_ingredient.length-1];\n// this.setState({ currentIngredientMeasurement: last_ingredient.measurement, currentIngredientQuantity: last_ingredient.quantity, currentIngredient: last_ingredient.product });\n// this.setState({ instructionsChip:  data.instructions, prepTime:  data.prepTime, cookTime:  data.cookTime, loading_imgSrc:  data.mealImage, product_slider:  data.product_slider});\n// const last_slider = data.product_slider[data.product_slider.length-1];\n// if(!last_slider.flag) {\n//   this.setState({productImg_path: \"public/products/\"+last_slider.image});\n// }else{\n//   this.setState({productImg_path: last_slider.image});\n// }\n// this.setState({productImgSetting_flag: false});\n// let temp = [];\n// for(let i=0; i<data.formatted_ingredient.length; i++)\n// {\n//   const last_ingredient = data.formatted_ingredient[i];\n//   var properIngredientStringSyntax;\n//   if (last_ingredient.quantity === 0) {\n//     properIngredientStringSyntax = last_ingredient.product;\n//   }\n//   else if (last_ingredient.measurement === null )\n//   {\n//     properIngredientStringSyntax =\"\" + last_ingredient.quantity + \" \" +  last_ingredient.product;\n//   }\n//   else {\n//     properIngredientStringSyntax =\"\" + last_ingredient.quantity + \" \" +  last_ingredient.measurement+\" of \" + last_ingredient.product;\n//   }\n//   temp.push(properIngredientStringSyntax);\n// }\n// this.setState({ ingredientStrings: temp });\n// axios call to get meal image from gridfs\n// we determined that we should instead make the call inside of the image url src rather than referencing call in src\n// axios.get(url).then((body) => {\n//   mealImage = body;\n//   if (mealImage && mealImage.data.length !== 0) {\n//     console.log(\"returns specific meal image  \");\n//     console.log(mealImage);\n//     console.log(mealImage.data);\n//     let mealImageData = mealImage.data;\n//     let binaryImageToString = mealImageData.toString('base64');\n//     let url = 'http://localhost:5000/getOneMongoFileImage/'+data.mealImage;\n//     this.setState({imgSrc: url})\n//     // for (var i = 0; i < mealImage.data.length; i++) {\n//     //   this.setState({specificMealImage: mealImage.data[i]})\n//     //   // this.specificMealImage = mealImage.data[i];\n//     // }\n//   } else {\n//     console.log(\"get specific meal image function does not return\");\n//   }\n// })\n//   .catch((err) => {\n//     console.log(err);\n//   });","map":{"version":3,"sources":["/home/chuka/joe/ChopChowSD/client/src/components/ViewSuggestedMeals.js"],"names":["React","Component","Table","TableBody","TableCell","TableContainer","TableHead","TablePagination","TableRow","Checkbox","Typography","Toolbar","Dialog","DialogContent","DialogTitle","Button","IconButton","TextField","clsx","EditIcon","DeleteIcon","VisibilityIcon","SendIcon","ChipInput","Autocomplete","createMuiTheme","withStyles","ThemeProvider","green","axios","Row","Col","Tooltip","columns","id","label","minWidth","minWi859dth","styles","theme","button","margin","spacing","unit","leftIcon","marginRight","rightIcon","marginLeft","iconSmall","fontSize","root","width","marginTop","container","maxHeight","LightTooltip","tooltip","backgroundColor","color","boxShadow","shadows","ViewSuggestedMeals","constructor","props","products","productsImg_path","categories","measurements","addInstructionList","state","instructionsChip","length","tmp","step","imgdata","instructionImgData","image","instructionImgPath","setState","instructionGroupList","updateSuggestItem","data","mealRole","instructionData","instructions","tmp_instructionData","i","push","categoryList","selected_id","_id","suggestMealRole","mealLabel","intro","servings","loading_imgSrc","mealImage","formatted_ingredient","open","imgSrc","prepTime","cookTime","product_slider","productImgSetting_flag","tmp_inst_groupList","temp","parsed_ingredients","JSON","parse","console","log","currProductObject","product","quantity","measurement","productImgData","flag","last_ingredient","properIngredientStringSyntax","ingredientGroupList","ingredientStrings","onhandleInstructionImg","event","target","files","URL","createObjectURL","handleUpdateSubmit","productImgForm","FormData","img_count1","append","productImg_paths","productImg_url","productImg_config","method","url","response","formatted_ingredient1","n1","tmp_ingredient","productImgPath","tmp_slider_data","ingredient","instructionImgForm","img_count","instructionImg_paths","instructionImg_url","instructionImg_config","instrutionImg_paths","instructionGroupData","n","new_categories","index","indexOf","suggestMealForm","stringify","img_change_flag","set","config","status","window","location","href","onTextFieldChange","e","value","onTextFieldClick","onhandleProductImg","productImgSrc","productImg_path","onHandleIngredientItem","ind","array","array3","splice","onHandleInstructionItem","onUpdateIngredientImg","tmp_ingredientData","tmp_ingredientItem","tmp1","onUpdateInstructionImg","tmp_instructionItem","handleIngredientDropdownChange","product_ind","currentIngredient","innerHTML","handleProductName","val","searchResult","map","element","toLowerCase","includes","find","handleCategoryDropdownChange","onhandleSendData","fetch","credentials","headers","body","selected","then","catch","error","handleChangePage","newPage","page","handleChangeRowsPerPage","rowsPerPage","handleDeleteMealItem","res","json","err","handleClickOpen","parsed_instructionData","stepSlides","mealImageName","instructionChunk","instructionSteps","title","dataName","mealName","tips","parsed_categories","currentIngredientMeasurement","currentIngredientQuantity","ingredientData","handleClose","handleSelectAllClick","checked","newSelecteds","mealData_list","handleClick","selectedIndex","newSelected","concat","slice","categoryChips","productsPopulated","mealImages_list","specificMealImage","bind","handleIngredientMeasurement","handleIngredientQuantity","addIngredientToMeal","componentDidMount","process","env","NODE_ENV","REACT_APP_S3_REGION","const_region","const_id","REACT_APP_CHOPCHOWAPP_USER_AWS_KEY","const_secret","REACT_APP_CHOPCHOWAPP_USER_AWS_SECRET","url1","get","mealsList","category_name","handleAddIngredientChip","chip","handleAddCategoryChip","handleAddInstructionStep","handleDeleteIngredientChip","handleDeleteCategoryChip","handleDeleteInstructionsStep","preventDefault","document","getElementById","alert","render","comp_instructions","count_index","content","allowedImageExtensions","allowedVideoExtensions","instructionContent","exec","mimetype","padding","justifyContent","overflowWrap","index1","textAlign","imgpath","ev","classes","palette","primary","numSelected","rowCount","highlight","fontWeight","column","align","row","isSelected","isItemSelected","labelId","option","params","newValue"],"mappings":"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AO,EAAC,QAApF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,CA5MF,CADF,CATF,CAnGF;AADF;AAoUD;;AAlpCwC;;AAqpC3C,eAAerM,UAAU,CAACY,MAAD,CAAV,CAAmBuB,kBAAnB,CAAf,C,CAEE;AACA;AACE;AACA;AACE;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACI;AACA;AAEA;AACA;AACA;AACJ;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACF;AACA;AACE;AACF;AAEA;AACA;AACA;AACA;AACA;AAGA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACF;AAGE;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACD;AACC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEI;AACJ;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { Component } from \"react\";\n// let ejs = require('ejs');\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TablePagination, TableRow, Checkbox, Typography, Toolbar, Dialog, DialogContent, DialogTitle, Button, IconButton, TextField } from '@material-ui/core';\nimport clsx from \"clsx\";\n\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport SendIcon from '@material-ui/icons/Send';\n\nimport ChipInput from \"material-ui-chip-input\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport { createMuiTheme, withStyles, ThemeProvider } from '@material-ui/core/styles';\nimport { green } from '@material-ui/core/colors';\n// import axios from 'axios';\nimport axios from '../util/Api';\nimport { Row, Col } from \"react-bootstrap\";\nimport Tooltip from '@material-ui/core/Tooltip';\n// const { GetObjectCommand } = require(\"@aws-sdk/client-s3\");\n// const { S3Client } = require(\"@aws-sdk/client-s3\");\n\n// var client = '';\n// const client = new S3Client({\n//   credientials: {\n//     region: const_region,\n//     aws_access_key_id: const_id,\n//     aws_secret_access_key: const_secret,\n\n//   }\n// })\n\n// height of the TextField\nconst columns = [\n  { id: '_id', label: 'id', minWidth: 100 },\n  { id: 'mealName', label: 'MealName', minWi859dth: 100 },\n  { id: 'intro', label: 'Intro', minWidth: 100 },\n  { id: 'servings', label: 'Servings', minWidth: 30 },\n  // { id: 'mealImage', label: 'ImageSrc',  minWidth: 100},\n  { id: 'prepTime', label: 'prepTime', minWidth: 30 },\n  { id: 'cookTime', label: 'cookTime', minWidth: 30 },\n  { id: 'active', label: 'Active', minWidth: 150 }\n];\n\nconst styles = theme => ({\n  button: { margin: theme.spacing.unit, },\n  leftIcon: { marginRight: theme.spacing.unit, },\n  rightIcon: { marginLeft: theme.spacing.unit, },\n  iconSmall: { fontSize: 20, },\n  root: { width: '95%', margin: 'auto', marginTop: '20px', },\n  container: { maxHeight: 440, },\n});\n\nconst LightTooltip = withStyles((theme) => ({\n  tooltip: {\n    backgroundColor: '#c0dbf2',\n    color: '#000000',\n    boxShadow: theme.shadows[1],\n    fontSize: 15,\n    marginTop: \"50px\"\n  },\n}))(Tooltip);\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////\nclass ViewSuggestedMeals extends Component {\n  products = [];\n  productsImg_path = [];\n  categories = [];\n  measurements = [\"mL\", \"oz\", \"L\", \"cup(s)\", \"Tbsp\", \"tsp\", \"pt\", \"lb\", \"g\", \"kg\", \"lb\"];\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      mealLabel: \"\",\n      intro: \"\",\n      servings: 0,\n      // currentIngredient: \"Butter scotch\",\n      currentIngredient: \"\",\n      currentIngredientMeasurement: \"\",\n      currentIngredientQuantity: \"\",\n      ingredientStrings: [],\n      formatted_ingredient: [],\n      instructionsChip: [],\n      prepTime: \"0 mins read\",\n      cookTime: \"10 mins cook time\",\n      categoryChips: [\"snacks\", \"abc\", \"123\"],\n      productsPopulated: false,\n      img_change_flag: false,\n\n      selected_id: \"\",\n      mealData_list: [],\n      mealImages_list: [],\n      specificMealImage: \"\",\n      page: 0,\n      rowsPerPage: 10,\n      open: false,\n      suggestMealRole: \"\",\n\n      imgSrc: \"\",\n      loading_imgSrc: \"\",\n      productImgSetting_flag: null,\n      productImgSrc: null,\n      productImg_path: \"\",\n      product_ind: 0,\n      ingredientGroupList: [],\n      selected: [],\n\n      instructionGroupList: [],\n      instructionImgData: null,\n      instructionImgPath: \"\",\n      categoryList: [],\n      tips: \"\"\n    };\n\n    this.handleIngredientDropdownChange = this.handleIngredientDropdownChange.bind(\n      this\n    );\n    this.handleProductName = this.handleProductName.bind(this);\n    this.handleIngredientMeasurement = this.handleIngredientMeasurement.bind(this);\n    this.handleIngredientQuantity = this.handleIngredientQuantity.bind(this);\n    this.addIngredientToMeal = this.addIngredientToMeal.bind(this);\n  }\n\n  ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n  componentDidMount() {\n\n    console.log(\"app Env files: \" + process.env.NODE_ENV);\n    console.log(\"app Env var of region: \" + process.env.REACT_APP_S3_REGION);\n\n\n    const const_region = process.env.REACT_APP_S3_REGION;\n    const const_id = process.env.REACT_APP_CHOPCHOWAPP_USER_AWS_KEY;\n    const const_secret = process.env.REACT_APP_CHOPCHOWAPP_USER_AWS_SECRET;\n\n\n    var url1 = \"/get-suggested-meals\"\n    axios.get(url1).then(body => {\n      var mealsList = body.data;\n      if (mealsList && mealsList.data.length !== 0) {\n        console.log(\"shows products does return\");\n        this.setState({ mealData_list: mealsList.data });\n      }\n      else { console.log(\"shows products do not return\"); }\n      console.log(mealsList);\n    }).catch(err => { console.log(err); });\n\n\n    //----get category meals-------------------------\n    var url = \"/get-all-categories\";\n    axios.get(url).then((body) => {\n      var categoryList = body.data;\n      console.log(categoryList);\n      if (categoryList && categoryList.data.length !== 0) {\n        console.log(\"returns GET of ALL Categories \");\n\n        for (var i = 0; i < categoryList.data.length; i++) {\n          this.categories.push(categoryList.data[i].category_name);\n        }\n        console.log(\"PRINTING UPDATED CATEGORIES LIST\");\n      } else {\n        console.log(\"get all products function does not return\");\n      }\n    })\n      .catch((err) => {\n        console.log(err);\n      });\n\n  }\n\n  ///////////////////////////////////////////////////////////////////////////////////////\n  addInstructionList = () => {\n    if (this.state.instructionsChip.length === 0) return;\n    let tmp = {\n      step: this.state.instructionsChip,\n      imgdata: this.state.instructionImgData,\n      image: this.state.instructionImgPath,\n    }\n    this.setState({ instructionGroupList: [...this.state.instructionGroupList, tmp] });\n    this.setState({ instructionsChip: [], instructionImgData: null, instructionImgPath: \"\" });\n  }\n\n  ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n  updateSuggestItem = (data, mealRole) => {\n    const instructionData = data.instructions;\n    const tmp_instructionData = [];\n\n    for (let i = 0; i < instructionData.length; i++) {\n      let tmp = {\n        step: instructionData[i].step,\n        imgdata: -1,\n        image: instructionData[i].image,\n      }\n      tmp_instructionData.push(tmp);\n    }\n\n    this.setState({ categoryList: data.categories });\n    this.setState({ selected_id: data._id, instructionGroupList: tmp_instructionData, suggestMealRole: mealRole, mealLabel: data.label, intro: data.intro, servings: data.servings, loading_imgSrc: data.mealImage, formatted_ingredient: data.formatted_ingredient });\n    this.setState({ open: true });\n\n    // this.setState({ currentIngredientMeasurement: last_ingredient.measurement, currentIngredientQuantity: last_ingredient.quantity, currentIngredient: last_ingredient.product });\n    this.setState({ imgSrc: data.mealImage, prepTime: data.prepTime, cookTime: data.cookTime, product_slider: data.product_slider, productImgSetting_flag: false });\n\n    // const last_slider = data.product_slider[data.product_slider.length-1];\n    // this.setState({productImg_path: last_slider.image});\n\n    let tmp_inst_groupList = [];\n    let temp = [];\n    let parsed_ingredients = JSON.parse(data.formatted_ingredient);\n    console.log(\"Parsed ingredients\");\n    console.log(parsed_ingredients);\n    for (let i = 0; i < parsed_ingredients.length; i++) {\n      var currProductObject = {\n        product: data.parsed_ingredients[i].product,\n        quantity: data.parsed_ingredients[i].quantity,\n        measurement: data.parsed_ingredients[i].measurement,\n        productImgData: null,\n        // productImgPath: data.product_slider[i].image,\n        flag: false,\n      };\n      tmp_inst_groupList.push(currProductObject);\n\n      const last_ingredient = data.parsed_ingredients[i];\n      var properIngredientStringSyntax;\n\n      if (last_ingredient.quantity === 0) properIngredientStringSyntax = last_ingredient.product;\n      else if (last_ingredient.measurement === null) properIngredientStringSyntax = \"\" + last_ingredient.quantity + \" \" + last_ingredient.product;\n      else properIngredientStringSyntax = \"\" + last_ingredient.quantity + \" \" + last_ingredient.measurement + \" of \" + last_ingredient.product;\n\n      temp.push(properIngredientStringSyntax);\n\n      // const tmp_data = {imgSrc:null, path_flag: data.product_slider[i].flag, path: data.product_slider[i].image};\n      // tmp_ingredientData.push(tmp_data);\n    }\n\n    this.setState({ ingredientGroupList: tmp_inst_groupList });\n    this.setState({ ingredientStrings: temp });\n    // this.setState({ ingredientData: tmp_ingredientData }); \n\n  }\n\n  ///////////////////////////////////////////////////////////////////////////////////////\n  onhandleInstructionImg = (event) => {\n    this.setState({ instructionImgData: event.target.files[0] });\n    if (event.target.files[0] !== null) {\n      this.setState({ instructionImgPath: URL.createObjectURL(event.target.files[0]) });\n    }\n  };\n\n  ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n  handleUpdateSubmit = async () => {\n    const data = this.state;\n    const { mealLabel, intro, servings, instructionGroupList, ingredientGroupList, ingredientStrings, imgSrc, prepTime, cookTime, selected_id, categoryList } = data;\n\n    let productImgForm = new FormData();\n    let img_count1 = 0;\n    for (var i = 0; i < ingredientGroupList.length; i++) {\n      if (ingredientGroupList[i].productImgData !== null) {\n        productImgForm.append('productImgs', ingredientGroupList[i].productImgData);\n        img_count1++;\n      }\n    }\n\n    let productImg_paths = null;\n    if (img_count1 !== 0) {\n      var productImg_url = \"/getProductImgURL/\";\n      const productImg_config = { method: 'POST', data: productImgForm, url: productImg_url };\n\n      const response = await axios(productImg_config)\n      productImg_paths = response.data.productImg_paths;\n    }\n    console.log(\"productImg_paths: \", productImg_paths);\n\n    //-------------to make prodcut data ------------------------------------------\n    const formatted_ingredient1 = [];\n    const product_slider = [];\n    let n1 = -1;\n    for (i = 0; i < ingredientGroupList.length; i++) {\n      var tmp_ingredient = {\n        product: ingredientGroupList[i].product,\n        quantity: ingredientGroupList[i].quantity,\n        measurement: ingredientGroupList[i].measurement,\n      };\n      formatted_ingredient1.push(tmp_ingredient);\n\n      //-----------------------------------------------\n      let image = \"\";\n      if (ingredientGroupList[i].productImgData !== null) {\n        n1++; image = productImg_paths[n1]\n      }\n      else {\n        image = ingredientGroupList[i].productImgPath;\n      }\n\n      const tmp_slider_data = {\n        ingredient: ingredientGroupList[i].product,\n        image: image,\n        flag: ingredientGroupList[i].flag,\n      };\n      product_slider.push(tmp_slider_data);\n    }\n\n    //------------- to get glabal path for instrution image ----------------------------------------\n    let instructionImgForm = new FormData();\n    let img_count = 0;\n    for (i = 0; i < instructionGroupList.length; i++) {\n      if (instructionGroupList[i].imgdata !== null && instructionGroupList[i].imgdata !== -1) {\n        instructionImgForm.append('instructionImgs', instructionGroupList[i].imgdata);\n        img_count++;\n      }\n    }\n\n    let instructionImg_paths = null;\n    if (img_count !== 0) {\n      var instructionImg_url = \"/getInstructionImgURL/\";\n      const instructionImg_config = { method: 'POST', data: instructionImgForm, url: instructionImg_url };\n\n      const response = await axios(instructionImg_config)\n      instructionImg_paths = response.data.instrutionImg_paths;\n    }\n\n    //-------------to make instruction data ------------------------------------------\n    const instructionGroupData = [];\n    let n = -1;\n    for (i = 0; i < instructionGroupList.length; i++) {\n      let image = null;\n      if (instructionGroupList[i].imgdata !== null && instructionGroupList[i].imgdata !== -1) {\n        n++; image = instructionImg_paths[n]\n      }\n      else if (instructionGroupList[i].imgdata === -1) {\n        image = instructionGroupList[i].image;\n      }\n\n      let tmp = {\n        step: instructionGroupList[i].step,\n        image: image,\n      }\n      instructionGroupData.push(tmp);\n    }\n\n    //-------------to make new category data ------------------------------------------\n    let new_categories = [];\n    for (i = 0; i < categoryList.length; i++) {\n      let index = this.categories.indexOf(categoryList[i]);\n      if (index === -1) new_categories.push(categoryList[i])\n    }\n\n    let suggestMealForm = new FormData();\n    suggestMealForm.append('id', selected_id);\n    suggestMealForm.append('mealLabel', mealLabel);\n    suggestMealForm.append('intro', intro);\n    suggestMealForm.append('servings', servings);\n    suggestMealForm.append('product_slider', JSON.stringify(product_slider));\n    suggestMealForm.append('formatted_ingredient', JSON.stringify(formatted_ingredient1));\n    suggestMealForm.append('instructionsGroupList', JSON.stringify(instructionGroupData));\n    suggestMealForm.append('ingredientStrings', ingredientStrings);\n    suggestMealForm.append('prepTime', prepTime);\n    suggestMealForm.append('cookTime', cookTime);\n    suggestMealForm.append('categoryChips', JSON.stringify(categoryList));\n    suggestMealForm.append('newCategories', JSON.stringify(new_categories));\n    suggestMealForm.append('imgSrc', imgSrc);\n\n    // const ingredient_list = [];\n    if (this.state.img_change_flag) {\n      suggestMealForm.append('img_change_flag', \"true\");\n      suggestMealForm.append('imgSrc', imgSrc);\n    } else {\n      suggestMealForm.set('img_change_flag', \"false\");\n    }\n\n    // console.log(\"KKKKKKKKKKK: \", ingredientData);\n    // for(var i=0; i< ingredientData.length; i++)\n    // {\n    //   if(ingredientData[i].imgSrc==null){\n    //     ingredient_list.push(null);\n    //   }else{\n    //     ingredient_list.push({path_flag:ingredientData[i].path_flag,  path: ingredientData[i].path});\n    //     if(ingredientData[i].path_flag){\n    //       suggestMealForm.append('imgSrc', ingredientData[i].imgSrc);\n    //     } \n    //   }    \n    // }  \n    // suggestMealForm.append('ingredient_list', JSON.stringify(ingredient_list));\n\n    var url = \"/updateSuggestItem\";\n    const config = { method: 'POST', data: suggestMealForm, url: url };\n    const response = await axios(config)\n    if (response.status >= 200 && response.status < 300) {\n      console.log(\"Updated Meal submitted successfully\");\n      return (window.location.href = \"/ViewSuggestedMeals\");\n    } else {\n      console.log(\"Somthing happened wrong\");\n    }\n  }\n\n\n  ////////////////////////////////////////////////////////////////////////////\n  onTextFieldChange = (e) => {\n    this.setState({ [e.target.id]: e.target.value });\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  onTextFieldClick = (event) => {\n    this.setState({ imgSrc: event.target.files[0] });\n\n    if (this.state.imgSrc !== null) {\n      this.setState({ loading_imgSrc: URL.createObjectURL(event.target.files[0]) });\n      this.setState({ img_change_flag: true });\n    }\n  };\n\n  ///////////////////////////////////////////////////////////////////////////////////////\n  onhandleProductImg = (event) => {\n    this.setState({ productImgSrc: event.target.files[0] });\n    if (event.target.files[0] !== null) {\n      this.setState({ productImg_path: URL.createObjectURL(event.target.files[0]) });\n    }\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  handleAddIngredientChip(chip) {\n    let temp = this.state.ingredientStrings;\n    temp.push(chip);\n    this.setState({ ingredientStrings: temp });\n  }\n\n  ////////////////////////////////////////////////////////////////////////////\n  handleAddCategoryChip(chip) {\n    this.setState({ categoryChips: [...this.state.categoryChips, chip] }); //\n  }\n\n  ///////////////////////////////////////////////////////////////////////////////////////\n  handleAddInstructionStep(chip) {\n    this.setState({\n      instructionsChip: [...this.state.instructionsChip, chip],\n    });\n  }\n\n  ///////////////////////////////////////////////////////////////////////////////////////\n  onHandleIngredientItem = (ind) => {\n    var array = this.state.ingredientStrings; // make a separate copy of the array\n    var array3 = this.state.ingredientGroupList;\n    if (ind !== -1) {\n      array.splice(ind, 1);\n      array3.splice(ind, 1);\n      this.setState({ ingredientStrings: array, ingredientGroupList: array3 });\n    }\n  }\n\n  ///////////////////////////////////////////////////////////////////////////////////////\n  onHandleInstructionItem = (ind) => {\n    const array = this.state.instructionGroupList;\n    array.splice(ind, 1);\n    this.setState({ instructionGroupList: array });\n  }\n\n  ///////////////////////////////////////////////////////////////////////////////////////\n  onUpdateIngredientImg = (event, ind) => {\n    // if (event.target.files[0] === null || this.state.ingredientData.length<= ind) return;\n    // const tmp_ingredientData = this.state.ingredientData;\n    // const tmp = {imgSrc:event.target.files[0], path_flag: true, path:URL.createObjectURL(event.target.files[0])}\n    // tmp_ingredientData[ind] = tmp;\n    // this.setState({ingredientData: tmp_ingredientData});\n    if (event.target.files[0] === null || this.state.ingredientGroupList.length <= ind) return;\n    const tmp_ingredientData = this.state.ingredientGroupList;\n    const tmp_ingredientItem = tmp_ingredientData[ind];\n\n    var tmp1 = {\n      product: tmp_ingredientItem.product,\n      quantity: tmp_ingredientItem.quantity,\n      measurement: tmp_ingredientItem.measurement,\n      productImgData: event.target.files[0],\n      productImgPath: URL.createObjectURL(event.target.files[0]),\n      flag: true,\n    };\n    tmp_ingredientData[ind] = tmp1;\n    this.setState({ ingredientGroupList: tmp_ingredientData });\n  }\n  ///////////////////////////////////////////////////////////////////////////////////////\n  onUpdateInstructionImg = (event, ind) => {\n    if (event.target.files[0] === null || this.state.instructionGroupList.length <= ind) return;\n    const tmp_instructionData = this.state.instructionGroupList;\n    const tmp_instructionItem = tmp_instructionData[ind];\n\n    let tmp = {\n      step: tmp_instructionItem.step,\n      imgdata: event.target.files[0],\n      image: URL.createObjectURL(event.target.files[0]),\n    };\n\n    tmp_instructionData[ind] = tmp;\n    this.setState({ instructionGroupList: tmp_instructionData });\n  }\n\n  ////////////////////////////////////////////////////////////////////////////\n  handleDeleteIngredientChip(chip) {\n    var array = this.state.ingredientStrings; // make a separate copy of the array\n    var array3 = this.state.ingredientGroupList;\n\n    var index = array.indexOf(chip);\n    if (index !== -1) {\n      array.splice(index, 1);\n      array3.splice(index, 1);\n\n      this.setState({ ingredientStrings: array, ingredientGroupList: array3 });\n    }\n  }\n\n  ////////////////////////////////////////////////////////////////////////////\n  handleDeleteCategoryChip(chip, index) {\n    console.log(\"handleDeleteCategoryChip:\", index)\n  }\n\n  // ////////////////////////////////////////////////////////////////////////////\n  // handleDeleteCategoryChip(chip) {\n  //   console.log(\"removing chop input\");\n  //   var array = [...this.state.categoryChips]; // make a separate copy of the array\n  //   var index = array.indexOf(chip);\n  //   if (index !== -1) {\n  //     array.splice(index, 1);\n  //     this.setState({ categoryChips: array });\n  //   }\n  // }\n\n  ////////////////////////////////////////////////////////////////////////////\n  handleDeleteInstructionsStep(chip) {\n    console.log(\"removing chop input\");\n    var array = [...this.state.instructionsChip]; // make a separate copy of the array\n    var index = array.indexOf(chip);\n    if (index !== -1) {\n      array.splice(index, 1);\n      this.setState({ instructionsChip: array });\n    }\n  }\n\n  ////////////////////////////////////////////////////////////////////////////\n  handleIngredientQuantity(event) {\n    console.log(event.target.value);\n    this.setState({ currentIngredientQuantity: event.target.value });\n  }\n\n  ////////////////////////////////////////////////////////////////////////////\n  handleIngredientDropdownChange = (event, value) => {\n    var array = this.products;\n    var index = array.indexOf(value);\n    if (index !== -1) {\n      this.setState({ product_ind: index });\n    }\n\n    if (event.target.value) {\n      this.setState({ currentIngredient: event.target.value });\n    } else {\n      this.setState({ currentIngredient: event.target.innerHTML });\n    }\n  }\n\n  ///////////////////////////////////////////////////////////////////////////////////////\n  handleProductName = (event, val) => {\n\n    const searchResult = this.products.map(element => element.toLowerCase().includes(val.toLowerCase()));\n    const flag = searchResult.find(element => element === true);\n    if (flag !== true || flag === null) {\n      this.setState({ productImgSetting_flag: true });\n      this.setState({ currentIngredient: val });\n    } else {\n      this.setState({ productImgSetting_flag: false });\n      this.setState({ currentIngredient: val });\n    }\n  }\n\n  ///////////////////////////////////////////////////////////////////////////////////////\n  handleCategoryDropdownChange = (val) => {\n    this.setState({ categoryList: val });\n  }\n\n  ////////////////////////////////////////////////////////////////////////////\n  handleIngredientMeasurement(event) {\n    if (event.target.value) {\n      this.setState({ currentIngredientMeasurement: event.target.value });\n    } else {\n      this.setState({ currentIngredientMeasurement: event.target.innerHTML });\n    }\n  }\n\n  ////////////////////////////////////////////////////////////////////////////\n  onhandleSendData = () => {\n    fetch(\"./api/send-mealData\", {\n      method: 'POST',\n      credentials: 'include',\n      headers: {\n        'Content-type': 'application/json',\n      },\n      body: JSON.stringify(this.state.selected),\n    }).then(response => {\n      console.log(response)\n      if (response.status === 200) {\n        return (window.location.href = \"/ViewSuggestedMeals\");\n      }\n    })\n      .catch(error => {\n        console.log(error);\n      });\n  }\n\n  ////////////////////////////////////////////////////////////////////////////\n  addIngredientToMeal(event) {\n    event.preventDefault();\n    console.log(this.state.currentIngredientMeasurement);\n    var properIngredientStringSyntax;\n\n    if (document.getElementById(\"currentIngredient\").value === \"\") {\n      window.alert(\"Enter an ingredient to add to meal\");\n      return;\n    }\n\n    if (this.state.currentIngredientQuantity === 0) {\n      properIngredientStringSyntax = document.getElementById(\"currentIngredient\").value;\n    } else if (\n      document.getElementById(\"currentIngredientMeasurement\").value === null\n    ) {\n      properIngredientStringSyntax = \"\" + this.state.currentIngredientQuantity + \" \" + document.getElementById(\"currentIngredient\").value;\n    } else {\n      properIngredientStringSyntax = \"\" + this.state.currentIngredientQuantity + \" \" + document.getElementById(\"currentIngredientMeasurement\").value + \" of \" + document.getElementById(\"currentIngredient\").value;\n    }\n\n    var currProductObject = {\n      product: this.state.currentIngredient,\n      quantity: this.state.currentIngredientQuantity,\n      measurement: this.state.currentIngredientMeasurement,\n      productImgData: this.state.productImgSrc,\n      productImgPath: null,\n      flag: this.state.productImgSetting_flag,\n    };\n\n    if (this.state.productImgSetting_flag) {\n      currProductObject.productImgPath = this.state.productImg_path;\n      currProductObject.flag = true\n    } else {\n      currProductObject.productImgPath = this.productsImg_path[this.state.product_ind];\n      currProductObject.flag = false;\n    }\n    this.handleAddIngredientChip(properIngredientStringSyntax);\n\n    // if(this.state.productImgSetting_flag ){\n    //   const tmp_data = {imgSrc:this.state.productImgSrc, path_flag: true, path:\"\"}\n    //   this.setState({ ingredientData: [...this.state.ingredientData, tmp_data] });  \n    // }else{\n    //   const tmp_data = {imgSrc:[], path_flag: false, path:this.productsImg_path[this.state.product_ind]}\n    //   this.setState({ ingredientData: [...this.state.ingredientData, tmp_data] });\n    // }\n\n    // this.setState({ formatted_ingredient: [ ...this.state.formatted_ingredient, currIngredientObject, ], \n    //   productImg_path:null,\n    //   product_slider: [...this.state.product_slider, null],\n    // });\n\n    this.setState({ ingredientGroupList: [...this.state.ingredientGroupList, currProductObject] });\n    this.setState({ productImgSrc: null, productImg_path: \"\" });\n\n  }\n\n  ////////////////////////////////////////////////////////////////////////////\n  handleChangePage = (event, newPage) => {\n    this.setState({ page: newPage });\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  handleChangeRowsPerPage = (event) => {\n    this.setState({ page: 0 });\n    this.setState({ rowsPerPage: +event.target.value });\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  handleDeleteMealItem = (data) => {\n    var url = `./api/removeSeggestItem/${data._id}`;\n    fetch(url).then((res) => {\n      return res.json();\n    })\n      .then((response) => {\n        console.log(\"Delets item\");\n        return (window.location.href = \"/ViewSuggestedMeals\");\n      })\n      .catch((err) => {\n        console.log(\"unDelets item\");\n        console.log(err);\n      });\n  }\n\n  ////////////////////////////////////////////////////////////////////////////\n  handleClickOpen = (data, mealRole) => {\n\n    console.log(\"data is :\");\n    console.log(data);\n    let parsed_instructionData = data.stepSlides;\n\n    const tmp_instructionData = [];\n    console.log(\"Parsed Step Instructions: \");\n    console.log(parsed_instructionData);\n    // console.log(data.mealImage)\n\n    console.log(\"Trying to call image to display \");\n    //get meal image from gridfs\n    // var url = \"http://chopchowdev/getOneMongoFileImage/\"+data.mealImage;\n    let url = 'https://chopchowdev.herokuapp.com/getOneMongoFileImage/' + data.mealImageName;\n    this.setState({ imgSrc: url })\n    // let stepData = this.getDataFromS3(parsed_instructionData[0].instructionChunk.dataName, 0);\n    //  let urldata = URL.createObjectURL(stepData);\n    // this.setState({ contentData: stepData });\n\n    console.log(\"Length of instruction data: \" + parsed_instructionData.length);\n    for (let i = 0; i < parsed_instructionData.length; i++) {\n      console.log(\"i : \" + i);\n\n      let instructionChunk = parsed_instructionData[i].instructionChunk;\n      // console.log(\"instruction title is: \");\n      // console.log(instructionChunk.title);\n      // console.log(\"instruction chunk is: \");\n      // console.log(instructionChunk);\n      // let instructionSteps = instructionChunk['instructionSteps'];\n      let tmp = {\n        step: instructionChunk.instructionSteps,\n        title: instructionChunk.title,\n        dataName: instructionChunk.dataName,\n      }\n\n      // this.getDataFromS3(tmp.dataName, i);\n      tmp_instructionData.push(tmp);\n      // console.log(tmp);\n    }\n\n    this.setState({\n      selected_id: data._id, instructionGroupList: tmp_instructionData,\n      suggestMealRole: mealRole, mealLabel: data.mealName, intro: data.intro, servings: data.servings,\n      loading_imgSrc: data.mealImage, formatted_ingredient: data.formatted_ingredient, tips: data.tips\n    });\n    this.setState({ open: true });\n\n    const last_ingredient = data.formatted_ingredient[(data.formatted_ingredient.length - 1)];\n    let parsed_categories = JSON.parse(data.categories);\n\n    this.setState({\n      currentIngredientMeasurement: last_ingredient.measurement,\n      currentIngredientQuantity: last_ingredient.quantity, currentIngredient: last_ingredient.product\n    });\n\n    //   const reader = new FileReader();\n    // reader.onload = function(e) {\n    //     this.setState({imgSrc: reader.result})\n    // }\n    // reader.readAsDataURL(e.target.files[0]);\n    // reader.readAsDataURL(data.mealImage);\\\n    // find mealimage name in meal image and add image data to displayed image src\n    // let binaryMealimage = data.mealImage;\n    // console.log(binaryMealimage);\n\n    // let binaryImageToString = binaryMealimage.toString('base64');\n    // console.log(binaryImageToString);\n\n    // console.log('data:image/image/png;base64,'+binaryImageToString);\n    // url = 'data:image/image/png;base64,'+binaryImageToString;\n\n    // console.log(JSON.stringify(data.mealImage.data));\n\n\n    this.setState({\n      prepTime: data.prepTime, cookTime: data.cookTime,\n      categoryList: parsed_categories, product_slider: data.product_slider, productImgSetting_flag: false\n    });\n\n    // const last_slider = data.product_slider[data.product_slider.length-1];\n    // this.setState({productImg_path: last_slider.image});\n\n    let temp = [];\n    let tmp_ingredientData = []\n    let parsed_ingredients = JSON.parse(data.formatted_ingredient);\n    for (let i = 0; i < parsed_ingredients.length; i++) {\n      const last_ingredient = parsed_ingredients[i];\n      var properIngredientStringSyntax;\n\n      // if (last_ingredient.quantity === 0) properIngredientStringSyntax = last_ingredient.product;\n      // else if (last_ingredient.measurement === null ) properIngredientStringSyntax =\"\" + last_ingredient.quantity + \" \" +  last_ingredient.product;\n      // else properIngredientStringSyntax =\"\" + last_ingredient.quantity + \" \" +  last_ingredient.measurement+\" of \" + last_ingredient.product;\n\n      temp.push(last_ingredient.properIngredientStringSyntax);\n      tmp_ingredientData.push(null)\n    }\n    this.setState({ ingredientStrings: temp });\n    this.setState({ ingredientData: tmp_ingredientData });\n\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  handleClose = () => { this.setState({ open: false }); };\n\n  ////////////////////////////////////////////////////////////////////////////\n  onTextFieldChange = (e) => {\n    this.setState({ [e.target.id]: e.target.value });\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  handleSelectAllClick = (event) => {\n    if (event.target.checked) {\n      const newSelecteds = this.state.mealData_list.map((n) => n._id);\n      this.setState({ selected: newSelecteds });\n      return;\n    }\n    this.setState({ selected: [] });\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  handleClick = (event, id) => {\n    const selected = this.state.selected;\n    const selectedIndex = selected.indexOf(id);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, id);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1),\n      );\n    }\n    this.setState({ selected: newSelected });\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  render() {\n    console.log(\"this.state.instructionGroupList: \", this.state.instructionGroupList)\n    var comp_instructions = [];\n    var count_index = 1;\n    \n    // var urld_image = URL.createObjectURL(this.state.imgSrc);\n    for (let i = 0; i < this.state.instructionGroupList.length; i++) {\n      let content = \"\";\n      if (i !== 0) {\n        count_index += this.state.instructionGroupList[i - 1].step.length;\n      }\n          // Allowing file type\n    var allowedImageExtensions = /(\\.jpg|\\.jpeg|\\.png|\\.)$/i;\n    var allowedVideoExtensions = /(\\.mp4|\\.m4v|\\.)$/i;\n      let instructionContent = '';\n      if(allowedVideoExtensions.exec(this.state.instructionGroupList[i].dataName)){\n        instructionContent = <video id={\"instructionVideo\" + i} controls>\n        <source src={'https://meal-chunk-images-and-videos.s3.us-west-1.amazonaws.com/'+this.state.instructionGroupList[i].dataName} type={this.state.instructionGroupList[i].mimetype}/> \n          </video>\n      }\n      else if(allowedImageExtensions.exec(this.state.instructionGroupList[i].dataName)){\n        instructionContent = <img id={\"instructionImg\" + i} src={'https://meal-chunk-images-and-videos.s3.us-west-1.amazonaws.com/'+this.state.instructionGroupList[i].dataName} alt={this.state.instructionGroupList[i].dataName} />\n      }\n      else{\n        // use generic content\n        instructionContent = <img id={\"instructionImg\" + i} src={'public/images/meal_pics/chopchow_default_instruction.png'} alt=\"chop chop image\" />\n      }\n      \n\n      comp_instructions.push(\n        <div key={i} className=\"mb-3\" style={{ margin: \"10px\", padding: \"10px\", backgroundColor: \"white\", boxShadow: \"1px 1px 4px 2px #00000030\" }}>\n          <Row style={{ justifyContent: \"flex-end\" }}>\n            <i className=\"fa fa-remove\" style={{ fontSize: \"50%\", marginTop: \"0px\", marginRight: \"15px\" }} onClick={() => this.onHandleInstructionItem(i)}></i>\n          </Row>\n          <Row >\n            <Col md={4} className=\"mb-2\" style={{ overflowWrap: \"break-word\" }}>\n              <div className=\"mdc-list\">\n                {this.state.instructionGroupList[i].step.map((chip, index1) => (\n                  <div className=\"mdc-list-item\" key={index1}>\n                    <span className=\"mdc-list-item__text\">{index1 + count_index}.\n                      <span className=\"mdc-list-item__text\"> {chip}</span>\n                    </span>\n                  </div>\n                ))}\n              </div>\n            </Col>\n            <Col md={4} className=\"mb-2\" style={{ textAlign: \"center\" }}>\n              <img className=\"mb-2\" src={this.state.instructionGroupList[i].imgpath} width=\"auto\" height=\"150px\" alt=\"\" />\n              <input accept=\"image/*\" id=\"imgSrc1\" type=\"file\" className=\"mb-2, ml-3\" value={this.state.mealImage} onChange={(ev) => this.onUpdateInstructionImg(ev, i)} />\n            </Col>\n            <Col md={4} className=\"mb-2\"></Col>\n          </Row>\n          <Row>\n            <br>\n            </br>\n            {/* <button onClick={this.getDataFromS3(\"dmnn9dog_massage.jpeg\", i)}> View Content1 </button><br></br> */}\n            {/* <Button onClick={this.getDataFromS3(\"dmnn9dog_massage.jpeg\", i)}> \n            View Content\n           </Button>\n           <Button onClick={this.getDataFromS3(\"dmnn9dog_massage.jpeg\", i)}> \n            View Content2\n           </Button> */}\n           {instructionContent}\n          </Row>\n        </div>\n      )\n    }\n\n    const { classes } = this.props;\n    const { mealData_list, page, rowsPerPage, open, suggestMealRole, loading_imgSrc, categoryList, imgSrc } = this.state;\n    const { mealLabel, intro, currentIngredient, currentIngredientQuantity, currentIngredientMeasurement, prepTime, cookTime, servings } = this.state;\n\n    const theme = createMuiTheme({\n      palette: { primary: green, },\n    });\n\n    const numSelected = this.state.selected.length;\n    const rowCount = mealData_list ? mealData_list.length : 0;\n\n    return (\n      <div className={classes.root} style={{ boxShadow: \"2px 2px 8px 0px #a0a0a0\" }}>\n        <Toolbar className={clsx(classes.root, { [classes.highlight]: numSelected > 0 })} >\n          {numSelected > 0 ?\n            (<Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\" component=\"div\" style={{ fontSize: \"16px\", fontWeight: \"600\", marginRight: \"20px\", color: \"blue\" }}> {numSelected} selected</Typography>)\n            : (<Typography className={classes.title} variant=\"h6\" id=\"tableTitle\" component=\"div\">None Selected  </Typography>)}\n\n          {numSelected > 0 ? (<Button variant=\"outlined\" color=\"primary\" endIcon={<SendIcon />} onClick={this.onhandleSendData}>Send</Button>) : null}\n        </Toolbar>\n        <TableContainer className={classes.container}>\n          <Table stickyHeader aria-label=\"sticky table\">\n            <TableHead>\n              <TableRow>\n                <TableCell padding=\"checkbox\">\n                  <Checkbox\n                    indeterminate={numSelected > 0 && numSelected < rowCount}\n                    checked={rowCount > 0 && numSelected === rowCount}\n                    onChange={this.handleSelectAllClick}\n                    inputProps={{ 'aria-label': 'select all desserts' }}\n                  />\n                </TableCell>\n\n                {columns.map((column) => (\n                  <TableCell\n                    key={column.id}\n                    align={column.align}\n                    style={{ minWidth: column.minWidth, fontSize: '15x', fontWeight: '600', padding: '10px 5px' }}\n                  >\n                    {column.label}\n                  </TableCell>\n                ))}\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {mealData_list &&\n                mealData_list.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => {\n                  const isSelected = (id) => this.state.selected.indexOf(id) !== -1;\n                  const isItemSelected = isSelected(row._id);\n                  const labelId = `enhanced-table-checkbox-${index}`;\n\n                  return (\n                    <TableRow\n                      hover\n                      onClick={(event) => this.handleClick(event, row._id)}\n                      role=\"checkbox\"\n                      aria-checked={isItemSelected}\n                      tabIndex={-1}\n                      key={row._id}\n                      selected={isItemSelected}\n                    >\n                      <TableCell padding=\"checkbox\">\n                        <Checkbox\n                          checked={isItemSelected}\n                          inputProps={{ 'aria-labelledby': labelId }}\n                        />\n                      </TableCell>\n\n                      {columns.map((column) => {\n                        if (column.id === \"active\") {\n                          return (\n                            <TableCell key={column.id} style={{ padding: '0px 0px' }}>\n                              <LightTooltip title=\"  View  \" placement=\"top\">\n                                <IconButton color=\"primary\" aria-label=\"upload picture\" component=\"span\" onClick={() => this.handleClickOpen(row, \"moreView\")}>\n                                  <VisibilityIcon />\n                                </IconButton>\n                              </LightTooltip>\n\n                              <LightTooltip title=\"  Update  \" placement=\"top\">\n                                <IconButton color=\"primary\" aria-label=\"upload picture\" component=\"span\" onClick={() => this.updateSuggestItem(row, \"edit\")}>\n                                  <EditIcon style={{ color: 'green' }} />\n                                </IconButton>\n                              </LightTooltip>\n\n                              <LightTooltip title=\"  Delete  \" placement=\"top\">\n                                <IconButton color=\"secondary\" aria-label=\"upload picture\" component=\"span\" onClick={() => this.handleDeleteMealItem(row)}>\n                                  <DeleteIcon />\n                                </IconButton>\n                              </LightTooltip>\n                            </TableCell>\n                          );\n                        }\n                        else { const value = row[column.id]; return (<TableCell key={column.id} style={{ padding: '5px 5px' }}>{value}</TableCell>); }\n                      })\n                      }\n                    </TableRow>\n                  );\n                })}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={[10, 25, 100]}\n          component=\"div\"\n          count={rowCount}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onChangePage={this.handleChangePage}\n          onChangeRowsPerPage={this.handleChangeRowsPerPage}\n        />\n\n        <Dialog\n          open={open}\n          onClose={this.handleClose}\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n          maxWidth=\"lg\"\n          fullWidth\n        >\n          <DialogTitle id=\"alert-dialog-title\">{suggestMealRole === \"moreView\" ? \"Suggest Meal\" : \"Update Meal\"}</DialogTitle>\n          <DialogContent>\n            <form noValidate autoComplete=\"off\">\n              <Row className=\"mb-3\">\n                <Col md={4}>\n                  <TextField id=\"mealLabel\" fullWidth onChange={this.onTextFieldChange} label=\"Meal Name\" required variant=\"filled\" className=\"mb-3\" value={mealLabel} />\n                  <TextField multiline id=\"intro\" fullWidth onChange={this.onTextFieldChange} label=\"Intro\" variant=\"filled\" className=\"mb-3\" value={intro} />\n                </Col>\n                <Col md={4} style={{ marginTop: \"20px\" }}>\n                  <input accept=\"image/*\" id=\"imgSrc\" type=\"file\" className=\"mb-2 pr-4\" onChange={(ev) => this.onTextFieldClick(ev)} />\n                  <img src={imgSrc} width=\"100%\"></img>\n                </Col>\n                <Col md={4} style={{ marginTop: \"20px\", textAlign: \"center\" }}>\n                  <img src={loading_imgSrc} width=\"70%\" height=\"auto\" alt=\"\" />\n\n                </Col>\n              </Row>\n\n              <hr />\n              <Row className=\"mb-2\">\n                <Col md={12}>\n                  <ChipInput\n                    label=\"IngredientsList\"\n                    value={this.state.ingredientStrings}\n                    onAdd={(chip) => this.handleAddIngredientChip(chip)}\n                    placeholder=\"e.g 1 Onion, 2 Cups of Water, etc\"\n                    onDelete={(chip, index) => this.handleDeleteIngredientChip(chip, index)}\n                    variant=\"filled\"\n                    fullWidth\n                    className=\"mb-2\"\n                  />\n                </Col>\n              </Row>\n\n              {\n                this.state.ingredientGroupList &&\n                this.state.ingredientGroupList.map((data, index) => (\n                  <div key={index} className=\"mb-3\" style={{ margin: \"10px\", padding: \"10px\", backgroundColor: \"white\", boxShadow: \"1px 1px 4px 2px #00000030\" }}>\n                    <Row style={{ justifyContent: \"flex-end\" }}>\n                      <i className=\"fa fa-remove\" style={{ fontSize: \"50%\", marginTop: \"0px\", marginRight: \"15px\" }} onClick={() => this.onHandleIngredientItem(index)}></i>\n                    </Row>\n                    <Row >\n                      <Col md={5} className=\"mb-2\" style={{ overflowWrap: \"break-word\" }}>\n                        <div className=\"card-ingredient-content\">\n                          <div><span style={{ fontWeight: \"600\" }}>1. Product &emsp;&emsp;&nbsp; :</span> {data.product}</div>\n                          <div><span style={{ fontWeight: \"600\" }}>2. Quantity&emsp;&emsp; :</span> {data.quantity}</div>\n                          <div><span style={{ fontWeight: \"600\" }}>3. Measurement:</span> {data.measurement}</div>\n\n                          <input accept=\"image/*\" id=\"imgSrc1\" type=\"file\" className=\"mb-2 ml-3 mt-3 \" onChange={(ev) => this.onUpdateIngredientImg(ev, index)} />\n                        </div>\n                      </Col>\n                      <Col md={4} className=\"mb-2\" style={{ textAlign: \"center\" }}>\n                        <img className=\"mb-2\" src={data.productImgPath} width=\"auto\" height=\"150px\" alt=\"\" />\n\n                      </Col>\n                      <Col md={3} className=\"mb-2\"></Col>\n                    </Row>\n                  </div>\n                ))\n              }\n\n              <Row className=\"mb-1\">\n                <Col md={4}>\n                  <Autocomplete\n                    id=\"currentIngredient\"\n                    options={this.products.map((option) => option)}\n                    onChange={(ev, val) => this.handleIngredientDropdownChange(ev, val)}\n                    onInputChange={(ev, val) => this.handleProductName(ev, val)}\n                    freeSolo\n                    renderInput={(params) => (<TextField {...params} label=\"Ingredient..\" variant=\"filled\" />)}\n                    fullWidth\n                    className=\"mb-3\"\n                    value={currentIngredient}\n                  />\n                  <TextField fullWidth id=\"currentIngredientQuantity\" type=\"number\" onChange={this.onTextFieldChange} label=\"Quantity\" variant=\"filled\" placeholder=\"1..\" className=\"mb-3\" value={currentIngredientQuantity} />\n                </Col>\n\n                <Col md={4}>\n                  {\n                    this.state.productImgSetting_flag ?\n                      <input accept=\"image/*\" id=\"imgSrc1\" type=\"file\" className=\"mt-3 mb-4\" onChange={(ev) => this.onhandleProductImg(ev)} /> : <div style={{ marginTop: \"70px\" }} />\n                  }\n\n                  <Autocomplete\n                    id=\"currentIngredientMeasurement\"\n                    options={this.measurements.map((option) => option)}\n                    value={currentIngredientMeasurement}\n                    onChange={this.handleIngredientMeasurement}\n                    freeSolo\n                    renderInput={(params) => (<TextField {...params} label=\"Measurement..\" variant=\"filled\" />)}\n                    className=\"mb-3\"\n                  />\n                </Col>\n\n                <Col md={4} style={{ textAlign: \"center\", margin: \"auto\" }}>\n                  <Button variant=\"contained\" color=\"primary\" disableRipple onClick={this.addIngredientToMeal} style={{ color: \"white\" }} className=\"mb-3\" > Add Ingredient</Button>\n                </Col>\n              </Row>\n              <Row className=\"mb-3\">\n                <Col md={4} style={{ textAlign: \"center\", margin: \"auto\" }}>\n                  <TextField id=\"servings\" fullWidth type=\"number\" onChange={this.onTextFieldChange} label=\"Servings\" variant=\"filled\" className=\"mb-2\" placeholder=\"1 person, 2, 4 or 10 people\" style={{ marginTop: \"10px\" }} value={servings} />\n                </Col>\n                <Col md={4} style={{ textAlign: \"center\", margin: \"auto\" }}> </Col>\n                <Col md={4} style={{ textAlign: \"center\", margin: \"auto\" }}> </Col>\n              </Row>\n              <hr />\n\n              {\n                comp_instructions\n                // this.state.instructionGroupList.length > 0 &&\n                // this.state.instructionGroupList.map((data, index)=>(\n                //   <div key={index}  className=\"mb-3\" style={{margin:\"10px\", padding:\"10px\", backgroundColor:\"white\",  boxShadow: \"1px 1px 4px 2px #00000030\"}}>\n                //     <Row style={{justifyContent: \"flex-end\"}}> \n                //       <i className=\"fa fa-remove\" style={{fontSize:\"50%\", marginTop: \"0px\", marginRight: \"15px\"}} onClick={()=>this.onHandleInstructionItem(index)}></i>\n                //     </Row>                        \n                //     <Row >\n                //       <Col md={4}  className=\"mb-2\" style={{overflowWrap: \"break-word\"}}>\n                //         <ol className=\"mdc-list\">\n                //           {data.step.map((chip, index1) => (\n                //             <li className=\"mdc-list-item\" tabIndex=\"0\" key={index1}>\n                //               <span className=\"mdc-list-item__text\">{chip}</span>\n                //             </li>\n                //           ))}\n                //         </ol>\n                //       </Col>\n                //       <Col md={4}  className=\"mb-2\" style={{textAlign: \"center\"}}>\n                //         <img className=\"mb-2\" src={data.image} width=\"auto\" height=\"150px\" alt=\"\"/>\n                //         <input accept=\"image/*\" id=\"imgSrc1\" type=\"file\" className=\"mb-2, ml-3\" onChange={(ev)=>this.onUpdateInstructionImg(ev, index)} />\n                //       </Col>\n                //       <Col md={4}  className=\"mb-2\"></Col>\n                //     </Row>\n                //   </div>\n                // ))\n              }\n\n              <Row className=\"mb-3\">\n                <Col md={12}>\n                  <ChipInput label=\"Instructions\" className=\"mb-2\" fullWidth value={this.state.instructionsChip} onAdd={(chip) => this.handleAddInstructionStep(chip)} onDelete={(chip, index) => this.handleDeleteInstructionsStep(chip, index)} variant=\"filled\" />\n                </Col>\n              </Row>\n              <Row className=\"mb-3\">\n                <Col md={4} className=\"mb-2\">\n                  <input accept=\"image/*\" id=\"imgSrc1\" type=\"file\" className=\"mb-2\" onChange={(ev) => this.onhandleInstructionImg(ev)} />\n                </Col>\n                <Col md={4} style={{ textAlign: \"center\", margin: \"auto\" }}>\n                  <Button variant=\"contained\" color=\"primary\" disableRipple style={{ color: \"white\", width: \"300px\" }} className=\"mb-3\" onClick={this.addInstructionList}  > ADD NEW INSTRUCTION SET</Button>\n                </Col>\n                <Col md={4}> </Col>\n              </Row>\n\n              <Row className=\"mb-3\">\n                <Col md={4}>\n                  <TextField id=\"prepTime\" className=\"mb-2\" type=\"number\" fullWidth onChange={this.onTextFieldChange} label=\"prepTime (mins)\" variant=\"filled\" required value={prepTime} />\n                </Col>\n                <Col md={4}>\n                  <TextField id=\"cookTime\" className=\"mb-2\" type=\"number\" fullWidth onChange={this.onTextFieldChange} label=\"CookTime (mins)\" variant=\"filled\" required value={cookTime} />\n                </Col>\n                <Col md={4}>\n                  {/* <Autocomplete \n                        multiple \n                        limitTags={5}\n                        id=\"tags-filled\" \n                        className=\"mb-2\" \n                        fullWidth \n                        options={this.categories.map((option) => option)} \n                        onChange={(ev,val)=>this.handleCategoryDropdownChange(ev,val)}\n                        freeSolo\n                        renderInput={(params) => (<TextField {...params} variant=\"filled\" label=\"Categories\" placeholder=\"Suggest categories for this meal..\" fullWidth/>)} \n                        // onDelete={(chip, index) =>this.handleDeleteCategoryChip(chip, index)}\n                        value = { categories }\n                        /> */}\n\n                  <Autocomplete\n                    multiple\n                    id=\"tags-standard\"\n                    className=\"mb-2\"\n                    freeSolo\n                    // filterSelectedOptions\n                    options={this.categories.map((option) => option)}\n                    // onChange={(ev,val)=>this.handleCategoryDropdownChange(ev,val)}\n                    onChange={(e, newValue) => this.handleCategoryDropdownChange(newValue)}\n                    // getOptionLabel={option => option}\n                    // renderTags={() => {}}\n                    value={categoryList}\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        variant=\"filled\"\n                        label=\"Categories\"\n                        placeholder=\"Suggest categories for this meal..\"\n                        fullWidth\n                      />\n                    )}\n                  />\n                </Col>\n              </Row>\n              {\n                suggestMealRole !== \"moreView\" &&\n                <Row className=\"mb-5\">\n                  <Col md={4} style={{ textAlign: \"center\", margin: \"auto\" }}>\n                    <ThemeProvider theme={theme}>\n                      <Button variant=\"contained\" className=\"mb-2\" color=\"primary\" size=\"small\" style={{ color: \"white\" }} onClick={() => this.handleUpdateSubmit()}> Update Meal</Button>\n                    </ThemeProvider>\n                  </Col>\n                </Row>\n              }\n              <Row className=\"mb-3\">\n                <Col md={12}>\n                  <ChipInput label=\"Tips\" className=\"mb-2\" fullWidth value={this.state.tips}  variant=\"filled\" />\n                </Col>\n              </Row>\n            </form>\n          </DialogContent>\n        </Dialog>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(ViewSuggestedMeals);\n\n  ///////////////////////////////////////////////////////////////////////////////\n  // getDataFromS3 = (fileName, index) => {\n    // console.log(\"clients gets3 func,\\n i is: \" + index + \" file name is: \" + fileName);\n    // if (fileName) {\n      // let url = 'http://localhost:5000/api/getFromS3/' + fileName;\n\n      // fetch(url, {\n      //   method: 'GET',\n      // }).then(response => {\n      //   console.log(response)\n      //   if (response.status === 200) {\n      //     console.log(\"content returned to be displayed on client\");\n      //     console.log(response.body);\n      //     // console.log(response.blob);\n      //     const responseBody = response.body;\n\n      //     let binaryImageToString = responseBody.toString('base64');\n      //     console.log(binaryImageToString);\n\n      //     console.log('data:image/image/png;base64,' + binaryImageToString);\n          // let imgUrl = 'data:image/image/png;base64,' + binaryImageToString;\n          // let imgUrl = 'https://meal-chunk-images-and-videos.s3.us-west-1.amazonaws.com/'+fileName;\n\n          // this.setState({ contentData: imgUrl });\n          // return response;\n          // return (window.location.href = \"/ViewSuggestedMeals\");\n      //   }\n      // })\n      //   .catch(error => {\n      //     console.log(\"no content returned.. file not found ?\");\n      //     console.log(error);\n      //   });\n\n\n\n      // axios.get(url).then(body => {\n      //   console.log(\"Returns content\");\n\n      //   var content = body.data;\n      //   // console.log(content);\n\n      //   if (content) {\n      //     console.log(\"content returned to be displayed on client\");\n      //     // this.setState({ contentData:content });\n      //     return content;\n      //   }\n      //   else { console.log(\"no content returned.. file not found ?\"); }\n      // }).catch(err => { console.log(err); });\n    // }\n    // else {\n      // No content available to display\n    // }\n\n    // // Create an object and upload it to the Amazon S3 bucket.\n    // const input = {\n    //   Bucket: process.env.REACT_APP_S3_BUCKET, // The name of the bucket. For example, 'sample_bucket_101'.\n    //   Key: fileName // The name of the object.\n    // };\n\n\n    // const run = async (input) => {\n\n    //   console.log(\"input: \");\n    //   console.log(input);\n    //   try {\n\n    //     console.log(client);\n    //     // Create a helper function to convert a ReadableStream to a string.\n    //     const streamToString = (stream) =>\n    //       new Promise((resolve, reject) => {\n    //         const chunks = [];\n    //         stream.on(\"data\", (chunk) => chunks.push(chunk));\n    //         stream.on(\"error\", reject);\n    //         stream.on(\"end\", () => resolve(Buffer.concat(chunks).toString(\"utf8\")));\n    //         // console.log(chunks);\n    //       });\n\n\n    //     // const client = new S3Client(config);\n    //     const command = new GetObjectCommand(input);\n    //     const data = await client.send(command);\n\n    //     console.log(data);\n\n    //     // return false;\n    //   } catch (err) {\n    //     // console.log(client)\n    //     console.log(\"Error\", err);\n\n    //   };\n    // };\n\n    // if (input.Key !== '') {\n    //   run(input);\n    // }\n    // else {\n    //   console.log(\"No  content in instructions group list to check\");\n    // }\n  // }\n\n\n    // var url = \"/get-all-products\";\n    // axios.get(url)\n    //   .then((body) => {\n    //     var productsList = body.data;\n    //     if (productsList && productsList.data.length !== 0) {\n\n    //       console.log(\"returns GET ALL PRODUCTS \");\n    //       for (var i = 0; i < productsList.data.length; i++) {\n    //         this.productsImg_path.push(productsList.data[i].product_image);\n    //       }\n\n    //       console.log(\"PRINTING ALL PRODUCTS LIST\", this.products);\n    //       this.setState({ productsPopulated: true });\n    //     } else { console.log(\"get all products function does not return\"); }\n    //   })\n    //   .catch((err) => { console.log(err); });\n   // get suggested meal images ?\n    // var url = \"/get-suggested-meals-images\"\n    // axios.get(url).then(body => {\n    //   var mealImagesList = body.data;\n    //   if (mealImagesList && mealImagesList.data.length !== 0) {\n    //     console.log(\"meal images does return\");\n    //     this.setState({ mealImages_list: mealImagesList.data });\n    //   }\n    //   else { console.log(\"meal images do not return\"); }\n    //   console.log(mealImagesList);\n    // }).catch(err => { console.log(err); });\n\n        // this.setState({open: true});\n    // this.setState({ suggestMealRole: mealRole, mealLabel: data.label, intro: data.intro, servings: data.servings, formatted_ingredient:data.formatted_ingredient   });\n\n    // const last_ingredient = data.formatted_ingredient[data.formatted_ingredient.length-1];\n    // this.setState({ currentIngredientMeasurement: last_ingredient.measurement, currentIngredientQuantity: last_ingredient.quantity, currentIngredient: last_ingredient.product });\n    // this.setState({ instructionsChip:  data.instructions, prepTime:  data.prepTime, cookTime:  data.cookTime, loading_imgSrc:  data.mealImage, product_slider:  data.product_slider});\n    // const last_slider = data.product_slider[data.product_slider.length-1];\n    // if(!last_slider.flag) {\n    //   this.setState({productImg_path: \"public/products/\"+last_slider.image});\n    // }else{\n    //   this.setState({productImg_path: last_slider.image});\n    // }\n    // this.setState({productImgSetting_flag: false});\n\n    // let temp = [];\n    // for(let i=0; i<data.formatted_ingredient.length; i++)\n    // {\n    //   const last_ingredient = data.formatted_ingredient[i];\n    //   var properIngredientStringSyntax;\n\n    //   if (last_ingredient.quantity === 0) {\n    //     properIngredientStringSyntax = last_ingredient.product;\n    //   }\n    //   else if (last_ingredient.measurement === null )\n    //   {\n    //     properIngredientStringSyntax =\"\" + last_ingredient.quantity + \" \" +  last_ingredient.product;\n    //   }\n    //   else {\n    //     properIngredientStringSyntax =\"\" + last_ingredient.quantity + \" \" +  last_ingredient.measurement+\" of \" + last_ingredient.product;\n    //   }\n    //   temp.push(properIngredientStringSyntax);\n    // }\n    // this.setState({ ingredientStrings: temp });\n    // axios call to get meal image from gridfs\n    // we determined that we should instead make the call inside of the image url src rather than referencing call in src\n        // axios.get(url).then((body) => {\n    //   mealImage = body;\n    //   if (mealImage && mealImage.data.length !== 0) {\n    //     console.log(\"returns specific meal image  \");\n    //     console.log(mealImage);\n    //     console.log(mealImage.data);\n    //     let mealImageData = mealImage.data;\n    //     let binaryImageToString = mealImageData.toString('base64');\n\n    //     let url = 'http://localhost:5000/getOneMongoFileImage/'+data.mealImage;\n\n    //     this.setState({imgSrc: url})\n    //     // for (var i = 0; i < mealImage.data.length; i++) {\n    //     //   this.setState({specificMealImage: mealImage.data[i]})\n    //     //   // this.specificMealImage = mealImage.data[i];\n    //     // }\n    //   } else {\n    //     console.log(\"get specific meal image function does not return\");\n    //   }\n    // })\n    //   .catch((err) => {\n    //     console.log(err);\n    //   });"]},"metadata":{},"sourceType":"module"}