{"ast":null,"code":"import { __awaiter, __generator } from \"tslib\";\nimport { isStreaming } from \"./isStreaming\";\nimport { stringHasher } from \"./stringHasher\";\nexport var getChecksum = function getChecksum(body, _a) {\n  var streamHasher = _a.streamHasher,\n      checksumAlgorithmFn = _a.checksumAlgorithmFn,\n      base64Encoder = _a.base64Encoder;\n  return __awaiter(void 0, void 0, void 0, function () {\n    var digest, _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          digest = isStreaming(body) ? streamHasher(checksumAlgorithmFn, body) : stringHasher(checksumAlgorithmFn, body);\n          _b = base64Encoder;\n          return [4, digest];\n\n        case 1:\n          return [2, _b.apply(void 0, [_c.sent()])];\n      }\n    });\n  });\n};","map":{"version":3,"sources":["/home/chuka/joe/ChopChowSD/node_modules/@aws-sdk/middleware-flexible-checksums/dist-es/getChecksum.js"],"names":["__awaiter","__generator","isStreaming","stringHasher","getChecksum","body","_a","streamHasher","checksumAlgorithmFn","base64Encoder","digest","_b","_c","label","apply","sent"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,WAApB,QAAuC,OAAvC;AACA,SAASC,WAAT,QAA4B,eAA5B;AACA,SAASC,YAAT,QAA6B,gBAA7B;AACA,OAAO,IAAIC,WAAW,GAAG,SAAdA,WAAc,CAAUC,IAAV,EAAgBC,EAAhB,EAAoB;AACzC,MAAIC,YAAY,GAAGD,EAAE,CAACC,YAAtB;AAAA,MAAoCC,mBAAmB,GAAGF,EAAE,CAACE,mBAA7D;AAAA,MAAkFC,aAAa,GAAGH,EAAE,CAACG,aAArG;AACA,SAAOT,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;AACjD,QAAIU,MAAJ,EAAYC,EAAZ;;AACA,WAAOV,WAAW,CAAC,IAAD,EAAO,UAAUW,EAAV,EAAc;AACnC,cAAQA,EAAE,CAACC,KAAX;AACI,aAAK,CAAL;AACIH,UAAAA,MAAM,GAAGR,WAAW,CAACG,IAAD,CAAX,GAAoBE,YAAY,CAACC,mBAAD,EAAsBH,IAAtB,CAAhC,GAA8DF,YAAY,CAACK,mBAAD,EAAsBH,IAAtB,CAAnF;AACAM,UAAAA,EAAE,GAAGF,aAAL;AACA,iBAAO,CAAC,CAAD,EAAIC,MAAJ,CAAP;;AACJ,aAAK,CAAL;AAAQ,iBAAO,CAAC,CAAD,EAAIC,EAAE,CAACG,KAAH,CAAS,KAAK,CAAd,EAAiB,CAACF,EAAE,CAACG,IAAH,EAAD,CAAjB,CAAJ,CAAP;AALZ;AAOH,KARiB,CAAlB;AASH,GAXe,CAAhB;AAYH,CAdM","sourcesContent":["import { __awaiter, __generator } from \"tslib\";\nimport { isStreaming } from \"./isStreaming\";\nimport { stringHasher } from \"./stringHasher\";\nexport var getChecksum = function (body, _a) {\n    var streamHasher = _a.streamHasher, checksumAlgorithmFn = _a.checksumAlgorithmFn, base64Encoder = _a.base64Encoder;\n    return __awaiter(void 0, void 0, void 0, function () {\n        var digest, _b;\n        return __generator(this, function (_c) {\n            switch (_c.label) {\n                case 0:\n                    digest = isStreaming(body) ? streamHasher(checksumAlgorithmFn, body) : stringHasher(checksumAlgorithmFn, body);\n                    _b = base64Encoder;\n                    return [4, digest];\n                case 1: return [2, _b.apply(void 0, [_c.sent()])];\n            }\n        });\n    });\n};\n"]},"metadata":{},"sourceType":"module"}