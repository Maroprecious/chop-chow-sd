{"ast":null,"code":"import { __assign, __awaiter, __generator } from \"tslib\";\nimport { runPolling } from \"./poller\";\nimport { validateWaiterOptions } from \"./utils\";\nimport { waiterServiceDefaults, WaiterState } from \"./waiter\";\n\nvar abortTimeout = function abortTimeout(abortSignal) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    return __generator(this, function (_a) {\n      return [2, new Promise(function (resolve) {\n        abortSignal.onabort = function () {\n          return resolve({\n            state: WaiterState.ABORTED\n          });\n        };\n      })];\n    });\n  });\n};\n\nexport var createWaiter = function createWaiter(options, input, acceptorChecks) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var params, exitConditions;\n    return __generator(this, function (_a) {\n      params = __assign(__assign({}, waiterServiceDefaults), options);\n      validateWaiterOptions(params);\n      exitConditions = [runPolling(params, input, acceptorChecks)];\n\n      if (options.abortController) {\n        exitConditions.push(abortTimeout(options.abortController.signal));\n      }\n\n      if (options.abortSignal) {\n        exitConditions.push(abortTimeout(options.abortSignal));\n      }\n\n      return [2, Promise.race(exitConditions)];\n    });\n  });\n};","map":{"version":3,"sources":["/home/chuka/joe/ChopChowSD/node_modules/@aws-sdk/util-waiter/dist-es/createWaiter.js"],"names":["__assign","__awaiter","__generator","runPolling","validateWaiterOptions","waiterServiceDefaults","WaiterState","abortTimeout","abortSignal","_a","Promise","resolve","onabort","state","ABORTED","createWaiter","options","input","acceptorChecks","params","exitConditions","abortController","push","signal","race"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,WAA9B,QAAiD,OAAjD;AACA,SAASC,UAAT,QAA2B,UAA3B;AACA,SAASC,qBAAT,QAAsC,SAAtC;AACA,SAASC,qBAAT,EAAgCC,WAAhC,QAAmD,UAAnD;;AACA,IAAIC,YAAY,GAAG,SAAfA,YAAe,CAAUC,WAAV,EAAuB;AAAE,SAAOP,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;AAC7F,WAAOC,WAAW,CAAC,IAAD,EAAO,UAAUO,EAAV,EAAc;AACnC,aAAO,CAAC,CAAD,EAAI,IAAIC,OAAJ,CAAY,UAAUC,OAAV,EAAmB;AAClCH,QAAAA,WAAW,CAACI,OAAZ,GAAsB,YAAY;AAAE,iBAAOD,OAAO,CAAC;AAAEE,YAAAA,KAAK,EAAEP,WAAW,CAACQ;AAArB,WAAD,CAAd;AAAiD,SAArF;AACH,OAFM,CAAJ,CAAP;AAGH,KAJiB,CAAlB;AAKH,GAN2D,CAAhB;AAMvC,CANL;;AAOA,OAAO,IAAIC,YAAY,GAAG,SAAfA,YAAe,CAAUC,OAAV,EAAmBC,KAAnB,EAA0BC,cAA1B,EAA0C;AAAE,SAAOjB,SAAS,CAAC,KAAK,CAAN,EAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,YAAY;AACvH,QAAIkB,MAAJ,EAAYC,cAAZ;AACA,WAAOlB,WAAW,CAAC,IAAD,EAAO,UAAUO,EAAV,EAAc;AACnCU,MAAAA,MAAM,GAAGnB,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAKK,qBAAL,CAAT,EAAsCW,OAAtC,CAAjB;AACAZ,MAAAA,qBAAqB,CAACe,MAAD,CAArB;AACAC,MAAAA,cAAc,GAAG,CAACjB,UAAU,CAACgB,MAAD,EAASF,KAAT,EAAgBC,cAAhB,CAAX,CAAjB;;AACA,UAAIF,OAAO,CAACK,eAAZ,EAA6B;AACzBD,QAAAA,cAAc,CAACE,IAAf,CAAoBf,YAAY,CAACS,OAAO,CAACK,eAAR,CAAwBE,MAAzB,CAAhC;AACH;;AACD,UAAIP,OAAO,CAACR,WAAZ,EAAyB;AACrBY,QAAAA,cAAc,CAACE,IAAf,CAAoBf,YAAY,CAACS,OAAO,CAACR,WAAT,CAAhC;AACH;;AACD,aAAO,CAAC,CAAD,EAAIE,OAAO,CAACc,IAAR,CAAaJ,cAAb,CAAJ,CAAP;AACH,KAXiB,CAAlB;AAYH,GAdqF,CAAhB;AAcjE,CAdE","sourcesContent":["import { __assign, __awaiter, __generator } from \"tslib\";\nimport { runPolling } from \"./poller\";\nimport { validateWaiterOptions } from \"./utils\";\nimport { waiterServiceDefaults, WaiterState } from \"./waiter\";\nvar abortTimeout = function (abortSignal) { return __awaiter(void 0, void 0, void 0, function () {\n    return __generator(this, function (_a) {\n        return [2, new Promise(function (resolve) {\n                abortSignal.onabort = function () { return resolve({ state: WaiterState.ABORTED }); };\n            })];\n    });\n}); };\nexport var createWaiter = function (options, input, acceptorChecks) { return __awaiter(void 0, void 0, void 0, function () {\n    var params, exitConditions;\n    return __generator(this, function (_a) {\n        params = __assign(__assign({}, waiterServiceDefaults), options);\n        validateWaiterOptions(params);\n        exitConditions = [runPolling(params, input, acceptorChecks)];\n        if (options.abortController) {\n            exitConditions.push(abortTimeout(options.abortController.signal));\n        }\n        if (options.abortSignal) {\n            exitConditions.push(abortTimeout(options.abortSignal));\n        }\n        return [2, Promise.race(exitConditions)];\n    });\n}); };\n"]},"metadata":{},"sourceType":"module"}